{"version":3,"file":"static/js/main.eeb74193.js","mappings":"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","sources":["AppTheme.ts","src/data/store/store.ts","src/view/screens/actions/Actions.tsx","src/view/screens/comparator/ComparatorForMobile.tsx","src/view/screens/comparator/ComparatorForWeb.tsx","src/view/screens/comparator/Comparator.tsx","src/view/screens/emissions/EmissionsDataTable.tsx","src/view/screens/emissions/EmissionsDistribution.tsx","src/view/screens/emissions/EmissionsEstimationButton.tsx","src/view/screens/emissions/EmissionsTitle.tsx","src/domain/models/everyday-things/clothes/Clothes.ts","src/domain/models/everyday-things/clothes/constants.ts","src/domain/models/everyday-things/consumable-products/constants.ts","src/domain/models/everyday-things/consumable-products/ConsumableProducts.ts","src/domain/models/housing/constants.ts","src/domain/models/constants.ts","src/domain/models/everyday-things/digital/constants.ts","src/domain/models/everyday-things/digital/Digital.ts","src/domain/models/everyday-things/furniture/constants.ts","src/domain/models/everyday-things/furniture/Furniture.ts","src/domain/models/everyday-things/hobbies/constants.ts","src/domain/models/everyday-things/hobbies/Hobbies.ts","src/domain/models/everyday-things/household-appliances/constants.ts","src/domain/models/everyday-things/household-appliances/HouseholdAppliances.ts","src/domain/models/everyday-things/other-products/OtherProducts.ts","src/domain/models/everyday-things/other-products/constants.ts","src/domain/models/everyday-things/pets/constants.ts","src/domain/models/everyday-things/pets/Pets.ts","src/domain/models/everyday-things/tobacco/Tobacco.ts","src/domain/models/everyday-things/tobacco/constants.ts","src/domain/models/everyday-things/EverydayThings.ts","src/domain/models/food/drinks/constants.ts","src/domain/models/food/drinks/Drinks.ts","src/domain/models/food/meals/types.ts","src/domain/models/food/meals/constants.ts","src/domain/models/food/meals/Meals.ts","src/domain/models/food/waste/Waste.ts","src/domain/models/food/waste/constants.ts","src/domain/models/food/Food.ts","src/domain/models/housing/energy/constants.ts","src/domain/models/housing/energy/Energy.ts","src/domain/models/housing/home/Home.ts","src/domain/models/housing/home/constants.ts","src/domain/models/housing/leisure/constants.ts","src/domain/models/housing/leisure/Leisure.ts","src/domain/models/housing/Housing.ts","src/domain/models/public-services/PublicServices.ts","src/domain/models/transport/boat/Boat.ts","src/domain/models/transport/boat/constants.ts","src/domain/models/transport/car/constants.ts","src/domain/models/transport/car/Car.ts","src/domain/models/transport/plane/constants.ts","src/domain/models/transport/plane/Plane.ts","src/domain/models/transport/public-transport/PublicTransport.ts","src/domain/models/transport/public-transport/constants.ts","src/domain/models/transport/two-wheeler/constants.ts","src/domain/models/transport/two-wheeler/TwoWheeler.ts","src/domain/models/transport/Transport.ts","src/data/repositories/EmissionsInMemoryRepository.ts","src/data/store/storeActions.ts","src/data/repositories/EmissionsStoreRepository.ts","src/domain/usecases/computeTotalAnnualFootprint.ts","src/domain/usecases/fetchFood.ts","src/domain/usecases/fetchPublicServices.ts","src/domain/usecases/fetchTransport.ts","src/domain/usecases/updateFood.ts","src/domain/usecases/updateTransport.ts","src/domain/usecases/fetchHousing.ts","src/domain/usecases/updateHousing.ts","src/domain/usecases/fetchEverydayThings.ts","src/domain/usecases/updateEverydayThings.ts","src/common/UsecasesContext.ts","src/domain/models/Categories.ts","src/view/view-models/Footprint.ts","src/view/view-models/useFootprints.ts","src/view/screens/emissions/Emissions.tsx","src/view/screens/objectives/Objectives.tsx","src/view/screens/profile/ProfileCategoryCard.tsx","src/view/screens/profile/Profile.tsx","src/view/screens/profile/useProfile.ts","src/domain/models/food/types.ts","src/view/screens/profile/components/styles.ts","src/view/screens/profile/components/ColumnContainer.tsx","src/view/screens/profile/components/ListContentContainer.tsx","src/view/screens/profile/components/ListItemDivider.tsx","src/view/screens/profile/components/RowContainer.tsx","src/view/screens/profile/components/ListTitle.tsx","src/view/screens/profile/components/ListAccordion.tsx","src/view/components/forms/NumericInput.tsx","src/types/utils.ts","src/view/screens/profile/utils/useUpdateForm.ts","src/view/screens/profile/food/drinks/DrinksSection.tsx","src/view/screens/profile/food/drinks/useDrinks.tsx","src/view/screens/profile/food/meals/MealsSection.tsx","src/view/screens/profile/food/meals/useMeals.ts","src/view/screens/profile/food/waste/WasteSection.tsx","src/view/screens/profile/food/waste/useWaste.ts","src/view/screens/profile/food/Food.tsx","src/view/screens/profile/transport/boat/BoatSection.tsx","src/view/screens/profile/transport/boat/useBoat.ts","src/view/screens/profile/transport/car/CarSection.tsx","src/view/screens/profile/transport/car/useCar.ts","src/view/screens/profile/transport/other/OtherSection.tsx","src/view/screens/profile/transport/plane/PlaneSection.tsx","src/view/screens/profile/transport/plane/usePlane.ts","src/view/screens/profile/transport/public-transport/PublicTransportSection.tsx","src/view/screens/profile/transport/public-transport/usePublicTransport.ts","src/view/screens/profile/transport/two-wheeler/TwoWheelerSection.tsx","src/view/screens/profile/transport/two-wheeler/useTwoWheeler.ts","src/view/screens/profile/transport/Transport.tsx","src/view/screens/profile/housing/home/HomeSection.tsx","src/view/screens/profile/housing/home/useHome.ts","src/view/screens/profile/housing/energy/EnergySection.tsx","src/view/screens/profile/housing/energy/useEnergy.ts","src/view/screens/profile/housing/leisure/useLeisure.ts","src/view/screens/profile/housing/leisure/Leisure.tsx","src/view/screens/profile/housing/Housing.tsx","src/view/screens/profile/everyday-things/clothes/useClothes.ts","src/view/screens/profile/everyday-things/clothes/Clothes.tsx","src/view/screens/profile/everyday-things/pets/usePets.ts","src/view/screens/profile/everyday-things/pets/Pets.tsx","src/view/screens/profile/everyday-things/household-appliances/useHouseholdAppliances.ts","src/domain/models/everyday-things/types.ts","src/view/screens/profile/everyday-things/household-appliances/HouseholdAppliances.tsx","src/view/screens/profile/everyday-things/furniture/useFurniture.ts","src/view/screens/profile/everyday-things/furniture/Furniture.tsx","src/view/screens/profile/everyday-things/digital/useDigital.ts","src/view/screens/profile/everyday-things/digital/Digital.tsx","src/view/screens/profile/everyday-things/hobbies/useHobbies.ts","src/view/screens/profile/everyday-things/hobbies/Hobbies.tsx","src/view/screens/profile/everyday-things/consumable-products/useConsumableProducts.ts","src/view/screens/profile/everyday-things/consumable-products/ConsumableProducts.tsx","src/view/screens/profile/everyday-things/tobacco/useTobacco.ts","src/view/screens/profile/everyday-things/tobacco/Tobacco.tsx","src/view/screens/profile/everyday-things/other-products/useOtherProducts.ts","src/view/screens/profile/everyday-things/other-products/OtherProducts.tsx","src/view/screens/profile/everyday-things/EverydayThings.tsx","src/common/AppNavigation.tsx","src/serviceWorkerRegistration.js","src/view/translations/i18n.js","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { DarkTheme as NavigationTheme } from \"@react-navigation/native\";\nimport merge from \"deepmerge\";\nimport { MD3DarkTheme } from \"react-native-paper\";\n\nconst MaterialTheme = {\n  ...MD3DarkTheme,\n  colors: {\n    ...MD3DarkTheme.colors,\n    primary: \"#59B158\",\n    onPrimary: \"#111\",\n    inversePrimary: \"#fff\",\n  },\n};\n\nexport const AppTheme = merge(NavigationTheme, MaterialTheme);\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport deepMerge from \"deepmerge\";\nimport { create } from \"zustand\";\nimport { createJSONStorage, devtools, persist } from \"zustand/middleware\";\n\nimport { Food } from \"@domain/models/food/Food\";\nimport { Transport } from \"@domain/models/transport/Transport\";\nimport { Housing } from \"@domain/models/housing/Housing\";\nimport { EverydayThings } from \"@domain/models/everyday-things/EverydayThings\";\n\nexport type AppState = {\n  transport: Transport;\n  food: Food;\n  housing: Housing;\n  everydayThings: EverydayThings;\n};\n\nconst appStore = (): AppState => ({\n  transport: new Transport({}),\n  food: new Food({}),\n  housing: new Housing({}),\n  everydayThings: new EverydayThings({}),\n});\n\nconst middlewares = (f: any) =>\n  devtools(\n    persist<AppState>(f, {\n      name: \"app-storage\",\n      storage: createJSONStorage(() => AsyncStorage),\n      merge: (persistedState, currentState) =>\n        deepMerge(currentState, persistedState as AppState),\n    }),\n  );\n\nexport const useAppStore = create<\n  AppState,\n  [[\"zustand/devtools\", never], [\"zustand/persist\", unknown]]\n>(middlewares(appStore));\n","import { useTranslation } from \"react-i18next\";\nimport { Text } from \"react-native-paper\";\n\nexport const Actions = () => {\n  const { t } = useTranslation([\"common\"]);\n\n  return (\n    <Text style={{ textAlign: \"center\", marginTop: 10 }}>\n      {t(\"comingSoon\")}\n    </Text>\n  );\n};\n","import WebView from \"react-native-webview\";\n\nexport const ComparatorForMobile = () => {\n  return (\n    <WebView\n      originWhitelist={[\"*\"]}\n      source={{\n        html: `<iFrame src='<script id=\"datagir-impact-co2\" src=\"https://impactco2.fr/iframe.js\" data-type=\"convertisseur\" data-search=\"?theme=night\"></script>' />`,\n      }}\n    />\n  );\n};\n","import { useEffect, useRef, RefObject, useState } from \"react\";\nimport { View } from \"react-native\";\nimport { ActivityIndicator } from \"react-native-paper\";\n\nexport const ComparatorForWeb = () => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  const ademeComparator: RefObject<HTMLDivElement> | null = useRef(null);\n\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.id = \"datagir-impact-co2\";\n    script.src = \"https://impactco2.fr/iframe.js\";\n    script.dataset.type = \"convertisseur\";\n    script.dataset.search = \"?theme=night\";\n    script.async = true;\n    script.onload = () => {\n      ademeComparator.current?.querySelector(\"div\")?.remove();\n      setTimeout(() => {\n        setIsLoading(false);\n        ademeComparator.current?.setAttribute(\"style\", \"visibility: visible\");\n      }, 500);\n    };\n    ademeComparator.current?.appendChild(script);\n  }, []);\n\n  return (\n    <>\n      {isLoading && (\n        <View\n          style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n      <div style={{ overflow: \"auto\" }}>\n        <div ref={ademeComparator} style={{ visibility: \"hidden\" }} />\n      </div>\n    </>\n  );\n};\n","import { Platform } from \"react-native\";\n\nimport { ComparatorForMobile } from \"@view/screens/comparator/ComparatorForMobile\";\nimport { ComparatorForWeb } from \"@view/screens/comparator/ComparatorForWeb\";\n\nexport const Comparator = () =>\n  Platform.OS === \"web\" ? <ComparatorForWeb /> : <ComparatorForMobile />;\n","import { useTranslation } from \"react-i18next\";\nimport { View } from \"react-native\";\nimport { DataTable, Text, useTheme } from \"react-native-paper\";\n\nimport { Footprints } from \"@view/view-models/Footprint\";\n\ntype Props = {\n  footprints: Footprints;\n};\n\nexport const EmissionsDataTable = ({ footprints }: Props) => {\n  const { t } = useTranslation([\"emissions\", \"common\"]);\n  const { colors } = useTheme();\n\n  return (\n    <DataTable>\n      <DataTable.Header>\n        <DataTable.Title>{t(\"category\")}</DataTable.Title>\n        <DataTable.Title numeric>{t(\"annualFootprint\")}</DataTable.Title>\n        <DataTable.Title numeric>{t(\"part\")}</DataTable.Title>\n      </DataTable.Header>\n\n      {Object.values(footprints)\n        .sort((a, b) => b.footprint - a.footprint)\n        .map((emissionsCategory) => (\n          <DataTable.Row key={emissionsCategory.category}>\n            <DataTable.Cell style={{ alignItems: \"center\" }}>\n              {t(`categories.${emissionsCategory.category}`)}\n            </DataTable.Cell>\n\n            <DataTable.Cell numeric>\n              {emissionsCategory.footprint} {t(\"common:footprintKg\")}\n            </DataTable.Cell>\n\n            <DataTable.Cell numeric>\n              <View\n                style={{\n                  width: 30,\n                  height: 30,\n                  borderRadius: 30 / 2,\n                  backgroundColor: emissionsCategory.color,\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Text style={{ color: colors.background, fontSize: 12 }}>\n                  {emissionsCategory.part}%\n                </Text>\n              </View>\n            </DataTable.Cell>\n          </DataTable.Row>\n        ))}\n    </DataTable>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport { useTheme } from \"react-native-paper\";\nimport { VictoryLabel, VictoryPie } from \"victory\";\n\nimport { Footprints } from \"@view/view-models/Footprint\";\n\nconst pieWidth = 250;\nconst pieHeight = 250;\n\ntype Props = {\n  footprints: Footprints;\n  totalFootprint: number;\n};\n\nexport const EmissionsDistribution = ({\n  footprints,\n  totalFootprint,\n}: Props) => {\n  const { t } = useTranslation(\"emissions\");\n  const { colors } = useTheme();\n  const footprintByCategories = Object.values(footprints);\n\n  return (\n    <svg viewBox={`0 0 ${pieWidth} ${pieHeight}`}>\n      <VictoryPie\n        colorScale={footprintByCategories.map(({ color }) => color)}\n        standalone={false}\n        width={pieWidth}\n        height={pieHeight}\n        radius={110}\n        innerRadius={60}\n        labelRadius={75}\n        style={{ labels: { fontSize: 17 } }}\n        data={footprintByCategories.map(({ icon, footprint }) => ({\n          x: icon,\n          y: footprint,\n        }))}\n      />\n      <VictoryLabel\n        textAnchor=\"middle\"\n        style={{ fontSize: 20, fill: colors.onBackground }}\n        x={pieWidth / 2}\n        y={pieHeight / 2}\n        text={`${(totalFootprint / 1000).toFixed(2)}\\ntCO2e/${t(\"year\")}`}\n      />\n    </svg>\n  );\n};\n","import { useNavigation } from \"@react-navigation/native\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button, useTheme } from \"react-native-paper\";\n\nimport { AppNavigationProp } from \"@common/AppNavigation\";\n\nexport const EmissionsEstimationButton = () => {\n  const { t } = useTranslation(\"emissions\");\n  const { colors } = useTheme();\n  const { navigate } = useNavigation<AppNavigationProp>();\n\n  return (\n    <Button\n      icon=\"grass\"\n      mode=\"outlined\"\n      contentStyle={{ height: 45 }}\n      labelStyle={{ color: colors.primary }}\n      style={{ borderColor: colors.primary }}\n      onPress={() => navigate(\"Profile\")}\n    >\n      {t(\"estimate\")}\n    </Button>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport { Text } from \"react-native-paper\";\n\nexport const EmissionsTitle = () => {\n  const { t } = useTranslation(\"emissions\");\n\n  return (\n    <Text variant=\"titleLarge\" style={{ paddingTop: 10, textAlign: \"center\" }}>\n      {t(\"impactDistributionTitle\")}\n    </Text>\n  );\n};\n","import { WithAnnualFootprint } from \"@domain/models/types\";\nimport {\n  bigItemFootprint,\n  coatFootprint,\n  dressFootprint,\n  pantFootprint,\n  shirtFootprint,\n  shoesFootprint,\n  shortFootprint,\n  smallItemFootprint,\n  sweatShirtFootprint,\n  sweaterFootprint,\n  tshirtFootprint,\n} from \"./constants\";\n\ntype Props = {\n  tshirts?: number;\n  shirts?: number;\n  sweatshirts?: number;\n  sweaters?: number;\n  shorts?: number;\n  coats?: number;\n  dresses?: number;\n  pants?: number;\n  shoes?: number;\n  smallItems?: number;\n  bigItems?: number;\n};\n\nexport class Clothes implements WithAnnualFootprint {\n  tshirts: number;\n  shirts: number;\n  sweatshirts: number;\n  sweaters: number;\n  shorts: number;\n  coats: number;\n  dresses: number;\n  pants: number;\n  shoes: number;\n  smallItems: number;\n  bigItems: number;\n\n  constructor({\n    tshirts,\n    shirts,\n    sweatshirts,\n    sweaters,\n    shorts,\n    coats,\n    dresses,\n    pants,\n    shoes,\n    smallItems,\n    bigItems,\n  }: Props) {\n    this.tshirts = tshirts ?? 0;\n    this.shirts = shirts ?? 0;\n    this.sweatshirts = sweatshirts ?? 0;\n    this.sweaters = sweaters ?? 0;\n    this.shorts = shorts ?? 0;\n    this.coats = coats ?? 0;\n    this.dresses = dresses ?? 0;\n    this.pants = pants ?? 0;\n    this.shoes = shoes ?? 0;\n    this.smallItems = smallItems ?? 0;\n    this.bigItems = bigItems ?? 0;\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      this.tshirtsAnnualFootprint +\n        this.shirtsAnnualFootprint +\n        this.sweatshirtsAnnualFootprint +\n        this.sweatersAnnualFootprint +\n        this.shortsAnnualFootprint +\n        this.coatsAnnualFootprint +\n        this.dressesAnnualFootprint +\n        this.pantsAnnualFootprint +\n        this.shoesAnnualFootprint +\n        this.smallItemsAnnualFootprint +\n        this.bigItemsAnnualFootprint,\n    );\n  }\n\n  private get tshirtsAnnualFootprint(): number {\n    return this.tshirts * tshirtFootprint;\n  }\n\n  private get shirtsAnnualFootprint(): number {\n    return this.shirts * shirtFootprint;\n  }\n\n  private get sweatshirtsAnnualFootprint(): number {\n    return this.sweatshirts * sweatShirtFootprint;\n  }\n\n  private get sweatersAnnualFootprint(): number {\n    return this.sweaters * sweaterFootprint;\n  }\n\n  private get shortsAnnualFootprint(): number {\n    return this.shorts * shortFootprint;\n  }\n\n  private get coatsAnnualFootprint(): number {\n    return this.coats * coatFootprint;\n  }\n\n  private get dressesAnnualFootprint(): number {\n    return this.dresses * dressFootprint;\n  }\n\n  private get pantsAnnualFootprint(): number {\n    return this.pants * pantFootprint;\n  }\n\n  private get shoesAnnualFootprint(): number {\n    return this.shoes * shoesFootprint;\n  }\n\n  private get smallItemsAnnualFootprint(): number {\n    return this.smallItems * smallItemFootprint;\n  }\n\n  private get bigItemsAnnualFootprint(): number {\n    return this.bigItems * bigItemFootprint;\n  }\n}\n","// https://prod-basecarbonesolo.ademe-dri.fr/documentation/UPLOAD_DOC_FR/\n\nexport const tshirtFootprint = 5.35;\n\nexport const pantFootprint = 23.2;\n\nexport const shortFootprint = 6.4;\n\nexport const sweatShirtFootprint = 27.4;\n\nexport const dressFootprint = 48.4;\n\nexport const shirtFootprint = 10.7;\n\nexport const sweaterFootprint = 39.2;\n\nexport const shoesFootprint = 16.47;\n\nexport const coatFootprint = 85.8;\n\nexport const smallItemFootprint = 5;\n\nexport const bigItemFootprint = 40;\n","const multiPurposeCleanerFootprint = 0.656;\n\nconst dishSoapFootprint = 1.48;\n\nconst laundryDetergentFootprint = 0.838;\n\nconst showerGelFootprint = 1.77;\n\nconst shampooFootprint = 0.595;\n\nconst cleaningProductsFootprint =\n  (multiPurposeCleanerFootprint +\n    dishSoapFootprint +\n    laundryDetergentFootprint) /\n  3;\n\nconst hygieneProductsFootprint = (showerGelFootprint + shampooFootprint) / 2;\n\nexport const consumableProductsFootprint =\n  (cleaningProductsFootprint + hygieneProductsFootprint) / 2;\n","import { WithAnnualFootprint } from \"@domain/models/types\";\nimport { consumableProductsFootprint } from \"./constants\";\n\nexport type ConsumptionFrequency = \"low\" | \"medium\" | \"high\";\n\ntype Props = {\n  consumption?: ConsumptionFrequency;\n};\n\nexport class ConsumableProducts implements WithAnnualFootprint {\n  consumption: ConsumptionFrequency;\n\n  constructor({ consumption }: Props) {\n    this.consumption = consumption ?? \"medium\";\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(this.monthlyFootprint * 12);\n  }\n\n  // eslint-disable-next-line getter-return\n  private get monthlyFootprint(): number {\n    switch (this.consumption) {\n      case \"low\":\n        return consumableProductsFootprint;\n      case \"medium\":\n        return consumableProductsFootprint * 2;\n      case \"high\":\n        return consumableProductsFootprint * 5;\n    }\n  }\n}\n","export const isAnApartmentDefaultValue = true;\n\nexport const defaultNumberOfOccupants = 2;\n\nexport const defaultLivingSpace = 70; // m2\n","export const weeksInYear = 52;\n\nexport const daysInYear = 365;\n","import { Preservation } from \"@domain/models/everyday-things/types\";\n\nexport const defaultInternetDailyHours = 2;\nexport const defaultMobilePhones = 1;\nexport const defaultLaptops = 1;\nexport const defaultTelevisions = 1;\n\n// https://www.carbonbrief.org/factcheck-what-is-the-carbon-footprint-of-streaming-video-on-netflix\nconst internetHourlyConsumption = 0.077; // kWh/h\nconst electricityIntensity = 0.052; // kgCO2e/h\nexport const internetHourlyFootprint =\n  internetHourlyConsumption * electricityIntensity;\n\nexport const mobilePhone = {\n  footprint: 57,\n  lifetimeInYears: 2.5,\n};\n\nexport const camera = {\n  footprint: 30,\n  lifetimeInYears: 5,\n};\n\nexport const homeCinema = {\n  footprint: 133,\n  lifetimeInYears: 8,\n};\n\nexport const laptop = {\n  footprint: 156,\n  lifetimeInYears: 3,\n};\n\nexport const desktopComputer = {\n  footprint: 296 + 248,\n  lifetimeInYears: 6,\n};\n\nexport const tablet = {\n  footprint: 63,\n  lifetimeInYears: 3,\n};\n\nexport const television = {\n  footprint: 371,\n  lifetimeInYears: 8,\n};\n\nexport const videoProjector = {\n  footprint: 94,\n  lifetimeInYears: 5,\n};\n\nexport const bluetoothSpeaker = {\n  footprint: 8.98,\n  lifetimeInYears: 5,\n};\n\nexport const vocalSpeaker = {\n  footprint: 30.7,\n  lifetimeInYears: 5,\n};\n\nexport const smartWatch = {\n  footprint: 9.72,\n  lifetimeInYears: 4,\n};\n\nexport const gamingConsole = {\n  footprint: 73.7,\n  lifetimeInYears: 6.5,\n};\n\nexport const portableConsole = {\n  footprint: 30.8,\n  lifetimeInYears: 6.5,\n};\n\nexport const preservationCoefficient = (preservation: Preservation) => {\n  switch (preservation) {\n    case \"none\":\n      return 1 / 2;\n    case \"low\":\n      return 2 / 3;\n    case \"medium\":\n      return 1;\n    case \"high\":\n      return 4 / 3;\n  }\n};\n","import { Preservation } from \"@domain/models/everyday-things/types\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\nimport { defaultNumberOfOccupants } from \"@domain/models/housing/constants\";\nimport { daysInYear } from \"@domain/models/constants\";\nimport {\n  bluetoothSpeaker,\n  camera,\n  defaultInternetDailyHours,\n  defaultLaptops,\n  defaultMobilePhones,\n  defaultTelevisions,\n  desktopComputer,\n  gamingConsole,\n  homeCinema,\n  internetHourlyFootprint,\n  laptop,\n  mobilePhone,\n  portableConsole,\n  preservationCoefficient,\n  smartWatch,\n  tablet,\n  television,\n  videoProjector,\n  vocalSpeaker,\n} from \"./constants\";\n\ntype Props = {\n  occupants?: number;\n  preservation?: Preservation;\n  internetDailyHours?: number;\n  mobilePhones?: number;\n  televisions?: number;\n  laptops?: number;\n  desktopComputers?: number;\n  tablets?: number;\n  videoProjectors?: number;\n  cameras?: number;\n  homeCinemas?: number;\n  bluetoothSpeakers?: number;\n  vocalSpeakers?: number;\n  smartWatches?: number;\n  gamingConsoles?: number;\n  portableConsoles?: number;\n};\n\nexport class Digital implements WithAnnualFootprint {\n  occupants: number;\n  preservation: Preservation;\n  internetDailyHours: number;\n  mobilePhones: number;\n  televisions: number;\n  laptops: number;\n  desktopComputers: number;\n  tablets: number;\n  videoProjectors: number;\n  cameras: number;\n  homeCinemas: number;\n  bluetoothSpeakers: number;\n  vocalSpeakers: number;\n  smartWatches: number;\n  gamingConsoles: number;\n  portableConsoles: number;\n\n  constructor({\n    occupants,\n    preservation,\n    internetDailyHours,\n    mobilePhones,\n    televisions,\n    laptops,\n    desktopComputers,\n    tablets,\n    videoProjectors,\n    cameras,\n    homeCinemas,\n    bluetoothSpeakers,\n    vocalSpeakers,\n    smartWatches,\n    gamingConsoles,\n    portableConsoles,\n  }: Props) {\n    this.occupants = occupants ?? defaultNumberOfOccupants;\n    this.preservation = preservation ?? \"medium\";\n    this.internetDailyHours = internetDailyHours ?? defaultInternetDailyHours;\n    this.mobilePhones = mobilePhones ?? defaultMobilePhones;\n    this.televisions = televisions ?? defaultTelevisions;\n    this.laptops = laptops ?? defaultLaptops;\n    this.desktopComputers = desktopComputers ?? 0;\n    this.tablets = tablets ?? 0;\n    this.videoProjectors = videoProjectors ?? 0;\n    this.cameras = cameras ?? 0;\n    this.homeCinemas = homeCinemas ?? 0;\n    this.bluetoothSpeakers = bluetoothSpeakers ?? 0;\n    this.vocalSpeakers = vocalSpeakers ?? 0;\n    this.smartWatches = smartWatches ?? 0;\n    this.gamingConsoles = gamingConsoles ?? 0;\n    this.portableConsoles = portableConsoles ?? 0;\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      this.internetAnnualFootprint +\n        this.mobilePhonesAnnualFootprint +\n        this.televisionsAnnualFootprint +\n        this.laptopsAnnualFootprint +\n        this.desktopComputersAnnualFootprint +\n        this.tabletsAnnualFootprint +\n        this.videoProjectorsAnnualFootprint +\n        this.camerasAnnualFootprint +\n        this.homeCinemasAnnualFootprint +\n        this.bluetoothSpeakersAnnualFootprint +\n        this.vocalSpeakersAnnualFootprint +\n        this.smartWatchesAnnualFootprint +\n        this.gamingConsolesAnnualFootprint +\n        this.portableConsolesAnnualFootprint,\n    );\n  }\n\n  public get internetAnnualFootprint(): number {\n    return Number(\n      (internetHourlyFootprint * this.internetDailyHours * daysInYear).toFixed(\n        2,\n      ),\n    );\n  }\n\n  private get mobilePhonesAnnualFootprint(): number {\n    return (\n      this.mobilePhones *\n      (mobilePhone.footprint /\n        (mobilePhone.lifetimeInYears *\n          preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get televisionsAnnualFootprint(): number {\n    return (\n      (this.televisions *\n        (television.footprint /\n          (television.lifetimeInYears *\n            preservationCoefficient(this.preservation)))) /\n      this.occupants\n    );\n  }\n\n  private get laptopsAnnualFootprint(): number {\n    return (\n      this.laptops *\n      (laptop.footprint /\n        (laptop.lifetimeInYears * preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get desktopComputersAnnualFootprint(): number {\n    return (\n      (this.desktopComputers *\n        (desktopComputer.footprint /\n          (desktopComputer.lifetimeInYears *\n            preservationCoefficient(this.preservation)))) /\n      this.occupants\n    );\n  }\n\n  private get tabletsAnnualFootprint(): number {\n    return (\n      this.tablets *\n      (tablet.footprint /\n        (tablet.lifetimeInYears * preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get videoProjectorsAnnualFootprint(): number {\n    return (\n      (this.videoProjectors *\n        (videoProjector.footprint /\n          (videoProjector.lifetimeInYears *\n            preservationCoefficient(this.preservation)))) /\n      this.occupants\n    );\n  }\n\n  private get camerasAnnualFootprint(): number {\n    return (\n      this.cameras *\n      (camera.footprint /\n        (camera.lifetimeInYears * preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get homeCinemasAnnualFootprint(): number {\n    return (\n      (this.homeCinemas *\n        (homeCinema.footprint /\n          (homeCinema.lifetimeInYears *\n            preservationCoefficient(this.preservation)))) /\n      this.occupants\n    );\n  }\n\n  private get bluetoothSpeakersAnnualFootprint(): number {\n    return (\n      this.bluetoothSpeakers *\n      (bluetoothSpeaker.footprint /\n        (bluetoothSpeaker.lifetimeInYears *\n          preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get vocalSpeakersAnnualFootprint(): number {\n    return (\n      (this.vocalSpeakers *\n        (vocalSpeaker.footprint /\n          (vocalSpeaker.lifetimeInYears *\n            preservationCoefficient(this.preservation)))) /\n      this.occupants\n    );\n  }\n\n  private get smartWatchesAnnualFootprint(): number {\n    return (\n      this.smartWatches *\n      (smartWatch.footprint /\n        (smartWatch.lifetimeInYears *\n          preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get gamingConsolesAnnualFootprint(): number {\n    return (\n      (this.gamingConsoles *\n        (gamingConsole.footprint /\n          (gamingConsole.lifetimeInYears *\n            preservationCoefficient(this.preservation)))) /\n      this.occupants\n    );\n  }\n\n  private get portableConsolesAnnualFootprint(): number {\n    return (\n      this.portableConsoles *\n      (portableConsole.footprint /\n        (portableConsole.lifetimeInYears *\n          preservationCoefficient(this.preservation)))\n    );\n  }\n}\n","import { Preservation } from \"@domain/models/everyday-things/types\";\n\nexport const wardrobe = {\n  footprint: 907,\n  lifetimeInYears: 10,\n};\n\nexport const couch = {\n  footprint: 186,\n  lifetimeInYears: 10,\n};\n\nexport const mattress = {\n  footprint: 258.5,\n  lifetimeInYears: 10,\n};\n\nexport const bed = {\n  footprint: 87.5,\n  lifetimeInYears: 10,\n};\n\nexport const table = {\n  footprint: 60.1,\n  lifetimeInYears: 10,\n};\n\nexport const chair = {\n  footprint: 25.95,\n  lifetimeInYears: 10,\n};\n\nconst furnitureFootprintPerKg = 1.833; // kgCO2e/kg\n\nexport const smallFurniture = {\n  footprint: furnitureFootprintPerKg * 5,\n  lifetimeInYears: 10,\n};\n\nexport const bigFurniture = {\n  footprint: furnitureFootprintPerKg * 25,\n  lifetimeInYears: 10,\n};\n\nexport const woodenGardenFurniture = {\n  footprint: 69.2,\n  lifetimeInYears: 10,\n};\n\nexport const resinOrMetalGardenFurniture = {\n  footprint: 249,\n  lifetimeInYears: 10,\n};\n\nexport const preservationCoefficient = (preservation: Preservation) => {\n  switch (preservation) {\n    case \"none\":\n      return 1 / 2;\n    case \"low\":\n      return 2 / 3;\n    case \"medium\":\n      return 1;\n    case \"high\":\n      return 4 / 3;\n  }\n};\n","import { Preservation } from \"@domain/models/everyday-things/types\";\nimport { defaultNumberOfOccupants } from \"@domain/models/housing/constants\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\nimport {\n  bed,\n  bigFurniture,\n  chair,\n  couch,\n  mattress,\n  preservationCoefficient,\n  resinOrMetalGardenFurniture,\n  smallFurniture,\n  table,\n  wardrobe,\n  woodenGardenFurniture,\n} from \"./constants\";\n\ntype Props = {\n  occupants?: number;\n  preservation?: Preservation;\n  wardrobes?: number;\n  couches?: number;\n  mattresses?: number;\n  beds?: number;\n  tables?: number;\n  chairs?: number;\n  smallFurnitures?: number;\n  bigFurnitures?: number;\n  woodenGardenFurnitures?: number;\n  resinOrMetalGardenFurnitures?: number;\n};\n\nexport class Furniture implements WithAnnualFootprint {\n  occupants: number;\n  preservation: Preservation;\n  wardrobes: number;\n  couches: number;\n  mattresses: number;\n  beds: number;\n  tables: number;\n  chairs: number;\n  smallFurnitures: number;\n  bigFurnitures: number;\n  woodenGardenFurnitures: number;\n  resinOrMetalGardenFurnitures: number;\n\n  constructor({\n    occupants,\n    preservation,\n    wardrobes,\n    couches,\n    mattresses,\n    beds,\n    tables,\n    chairs,\n    smallFurnitures,\n    bigFurnitures,\n    woodenGardenFurnitures,\n    resinOrMetalGardenFurnitures,\n  }: Props) {\n    this.occupants = occupants ?? defaultNumberOfOccupants;\n    this.preservation = preservation ?? \"medium\";\n    this.wardrobes = wardrobes ?? 0;\n    this.couches = couches ?? 0;\n    this.mattresses = mattresses ?? 0;\n    this.beds = beds ?? 0;\n    this.tables = tables ?? 0;\n    this.chairs = chairs ?? 0;\n    this.smallFurnitures = smallFurnitures ?? 0;\n    this.bigFurnitures = bigFurnitures ?? 0;\n    this.woodenGardenFurnitures = woodenGardenFurnitures ?? 0;\n    this.resinOrMetalGardenFurnitures = resinOrMetalGardenFurnitures ?? 0;\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      (this.wardrobesAnnualFootprint +\n        this.couchesAnnualFootprint +\n        this.mattressesAnnualFootprint +\n        this.bedsAnnualFootprint +\n        this.tablesAnnualFootprint +\n        this.chairsAnnualFootprint +\n        this.smallFurnituresAnnualFootprint +\n        this.bigFurnituresAnnualFootprint +\n        this.woodenGardenFurnituresAnnualFootprint +\n        this.resinOrMetalGardenFurnituresAnnualFootprint) /\n        this.occupants,\n    );\n  }\n\n  private get wardrobesAnnualFootprint(): number {\n    return (\n      this.wardrobes *\n      (wardrobe.footprint /\n        (wardrobe.lifetimeInYears * preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get couchesAnnualFootprint(): number {\n    return (\n      this.couches *\n      (couch.footprint /\n        (couch.lifetimeInYears * preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get mattressesAnnualFootprint(): number {\n    return (\n      this.mattresses *\n      (mattress.footprint /\n        (mattress.lifetimeInYears * preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get bedsAnnualFootprint(): number {\n    return (\n      this.beds *\n      (bed.footprint /\n        (bed.lifetimeInYears * preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get tablesAnnualFootprint(): number {\n    return (\n      this.tables *\n      (table.footprint /\n        (table.lifetimeInYears * preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get chairsAnnualFootprint(): number {\n    return (\n      this.chairs *\n      (chair.footprint /\n        (chair.lifetimeInYears * preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get smallFurnituresAnnualFootprint(): number {\n    return (\n      this.smallFurnitures *\n      (smallFurniture.footprint /\n        (smallFurniture.lifetimeInYears *\n          preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get bigFurnituresAnnualFootprint(): number {\n    return (\n      this.bigFurnitures *\n      (bigFurniture.footprint /\n        (bigFurniture.lifetimeInYears *\n          preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get woodenGardenFurnituresAnnualFootprint(): number {\n    return (\n      this.woodenGardenFurnitures *\n      (woodenGardenFurniture.footprint /\n        (woodenGardenFurniture.lifetimeInYears *\n          preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get resinOrMetalGardenFurnituresAnnualFootprint(): number {\n    return (\n      this.resinOrMetalGardenFurnitures *\n      (resinOrMetalGardenFurniture.footprint /\n        (resinOrMetalGardenFurniture.lifetimeInYears *\n          preservationCoefficient(this.preservation)))\n    );\n  }\n}\n","// value for 3 concerts or shows per year\nexport const concertsAndShowsAnnualFootprint = 26.5;\n\n// value for one or two visits per year\nexport const museumsAndMonumentsAnnualFootprint = 1.3;\n\n// value for 5-15€ spent per month\nexport const editionsAnnualFootprint = 47.9;\n\nexport const musicAnnualFootprint = 3.7;\n\n// https://nosgestesclimat.fr/documentation/empreinte-branche/R93-par-hab\nconst sdesSportFootprint = 68.05 * 0.63;\n\n// https://www.calameo.com/books/0047558805b1d72793ccf?language=fr&page=1\nconst proportionOfPractitioners = 0.75;\n\n// https://www.calameo.com/books/0047558805b1d72793ccf?language=fr&page=1\nconst proportionOfPracticingMembers = 1 / 3;\n\n// https://www2.deloitte.com/fr/fr/pages/presse/2019/le-fitness-en-france-edition-2019.html\nconst proportionOfFitnessSubscribers = 5960000 / 67750000;\n\nexport const sportClubAnnualFootprint =\n  (sdesSportFootprint /\n    proportionOfPractitioners /\n    proportionOfPracticingMembers) *\n  0.41;\n\nexport const fitnessAnnualFootprint =\n  (sdesSportFootprint / proportionOfFitnessSubscribers) * 0.11;\n\nexport const distributedSportAnnualFootprint =\n  (sdesSportFootprint / proportionOfPractitioners) * (0.27 + 0.21);\n\nexport const mountainAnnualFootprint = 9.3 * 5.38;\n","import { WithAnnualFootprint } from \"@domain/models/types\";\nimport {\n  concertsAndShowsAnnualFootprint,\n  distributedSportAnnualFootprint,\n  editionsAnnualFootprint,\n  fitnessAnnualFootprint,\n  mountainAnnualFootprint,\n  museumsAndMonumentsAnnualFootprint,\n  musicAnnualFootprint,\n  sportClubAnnualFootprint,\n} from \"./constants\";\n\ntype Props = {\n  concertsAndShows?: boolean;\n  museumsAndMonuments?: boolean;\n  editions?: boolean;\n  music?: boolean;\n  outdoorIndividualSport?: boolean;\n  ballSport?: boolean;\n  waterSport?: boolean;\n  swimming?: boolean;\n  martialSport?: boolean;\n  athletics?: boolean;\n  gym?: boolean;\n  riding?: boolean;\n  golf?: boolean;\n  winterSport?: boolean;\n  motorSport?: boolean;\n  otherSport?: boolean;\n};\n\nexport class Hobbies implements WithAnnualFootprint {\n  concertsAndShows: boolean;\n  museumsAndMonuments: boolean;\n  editions: boolean;\n  music: boolean;\n  outdoorIndividualSport: boolean;\n  ballSport: boolean;\n  waterSport: boolean;\n  swimming: boolean;\n  martialSport: boolean;\n  athletics: boolean;\n  gym: boolean;\n  riding: boolean;\n  golf: boolean;\n  winterSport: boolean;\n  motorSport: boolean;\n  otherSport: boolean;\n\n  constructor({\n    concertsAndShows,\n    museumsAndMonuments,\n    editions,\n    music,\n    outdoorIndividualSport,\n    ballSport,\n    waterSport,\n    swimming,\n    martialSport,\n    athletics,\n    gym,\n    riding,\n    golf,\n    winterSport,\n    motorSport,\n    otherSport,\n  }: Props) {\n    this.concertsAndShows = concertsAndShows ?? false;\n    this.museumsAndMonuments = museumsAndMonuments ?? false;\n    this.editions = editions ?? false;\n    this.music = music ?? false;\n    this.outdoorIndividualSport = outdoorIndividualSport ?? false;\n    this.ballSport = ballSport ?? false;\n    this.waterSport = waterSport ?? false;\n    this.swimming = swimming ?? false;\n    this.martialSport = martialSport ?? false;\n    this.athletics = athletics ?? false;\n    this.gym = gym ?? false;\n    this.riding = riding ?? false;\n    this.golf = golf ?? false;\n    this.winterSport = winterSport ?? false;\n    this.motorSport = motorSport ?? false;\n    this.otherSport = otherSport ?? false;\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(this.sportAnnualFootprint + this.cultureAnnualFootprint);\n  }\n\n  // NB : sur le simulateur nosgestesclimat, un calcul par défaut\n  // est utilisé lorsqu'aucune valeur n'a été renseignée par l'utilisateur.\n  // Nous ne l'utilisons pas ici car chaque variable a une valeur par défaut.\n\n  public get cultureAnnualFootprint(): number {\n    return Number(\n      (\n        this.concertsAndShowsAnnualFootprint +\n        this.museumsAndMonumentsAnnualFootprint +\n        this.editionsAnnualFootprint +\n        this.musicAnnualFootprint\n      ).toFixed(2),\n    );\n  }\n\n  private get concertsAndShowsAnnualFootprint(): number {\n    if (!this.concertsAndShows) return 0;\n    return concertsAndShowsAnnualFootprint;\n  }\n\n  private get museumsAndMonumentsAnnualFootprint(): number {\n    if (!this.museumsAndMonuments) return 0;\n    return museumsAndMonumentsAnnualFootprint;\n  }\n\n  private get editionsAnnualFootprint(): number {\n    if (!this.editions) return 0;\n    return editionsAnnualFootprint;\n  }\n\n  private get musicAnnualFootprint(): number {\n    if (!this.music) return 0;\n    return musicAnnualFootprint;\n  }\n\n  public get sportAnnualFootprint(): number {\n    return Number(\n      (\n        this.distributedSportAnnualFootprint +\n        this.sportClubAnnualFootprint +\n        this.fitnessAnnualFootprint +\n        this.mountainAnnualFootprint\n      ).toFixed(2),\n    );\n  }\n\n  private get distributedSportAnnualFootprint(): number {\n    if (\n      this.ballSport ||\n      this.waterSport ||\n      this.martialSport ||\n      this.athletics ||\n      this.riding ||\n      this.golf ||\n      this.winterSport ||\n      this.otherSport ||\n      this.swimming ||\n      this.motorSport ||\n      this.outdoorIndividualSport ||\n      this.gym\n    )\n      return Number(distributedSportAnnualFootprint.toFixed(2));\n    return 0;\n  }\n\n  private get sportClubAnnualFootprint(): number {\n    if (\n      this.ballSport ||\n      this.waterSport ||\n      this.martialSport ||\n      this.athletics ||\n      this.riding ||\n      this.golf ||\n      this.winterSport ||\n      this.otherSport ||\n      this.waterSport ||\n      this.motorSport\n    ) {\n      return Number(sportClubAnnualFootprint.toFixed(2));\n    }\n    return 0;\n  }\n\n  private get fitnessAnnualFootprint(): number {\n    if (!this.gym) return 0;\n    return Number(fitnessAnnualFootprint.toFixed(2));\n  }\n\n  private get mountainAnnualFootprint(): number {\n    if (!this.winterSport) return 0;\n    return Number(mountainAnnualFootprint.toFixed(2));\n  }\n}\n","import { Preservation } from \"@domain/models/everyday-things/types\";\n\nexport const fridge = {\n  footprint: 257,\n  lifetimeInYears: 10,\n};\n\nexport const miniFridge = {\n  footprint: 87.6,\n  lifetimeInYears: 10,\n};\n\nexport const freezer = {\n  footprint: 415,\n  lifetimeInYears: 10,\n};\n\nexport const washingMachine = {\n  footprint: 342,\n  lifetimeInYears: 10,\n};\n\nexport const dryer = {\n  footprint: 266,\n  lifetimeInYears: 10,\n};\n\nexport const dishWasher = {\n  footprint: 271,\n  lifetimeInYears: 10,\n};\n\nexport const hood = {\n  footprint: 60.4,\n  lifetimeInYears: 10,\n};\n\nexport const oven = {\n  footprint: 217,\n  lifetimeInYears: 12,\n};\n\nexport const microwaves = {\n  footprint: 98.4,\n  lifetimeInYears: 12,\n};\n\nexport const hotplates = {\n  footprint: 65.3,\n  lifetimeInYears: 10,\n};\n\nexport const kettle = {\n  footprint: 9.9,\n  lifetimeInYears: 6,\n};\n\nexport const coffeeMachine = {\n  footprint: 31.9,\n  lifetimeInYears: 6,\n};\n\nexport const vacuumCleaner = {\n  footprint: 52.4,\n  lifetimeInYears: 8,\n};\n\nexport const kitchenRobot = {\n  footprint: 41.3,\n  lifetimeInYears: 8,\n};\n\nexport const electricLawnMower = {\n  footprint: 70.1,\n  lifetimeInYears: 8,\n};\n\nexport const preservationCoefficient = (preservation: Preservation) => {\n  switch (preservation) {\n    case \"none\":\n      return 1 / 2;\n    case \"low\":\n      return 2 / 3;\n    case \"medium\":\n      return 1;\n    case \"high\":\n      return 4 / 3;\n  }\n};\n","import { WithAnnualFootprint } from \"@domain/models/types\";\nimport { Preservation } from \"@domain/models/everyday-things/types\";\nimport { defaultNumberOfOccupants } from \"@domain/models/housing/constants\";\nimport {\n  coffeeMachine,\n  dishWasher,\n  dryer,\n  electricLawnMower,\n  freezer,\n  fridge,\n  hood,\n  hotplates,\n  kettle,\n  kitchenRobot,\n  microwaves,\n  miniFridge,\n  oven,\n  preservationCoefficient,\n  vacuumCleaner,\n  washingMachine,\n} from \"./constants\";\n\ntype Props = {\n  occupants?: number;\n  preservation?: Preservation;\n  fridges?: number;\n  miniFridges?: number;\n  freezers?: number;\n  washingMachines?: number;\n  dryers?: number;\n  dishWashers?: number;\n  hoods?: number;\n  ovens?: number;\n  microwaves?: number;\n  hotPlates?: number;\n  kettles?: number;\n  coffeeMachines?: number;\n  vacuumCleaners?: number;\n  kitchenRobots?: number;\n  electricLawnMowers?: number;\n};\n\nexport class HouseholdAppliances implements WithAnnualFootprint {\n  occupants: number;\n  fridges: number;\n  miniFridges: number;\n  freezers: number;\n  washingMachines: number;\n  dryers: number;\n  dishWashers: number;\n  hoods: number;\n  ovens: number;\n  microwaves: number;\n  hotPlates: number;\n  kettles: number;\n  coffeeMachines: number;\n  vacuumCleaners: number;\n  kitchenRobots: number;\n  electricLawnMowers: number;\n  preservation: Preservation;\n\n  constructor({\n    occupants,\n    fridges,\n    miniFridges,\n    freezers,\n    washingMachines,\n    dryers,\n    dishWashers,\n    hoods,\n    ovens,\n    microwaves,\n    hotPlates,\n    kettles,\n    coffeeMachines,\n    vacuumCleaners,\n    kitchenRobots,\n    electricLawnMowers,\n    preservation,\n  }: Props) {\n    this.occupants = occupants ?? defaultNumberOfOccupants;\n    this.fridges = fridges ?? 1;\n    this.miniFridges = miniFridges ?? 0;\n    this.freezers = freezers ?? 0;\n    this.washingMachines = washingMachines ?? 1;\n    this.dryers = dryers ?? 0;\n    this.dishWashers = dishWashers ?? 0;\n    this.hoods = hoods ?? 1;\n    this.ovens = ovens ?? 1;\n    this.microwaves = microwaves ?? 1;\n    this.hotPlates = hotPlates ?? 1;\n    this.kettles = kettles ?? 0;\n    this.coffeeMachines = coffeeMachines ?? 0;\n    this.vacuumCleaners = vacuumCleaners ?? 1;\n    this.kitchenRobots = kitchenRobots ?? 0;\n    this.electricLawnMowers = electricLawnMowers ?? 0;\n    this.preservation = preservation ?? \"medium\";\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      (this.fridgesAnnualFootprint +\n        this.miniFridgesAnnualFootprint +\n        this.freezersAnnualFootprint +\n        this.washingMachinesAnnualFootprint +\n        this.dryersAnnualFootprint +\n        this.dishWashersAnnualFootprint +\n        this.hoodsAnnualFootprint +\n        this.ovensAnnualFootprint +\n        this.microwavesAnnualFootprint +\n        this.hotPlatesAnnualFootprint +\n        this.kettlesAnnualFootprint +\n        this.coffeeMachinesAnnualFootprint +\n        this.vacuumCleanersAnnualFootprint +\n        this.kitchenRobotsAnnualFootprint +\n        this.electricLawnMowersAnnualFootprint) /\n        this.occupants,\n    );\n  }\n\n  private get fridgesAnnualFootprint(): number {\n    return (\n      this.fridges *\n      (fridge.footprint /\n        (fridge.lifetimeInYears * preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get miniFridgesAnnualFootprint(): number {\n    return (\n      this.miniFridges *\n      (miniFridge.footprint /\n        (miniFridge.lifetimeInYears *\n          preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get freezersAnnualFootprint(): number {\n    return (\n      this.freezers *\n      (freezer.footprint /\n        (freezer.lifetimeInYears * preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get washingMachinesAnnualFootprint(): number {\n    return (\n      this.washingMachines *\n      (washingMachine.footprint /\n        (washingMachine.lifetimeInYears *\n          preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get dryersAnnualFootprint(): number {\n    return (\n      this.dryers *\n      (dryer.footprint /\n        (dryer.lifetimeInYears * preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get dishWashersAnnualFootprint(): number {\n    return (\n      this.dishWashers *\n      (dishWasher.footprint /\n        (dishWasher.lifetimeInYears *\n          preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get hoodsAnnualFootprint(): number {\n    return (\n      this.hoods *\n      (hood.footprint /\n        (hood.lifetimeInYears * preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get ovensAnnualFootprint(): number {\n    return (\n      this.ovens *\n      (oven.footprint /\n        (oven.lifetimeInYears * preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get microwavesAnnualFootprint(): number {\n    return (\n      this.microwaves *\n      (microwaves.footprint /\n        (microwaves.lifetimeInYears *\n          preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get hotPlatesAnnualFootprint(): number {\n    return (\n      this.hotPlates *\n      (hotplates.footprint /\n        (hotplates.lifetimeInYears *\n          preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get kettlesAnnualFootprint(): number {\n    return (\n      this.kettles *\n      (kettle.footprint /\n        (kettle.lifetimeInYears * preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get coffeeMachinesAnnualFootprint(): number {\n    return (\n      this.coffeeMachines *\n      (coffeeMachine.footprint /\n        (coffeeMachine.lifetimeInYears *\n          preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get vacuumCleanersAnnualFootprint(): number {\n    return (\n      this.vacuumCleaners *\n      (vacuumCleaner.footprint /\n        (vacuumCleaner.lifetimeInYears *\n          preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get kitchenRobotsAnnualFootprint(): number {\n    return (\n      this.kitchenRobots *\n      (kitchenRobot.footprint /\n        (kitchenRobot.lifetimeInYears *\n          preservationCoefficient(this.preservation)))\n    );\n  }\n\n  private get electricLawnMowersAnnualFootprint(): number {\n    return (\n      this.electricLawnMowers *\n      (electricLawnMower.footprint /\n        (electricLawnMower.lifetimeInYears *\n          preservationCoefficient(this.preservation)))\n    );\n  }\n}\n","import { WithAnnualFootprint } from \"@domain/models/types\";\nimport {\n  newManufacteredProductsFootprint,\n  spendingLevelCoefficient,\n} from \"./constants\";\n\nexport type SpendingLevel = \"low\" | \"medium\" | \"high\";\n\ntype Props = {\n  spendingLevel?: SpendingLevel;\n};\n\nexport class OtherProducts implements WithAnnualFootprint {\n  spendingLevel: SpendingLevel;\n\n  constructor({ spendingLevel }: Props) {\n    this.spendingLevel = spendingLevel ?? \"medium\";\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      spendingLevelCoefficient(this.spendingLevel) *\n        newManufacteredProductsFootprint,\n    );\n  }\n}\n","import { SpendingLevel } from \"@domain/models/everyday-things/other-products/OtherProducts\";\n\nexport const newManufacteredProductsFootprint = 130;\n\nexport const spendingLevelCoefficient = (spendingLevel: SpendingLevel) => {\n  switch (spendingLevel) {\n    case \"low\":\n      return 0.65;\n    case \"medium\":\n      return 1;\n    case \"high\":\n      return 1.5;\n  }\n};\n","import { daysInYear } from \"@domain/models/constants\";\n\nexport type PetSize = \"small\" | \"medium\" | \"big\";\n\n// https://reader.elsevier.com/reader/sd/pii/S0959378020307366?token=375964333F28DED330C9C2CACCD5553CAAE486B7BD641A4F39738E9EC323613DCDABF4A0263131197CB5B47E1D304B99&originRegion=eu-west-1&originCreation=20230330100228\nconst petFoodEnergyIntake = 4610; // kcal/kg\n\n// https://user-images.githubusercontent.com/55186402/229517254-01e77c3d-acef-4053-9b8f-2931a6ce33a9.png\nconst numberOfPetsInFranceExceptFishAndBirds = 35700000;\n\n// https://nosgestesclimat.fr/documentation/empreinte-branche/M75\nexport const petVeterinaryCareFootprint =\n  (141.6 * 1000000) / numberOfPetsInFranceExceptFishAndBirds; // kgCO2e\n\nexport const cat = {\n  foodFootprintPerKg: 2.5, // kgCO2e/kg\n  dailyFoodRequirements: (100 * 2.53) / petFoodEnergyIntake, // kg/day\n  get foodAnnualFootprint() {\n    return this.dailyFoodRequirements * daysInYear * this.foodFootprintPerKg;\n  },\n  litterAnnualQuantity: 33, // kg,\n  litterFootprintPerKg: 0.0506, // kgCO2e/kg\n  get litterAnnualFootprint() {\n    return this.litterAnnualQuantity * this.litterFootprintPerKg;\n  },\n  get annualFootprint() {\n    return (\n      this.foodAnnualFootprint +\n      petVeterinaryCareFootprint +\n      this.litterAnnualFootprint\n    );\n  },\n};\n\n// https://europeanpetfood.org/wp-content/uploads/2022/03/Updated-Nutritional-Guidelines.pdf\nconst dogDailyFoodRequirements = (petSize: PetSize) => {\n  switch (petSize) {\n    case \"small\":\n      return (3.34 * 110) / petFoodEnergyIntake; // kg/day\n    case \"medium\":\n      return (9.46 * 110) / petFoodEnergyIntake; // kg/day\n    case \"big\":\n      return (15.9 * 110) / petFoodEnergyIntake; // kg/day\n  }\n};\n\nexport const dog = {\n  foodFootprintPerKg: 4.3, // kgCO2e/kg\n  foodAnnualFootprint: (petSize: PetSize) => {\n    return (\n      dogDailyFoodRequirements(petSize) * daysInYear * dog.foodFootprintPerKg\n    );\n  },\n  annualFootprint: (petSize: PetSize) => {\n    return dog.foodAnnualFootprint(petSize) + petVeterinaryCareFootprint;\n  },\n};\n","import { defaultNumberOfOccupants } from \"@domain/models/housing/constants\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\nimport { cat, dog } from \"./constants\";\n\ntype Props = {\n  occupants?: number;\n  smallDogs?: number;\n  mediumDogs?: number;\n  bigDogs?: number;\n  cats?: number;\n};\n\nexport class Pets implements WithAnnualFootprint {\n  occupants: number;\n  smallDogs: number;\n  mediumDogs: number;\n  bigDogs: number;\n  cats: number;\n\n  constructor({ occupants, smallDogs, mediumDogs, bigDogs, cats }: Props) {\n    this.occupants = occupants ?? defaultNumberOfOccupants;\n    this.smallDogs = smallDogs ?? 0;\n    this.mediumDogs = mediumDogs ?? 0;\n    this.bigDogs = bigDogs ?? 0;\n    this.cats = cats ?? 0;\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      (this.catsAnnualFootprint + this.dogsAnnualFootprint) / this.occupants,\n    );\n  }\n\n  private get catsAnnualFootprint(): number {\n    return this.cats * cat.annualFootprint;\n  }\n\n  private get dogsAnnualFootprint(): number {\n    return (\n      this.smallDogsAnnualFootprint +\n      this.mediumDogsAnnualFootprint +\n      this.bigDogsAnnualFootprint\n    );\n  }\n\n  private get smallDogsAnnualFootprint(): number {\n    return this.smallDogs * dog.annualFootprint(\"small\");\n  }\n\n  private get mediumDogsAnnualFootprint(): number {\n    return this.mediumDogs * dog.annualFootprint(\"medium\");\n  }\n\n  private get bigDogsAnnualFootprint(): number {\n    return this.bigDogs * dog.annualFootprint(\"big\");\n  }\n}\n","import { WithAnnualFootprint } from \"@domain/models/types\";\nimport { weeksInYear } from \"@domain/models/constants\";\nimport {\n  cigaretteFootprint,\n  cigarettePacksPerWeek,\n  cigarettesInPack,\n} from \"./constants\";\n\nexport type CigarettesWeeklyConsumption =\n  | \"none\"\n  | \"onePackPerMonth\"\n  | \"onePackPerWeek\"\n  | \"onePackPerDay\";\n\ntype Props = {\n  weeklyConsumption?: CigarettesWeeklyConsumption;\n};\n\nexport class Tobacco implements WithAnnualFootprint {\n  weeklyConsumption: CigarettesWeeklyConsumption;\n\n  constructor({ weeklyConsumption }: Props) {\n    this.weeklyConsumption = weeklyConsumption ?? \"none\";\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      cigarettePacksPerWeek(this.weeklyConsumption) *\n        cigarettesInPack *\n        weeksInYear *\n        cigaretteFootprint,\n    );\n  }\n}\n","import { CigarettesWeeklyConsumption } from \"@domain/models/everyday-things/tobacco/Tobacco\";\n\n// https://pubs.acs.org/doi/full/10.1021/acs.est.8b01533\nexport const cigaretteFootprint = 0.014;\n\nexport const cigarettesInPack = 20;\n\nexport const cigarettePacksPerWeek = (\n  weeklyConsumption: CigarettesWeeklyConsumption,\n) => {\n  switch (weeklyConsumption) {\n    case \"none\":\n      return 0;\n    case \"onePackPerMonth\":\n      return 0.25;\n    case \"onePackPerWeek\":\n      return 1;\n    case \"onePackPerDay\":\n      return 7;\n  }\n};\n","import { Clothes } from \"@domain/models/everyday-things/clothes/Clothes\";\nimport { ConsumableProducts } from \"@domain/models/everyday-things/consumable-products/ConsumableProducts\";\nimport { Digital } from \"@domain/models/everyday-things/digital/Digital\";\nimport { Furniture } from \"@domain/models/everyday-things/furniture/Furniture\";\nimport { Hobbies } from \"@domain/models/everyday-things/hobbies/Hobbies\";\nimport { HouseholdAppliances } from \"@domain/models/everyday-things/household-appliances/HouseholdAppliances\";\nimport { OtherProducts } from \"@domain/models/everyday-things/other-products/OtherProducts\";\nimport { Pets } from \"@domain/models/everyday-things/pets/Pets\";\nimport { Tobacco } from \"@domain/models/everyday-things/tobacco/Tobacco\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\n\ntype Props = {\n  pets?: Pets;\n  clothes?: Clothes;\n  householdAppliances?: HouseholdAppliances;\n  furniture?: Furniture;\n  digital?: Digital;\n  hobbies?: Hobbies;\n  consumableProducts?: ConsumableProducts;\n  tobacco?: Tobacco;\n  otherProducts?: OtherProducts;\n};\n\nexport class EverydayThings implements WithAnnualFootprint {\n  pets: Pets;\n  clothes: Clothes;\n  householdAppliances: HouseholdAppliances;\n  furniture: Furniture;\n  digital: Digital;\n  hobbies: Hobbies;\n  consumableProducts: ConsumableProducts;\n  tobacco: Tobacco;\n  otherProducts: OtherProducts;\n\n  constructor({\n    pets,\n    clothes,\n    householdAppliances,\n    furniture,\n    digital,\n    hobbies,\n    consumableProducts,\n    tobacco,\n    otherProducts,\n  }: Props) {\n    this.pets = new Pets(pets ?? {});\n    this.clothes = new Clothes(clothes ?? {});\n    this.furniture = new Furniture(furniture ?? {});\n    this.digital = new Digital(digital ?? {});\n    this.hobbies = new Hobbies(hobbies ?? {});\n    this.consumableProducts = new ConsumableProducts(consumableProducts ?? {});\n    this.tobacco = new Tobacco(tobacco ?? {});\n    this.otherProducts = new OtherProducts(otherProducts ?? {});\n    this.householdAppliances = new HouseholdAppliances(\n      householdAppliances ?? {},\n    );\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      this.pets.annualFootprint +\n        this.clothes.annualFootprint +\n        this.furniture.annualFootprint +\n        this.digital.annualFootprint +\n        this.hobbies.annualFootprint +\n        this.consumableProducts.annualFootprint +\n        this.tobacco.annualFootprint +\n        this.otherProducts.annualFootprint +\n        this.householdAppliances.annualFootprint,\n    );\n  }\n}\n","import { daysInYear } from \"@domain/models/constants\";\nimport { HotDrinksPerWeek } from \"@domain/models/food/drinks/Drinks\";\nimport { MilkType } from \"@domain/models/food/types\";\n\nexport const defaultHotDrinksPerWeek: HotDrinksPerWeek = {\n  coffee: 7,\n  tea: 0,\n  chocolate: 0,\n};\n\n// https://agribalyse.ademe.fr/app/aliments/18003#Caf%C3%A9,_moulu\nconst groundCoffeeFootprint = 10.09; // kgCO2eq/kg\n\n// we assume that a cup of coffee contains on average 12 grams of ground coffee\nconst defaultCupOfCoffeeQuantity = 0.012; // kg\n\nexport const cupOfCoffeeFootprint =\n  groundCoffeeFootprint * defaultCupOfCoffeeQuantity;\n\n// https://agribalyse.ademe.fr/app/aliments/18020#Th%C3%A9_infus%C3%A9,_non_sucr%C3%A9\nconst brewedTeaFootprint = 0.04;\n\n// https://agribalyse.ademe.fr/app/aliments/18020#Th%C3%A9_infus%C3%A9,_non_sucr%C3%A9\nconst brewedTeaFootprintPart = 0.25;\n\nconst cupOfTeaFootprintWithoutConsumption =\n  brewedTeaFootprint * (1 - brewedTeaFootprintPart);\n\nconst defaultCupOfTeaQuantity = 0.25; // kg\n\nexport const cupOfTeaFootprint =\n  cupOfTeaFootprintWithoutConsumption * defaultCupOfTeaQuantity;\n\n// https://agribalyse.ademe.fr/app/aliments/18100#Cacao,_non_sucr%C3%A9,_poudre_soluble\nconst cocoaFootprint = 27.06;\n\nconst defaultCocoaQuantityPerCup = 0.02; // kg\n\nconst defaultMilkQuantityPerCup = 0.2; // kg\n\nconst milkFootprint = (milkType: MilkType): number => {\n  switch (milkType) {\n    case \"cow\":\n      // https://agribalyse.ademe.fr/app/aliments/19042#Lait_demi-%C3%A9cr%C3%A9m%C3%A9,_pasteuris%C3%A9\n      return 1.32;\n    case \"soy\":\n      // https://agribalyse.ademe.fr/app/aliments/18900#Boisson_au_soja,_nature\n      return 0.44;\n    case \"oat\":\n      // https://agribalyse.ademe.fr/app/aliments/18905#Boisson_à_base_d'avoine,_nature\n      return 0.54;\n  }\n};\n\nexport const cupOfChocolateFootprint = (milkType: MilkType): number =>\n  cocoaFootprint * defaultCocoaQuantityPerCup +\n  milkFootprint(milkType) * defaultMilkQuantityPerCup;\n\n// https://agribalyse.ademe.fr/app/aliments/18430#Eau_embouteillée_de_source\nconst bottledWaterFootprint = 0.27;\n\nconst annualWaterConsumption = 1.5 * daysInYear;\n\nexport const bottledWaterAnnualFootprint =\n  annualWaterConsumption * bottledWaterFootprint;\n\n// https://agribalyse.ademe.fr/app/aliments/18037#Cola,_sucr%C3%A9,_avec_%C3%A9dulcorants\n// https://agribalyse.ademe.fr/app/aliments/2069#Jus_multifruit,_%C3%A0_base_de_concentr%C3%A9,_standard\n// https://agribalyse.ademe.fr/app/aliments/18058#Boisson_pr%C3%A9par%C3%A9e_%C3%A0_partir_de_sirop_%C3%A0_diluer_type_menthe,_fraise,_etc,_sucr%C3%A9,_dilu%C3%A9_dans_l'eau\nexport const sweetDrinkCoef = (0.51 + 0.91 + 0.1) / 3;\n\n// https://agribalyse.ademe.fr/app/aliments/5001#Bi%C3%A8re_%22coeur_de_march%C3%A9%22_(4-5%C2%B0_alcool)\n// https://agribalyse.ademe.fr/app/aliments/5215#Vin_blanc_sec\n// https://agribalyse.ademe.fr/app/aliments/1012#Cocktail_%C3%A0_base_de_rhum\nexport const alcoholDrinkCoef = (1.12 + 1.22 + 0.91) / 3;\n","import { weeksInYear } from \"@domain/models/constants\";\nimport { MilkType } from \"@domain/models/food/types\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\nimport {\n  alcoholDrinkCoef,\n  bottledWaterAnnualFootprint,\n  cupOfChocolateFootprint,\n  cupOfCoffeeFootprint,\n  cupOfTeaFootprint,\n  defaultHotDrinksPerWeek,\n  sweetDrinkCoef,\n} from \"./constants\";\n\nexport type HotDrink = \"coffee\" | \"tea\" | \"chocolate\";\nexport const HotDrinks: HotDrink[] = [\"coffee\", \"tea\", \"chocolate\"];\n\nexport type HotDrinksPerWeek = Record<HotDrink, number>;\n\ntype Props = {\n  hotDrinksPerWeek?: HotDrinksPerWeek;\n  bottledWater?: boolean;\n  sodaLitersPerWeek?: number;\n  alcoholLitersPerWeek?: number;\n  milkType?: MilkType;\n};\n\nexport class Drinks implements WithAnnualFootprint {\n  hotDrinksPerWeek: HotDrinksPerWeek;\n  bottledWater: boolean;\n  sodaLitersPerWeek: number;\n  alcoholLitersPerWeek: number;\n  milkType: MilkType;\n\n  constructor({\n    hotDrinksPerWeek,\n    bottledWater,\n    sodaLitersPerWeek,\n    alcoholLitersPerWeek,\n    milkType,\n  }: Props) {\n    this.hotDrinksPerWeek = hotDrinksPerWeek ?? defaultHotDrinksPerWeek;\n    this.bottledWater = bottledWater ?? true;\n    this.sodaLitersPerWeek = sodaLitersPerWeek ?? 0;\n    this.alcoholLitersPerWeek = alcoholLitersPerWeek ?? 0;\n    this.milkType = milkType ?? \"cow\";\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      this.hotDrinksAnnualFootprint + this.coldDrinksAnnualFootprint,\n    );\n  }\n\n  private get hotDrinksAnnualFootprint(): number {\n    return (\n      this.coffeeAnnualFootprint +\n      this.teaAnnualFootprint +\n      this.chocolateAnnualFootprint\n    );\n  }\n\n  private get coffeeAnnualFootprint(): number {\n    return this.hotDrinksPerWeek.coffee * weeksInYear * cupOfCoffeeFootprint;\n  }\n\n  private get teaAnnualFootprint(): number {\n    return this.hotDrinksPerWeek.tea * weeksInYear * cupOfTeaFootprint;\n  }\n\n  private get chocolateAnnualFootprint(): number {\n    return (\n      this.hotDrinksPerWeek.chocolate *\n      weeksInYear *\n      cupOfChocolateFootprint(this.milkType)\n    );\n  }\n\n  private get coldDrinksAnnualFootprint(): number {\n    return (\n      this.bottledWaterAnnualFootprint +\n      this.sodaAnnualFootprint +\n      this.alcoholAnnualFootprint\n    );\n  }\n\n  private get bottledWaterAnnualFootprint(): number {\n    if (!this.bottledWater) return 0;\n    return bottledWaterAnnualFootprint;\n  }\n\n  private get sodaAnnualFootprint(): number {\n    return this.sodaLitersPerWeek * weeksInYear * sweetDrinkCoef;\n  }\n\n  private get alcoholAnnualFootprint(): number {\n    return this.alcoholLitersPerWeek * weeksInYear * alcoholDrinkCoef;\n  }\n}\n","export type MealType =\n  | \"vegetarian\"\n  | \"vegan\"\n  | \"whiteMeat\"\n  | \"redMeat\"\n  | \"whiteFish\"\n  | \"fattyFish\";\n\nexport const MealTypes: MealType[] = [\n  \"vegetarian\",\n  \"vegan\",\n  \"whiteMeat\",\n  \"redMeat\",\n  \"whiteFish\",\n  \"fattyFish\",\n];\n\nexport type BreakfastType =\n  | \"continental\"\n  | \"british\"\n  | \"milk & cereals\"\n  | \"vegan\"\n  | \"none\";\n\nexport const BreakfastTypes: BreakfastType[] = [\n  \"continental\",\n  \"british\",\n  \"milk & cereals\",\n  \"vegan\",\n  \"none\",\n];\n\nexport type Diet =\n  | \"vegetarian\"\n  | \"vegan\"\n  | \"littleMeatConsumer\"\n  | \"regularMeatConsumer\"\n  | \"heavyMeatConsumer\";\n\nexport const Diets: Diet[] = [\n  \"vegan\",\n  \"vegetarian\",\n  \"littleMeatConsumer\",\n  \"regularMeatConsumer\",\n  \"heavyMeatConsumer\",\n];\n\n// the total must be equal to 14 (2 meals per day * 7 days)\nexport type LunchesAndDinersPerWeek = Record<MealType, number>;\n\nexport type Frequency = \"never\" | \"sometimes\" | \"often\" | \"always\";\n\nexport const Frequencies: Frequency[] = [\n  \"never\",\n  \"sometimes\",\n  \"often\",\n  \"always\",\n];\n","import { MilkType } from \"@domain/models/food/types\";\nimport {\n  Diet,\n  Frequency,\n  LunchesAndDinersPerWeek,\n} from \"@domain/models/food/meals/types\";\n\n// https://nosgestesclimat.fr/documentation/alimentation/plats\n// https://www.bilans-ges.ademe.fr/documentation/UPLOAD_DOC_FR/index.htm?repas.htm\nexport const lunchesAndDinersPerWeekByDiet = (\n  diet: Diet,\n): LunchesAndDinersPerWeek => {\n  switch (diet) {\n    case \"vegan\": {\n      return {\n        vegan: 14,\n        vegetarian: 0,\n        whiteMeat: 0,\n        redMeat: 0,\n        fattyFish: 0,\n        whiteFish: 0,\n      };\n    }\n    case \"vegetarian\": {\n      return {\n        vegan: 3,\n        vegetarian: 11,\n        whiteMeat: 0,\n        redMeat: 0,\n        fattyFish: 0,\n        whiteFish: 0,\n      };\n    }\n    case \"littleMeatConsumer\": {\n      return {\n        vegan: 1,\n        vegetarian: 7,\n        whiteMeat: 4,\n        redMeat: 0,\n        fattyFish: 1,\n        whiteFish: 1,\n      };\n    }\n    case \"regularMeatConsumer\": {\n      return {\n        vegan: 0,\n        vegetarian: 4,\n        whiteMeat: 6,\n        redMeat: 2,\n        fattyFish: 1,\n        whiteFish: 1,\n      };\n    }\n    case \"heavyMeatConsumer\": {\n      return {\n        vegan: 0,\n        vegetarian: 0,\n        whiteMeat: 6,\n        redMeat: 6,\n        fattyFish: 1,\n        whiteFish: 1,\n      };\n    }\n  }\n};\n\n// https://docs.google.com/spreadsheets/d/1SVYvBaaYDOUDcg5jX0eZFEColnWWIL8PCLMGrPR000o/edit#gid=1694091424\nexport const veganMealFootprint = 0.785;\n\n// https://docs.google.com/spreadsheets/d/1SVYvBaaYDOUDcg5jX0eZFEColnWWIL8PCLMGrPR000o/edit#gid=1694091424\nexport const vegetarianMealFootprint = 1.115;\n\n// https://docs.google.com/spreadsheets/d/1SVYvBaaYDOUDcg5jX0eZFEColnWWIL8PCLMGrPR000o/edit#gid=1200865486\nexport const whiteMeatMealFootprint = 2.098;\n\n// https://docs.google.com/spreadsheets/d/1SVYvBaaYDOUDcg5jX0eZFEColnWWIL8PCLMGrPR000o/edit#gid=1200865486\nexport const redMeatMealFootprint = 5.51;\n\n// https://docs.google.com/spreadsheets/d/1SVYvBaaYDOUDcg5jX0eZFEColnWWIL8PCLMGrPR000o/edit#gid=731092178\nexport const fishMealFootprint = 1.63;\n\n// https://docs.google.com/spreadsheets/d/1SVYvBaaYDOUDcg5jX0eZFEColnWWIL8PCLMGrPR000o/edit#gid=731092178\nexport const whiteFishMealFootprint = 2.368;\n\nexport const continentalBreakfastFootprint = 0.289;\n\nexport const milkAndCerealsBreakfastFootprint = (milkType: MilkType) => {\n  switch (milkType) {\n    case \"cow\": {\n      return 0.468;\n    }\n    case \"oat\": {\n      return 0.312;\n    }\n    case \"soy\": {\n      return 0.292;\n    }\n  }\n};\n\nexport const britishBreakfastFootprint = 1.124;\n\nexport const veganBreakfastFootprint = 0.419;\n\nexport const localProductsFootprintReductionRate = (\n  frequency: Frequency,\n): number => {\n  switch (frequency) {\n    case \"sometimes\": {\n      return 0.33;\n    }\n    case \"often\": {\n      return 0.66;\n    }\n    case \"always\": {\n      return 1;\n    }\n    default: {\n      return 0;\n    }\n  }\n};\n\nexport const seasonalProductsPart = (frequency: Frequency): number => {\n  switch (frequency) {\n    case \"sometimes\": {\n      return 0.33;\n    }\n    case \"often\": {\n      return 0.66;\n    }\n    case \"always\": {\n      return 1;\n    }\n    default: {\n      return 0;\n    }\n  }\n};\n\n// https://github.com/datagir/nosgestesclimat/blob/master/data/alimentation/alimentation%20.%20de%20saison%20.%20ratio.ods\nexport const seasonalProductsRatio = 2.26;\n\n// https://github.com/datagir/nosgestesclimat/blob/master/data/alimentation/alimentation . de saison . pourcentage saisonable.ods\nexport const seasonalPercentage = 0.073;\n","import { MilkType } from \"@domain/models/food/types\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\nimport { daysInYear, weeksInYear } from \"@domain/models/constants\";\nimport {\n  BreakfastType,\n  Diet,\n  Frequency,\n  LunchesAndDinersPerWeek,\n  MealTypes,\n} from \"@domain/models/food/meals/types\";\nimport {\n  lunchesAndDinersPerWeekByDiet,\n  veganMealFootprint,\n  localProductsFootprintReductionRate,\n  vegetarianMealFootprint,\n  whiteMeatMealFootprint,\n  redMeatMealFootprint,\n  fishMealFootprint,\n  whiteFishMealFootprint,\n  continentalBreakfastFootprint,\n  britishBreakfastFootprint,\n  milkAndCerealsBreakfastFootprint,\n  veganBreakfastFootprint,\n  seasonalProductsPart,\n  seasonalProductsRatio,\n  seasonalPercentage,\n} from \"./constants\";\n\ntype Props = {\n  breakfast?: BreakfastType;\n  milkType?: MilkType;\n  diet?: Diet;\n  localProducts?: Frequency;\n  seasonalProducts?: Frequency;\n};\n\nexport class Meals implements WithAnnualFootprint {\n  breakfast: BreakfastType;\n  milkType: MilkType;\n  diet: Diet;\n  lunchesAndDinersPerWeek: LunchesAndDinersPerWeek;\n  localProducts: Frequency;\n  seasonalProducts: Frequency;\n\n  constructor({\n    breakfast,\n    milkType,\n    diet,\n    localProducts,\n    seasonalProducts,\n  }: Props) {\n    this.breakfast = breakfast ?? \"continental\";\n    this.diet = diet ?? \"regularMeatConsumer\";\n    this.lunchesAndDinersPerWeek = lunchesAndDinersPerWeekByDiet(this.diet);\n    this.localProducts = localProducts ?? \"never\";\n    this.seasonalProducts = seasonalProducts ?? \"never\";\n    this.milkType = milkType ?? \"cow\";\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      this.lunchesAndDinersAnnualFootprint +\n        this.breakfastAnnualFootprint +\n        this.seasonalProductsBonus,\n    );\n  }\n\n  private get lunchesAndDinersAnnualFootprint(): number {\n    return this.lunchesAndDinersWeeklyFootprint * weeksInYear;\n  }\n\n  public get lunchesAndDinersWeeklyFootprint(): number {\n    let weeklyFootprint = 0;\n    for (const mealType of MealTypes) {\n      let mealFootprint = 0;\n      let mealFootprintReduction = 0;\n      if (mealType === \"vegan\") {\n        mealFootprint =\n          this.lunchesAndDinersPerWeek[mealType] * veganMealFootprint;\n        mealFootprintReduction =\n          mealFootprint *\n          0.12 *\n          localProductsFootprintReductionRate(this.localProducts);\n      } else if (mealType === \"vegetarian\") {\n        mealFootprint =\n          this.lunchesAndDinersPerWeek[mealType] * vegetarianMealFootprint;\n        mealFootprintReduction =\n          mealFootprint *\n          0.08 *\n          localProductsFootprintReductionRate(this.localProducts);\n      } else if (mealType === \"whiteMeat\") {\n        mealFootprint =\n          this.lunchesAndDinersPerWeek[mealType] * whiteMeatMealFootprint;\n        mealFootprintReduction =\n          mealFootprint *\n          0.03 *\n          localProductsFootprintReductionRate(this.localProducts);\n      } else if (mealType === \"redMeat\") {\n        mealFootprint =\n          this.lunchesAndDinersPerWeek[mealType] * redMeatMealFootprint;\n        mealFootprintReduction =\n          mealFootprint *\n          0.01 *\n          localProductsFootprintReductionRate(this.localProducts);\n      } else if (mealType === \"fattyFish\") {\n        mealFootprint =\n          this.lunchesAndDinersPerWeek[mealType] * fishMealFootprint;\n        mealFootprintReduction =\n          mealFootprint *\n          0.05 *\n          localProductsFootprintReductionRate(this.localProducts);\n      } else if (mealType === \"whiteFish\") {\n        mealFootprint =\n          this.lunchesAndDinersPerWeek[mealType] * whiteFishMealFootprint;\n        mealFootprintReduction =\n          mealFootprint *\n          0.06 *\n          localProductsFootprintReductionRate(this.localProducts);\n      }\n      weeklyFootprint += mealFootprint - mealFootprintReduction;\n    }\n    return Number(weeklyFootprint.toFixed(2));\n  }\n\n  private get breakfastAnnualFootprint(): number {\n    return this.breakfastFootprint * daysInYear;\n  }\n\n  // eslint-disable-next-line getter-return\n  public get breakfastFootprint(): number {\n    switch (this.breakfast) {\n      case \"continental\": {\n        return continentalBreakfastFootprint;\n      }\n      case \"british\": {\n        return britishBreakfastFootprint;\n      }\n      case \"milk & cereals\": {\n        return milkAndCerealsBreakfastFootprint(this.milkType);\n      }\n      case \"vegan\": {\n        return veganBreakfastFootprint;\n      }\n      case \"none\": {\n        return 0;\n      }\n    }\n  }\n\n  private get seasonalProductsBonus(): number {\n    return this.seasonalFactor * this.seasonPart;\n  }\n\n  private get seasonalFactor(): number {\n    return (\n      (-1 * seasonalProductsPart(this.seasonalProducts)) / seasonalProductsRatio\n    );\n  }\n\n  private get seasonPart(): number {\n    return (\n      seasonalPercentage *\n      (this.breakfastAnnualFootprint + this.lunchesAndDinersAnnualFootprint)\n    );\n  }\n}\n","import {\n  wasteCompostingBonus,\n  householdWasteFootprint,\n  noFoodWasteBonus,\n  recyclingCenterFootprint,\n  separateCollectionFootprint,\n  stopAdvertisingStickerBonus,\n  zeroWasteFootprint,\n} from \"./constants\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\n\nexport type WasteQuantity = \"base\" | \"reduction\" | \"zero\";\n\nexport const WasteQuantities: WasteQuantity[] = [\"base\", \"reduction\", \"zero\"];\n\nexport type WasteBonus =\n  | \"wasteComposting\"\n  | \"noFoodWaste\"\n  | \"stopAdvertisingSticker\";\n\nexport const WasteBonuses: WasteBonus[] = [\n  \"wasteComposting\",\n  \"noFoodWaste\",\n  \"stopAdvertisingSticker\",\n];\n\ntype Props = {\n  quantity?: WasteQuantity;\n  wasteBonuses?: Record<WasteBonus, boolean>;\n};\n\nexport class Waste implements WithAnnualFootprint {\n  quantity: WasteQuantity;\n  wasteBonuses: Record<WasteBonus, boolean>;\n\n  constructor({ quantity, wasteBonuses }: Props) {\n    this.quantity = quantity ?? \"base\";\n    this.wasteBonuses = wasteBonuses ?? {\n      noFoodWaste: false,\n      stopAdvertisingSticker: false,\n      wasteComposting: false,\n    };\n  }\n\n  public get annualFootprint(): number {\n    if (this.quantity === \"zero\") return zeroWasteFootprint;\n    else return Math.round(this.wasteFootprint);\n  }\n\n  private get wasteFootprint(): number {\n    const defaultFootprint =\n      householdWasteFootprint +\n      separateCollectionFootprint +\n      recyclingCenterFootprint;\n\n    if (this.quantity === \"reduction\")\n      return defaultFootprint + this.wasteBonus;\n\n    return defaultFootprint;\n  }\n\n  private get wasteBonus(): number {\n    const { noFoodWaste, stopAdvertisingSticker, wasteComposting } =\n      this.wasteBonuses;\n    let footprintBonus = 0;\n    if (noFoodWaste) footprintBonus += noFoodWasteBonus;\n    if (stopAdvertisingSticker) footprintBonus += stopAdvertisingStickerBonus;\n    if (wasteComposting) footprintBonus += wasteCompostingBonus;\n    return footprintBonus;\n  }\n}\n","// https://nosgestesclimat.fr/documentation/alimentation/d%C3%A9chets/niveau-z%C3%A9ro-d%C3%A9chets\nexport const zeroWasteFootprint = 48;\n\n// https://nosgestesclimat.fr/documentation/alimentation/d%C3%A9chets/niveau-moyen\nexport const householdWasteFootprint = 96.02;\nexport const separateCollectionFootprint = 48.51;\nexport const recyclingCenterFootprint = 49.96;\n\n// https://nosgestesclimat.fr/documentation/alimentation/d%C3%A9chets/gestes/bonus-compostage-biod%C3%A9chets\nexport const wasteCompostingBonus = -11.01; // kgCO2e\n\n// https://nosgestesclimat.fr/documentation/alimentation/d%C3%A9chets/gestes/gaspillage-alimentaire\nexport const noFoodWasteBonus = -30; // kgCO2e\n\n// https://nosgestesclimat.fr/documentation/alimentation/d%C3%A9chets/gestes/stop-pub\nexport const stopAdvertisingStickerBonus = -12.95; // kgCO2e\n","import { Drinks } from \"@domain/models/food/drinks/Drinks\";\nimport { Meals } from \"@domain/models/food/meals/Meals\";\nimport { Waste } from \"@domain/models/food/waste/Waste\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\n\ntype Props = {\n  meals?: Meals;\n  drinks?: Drinks;\n  waste?: Waste;\n};\n\nexport class Food implements WithAnnualFootprint {\n  meals: Meals;\n  drinks: Drinks;\n  waste: Waste;\n\n  constructor({ meals, drinks, waste }: Props) {\n    this.meals = new Meals(meals ?? {});\n    this.drinks = new Drinks(drinks ?? {});\n    this.waste = new Waste(waste ?? {});\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      this.meals.annualFootprint +\n        this.drinks.annualFootprint +\n        this.waste.annualFootprint,\n    );\n  }\n}\n","import { HeatingEnergies } from \"@domain/models/housing/energy/types\";\n\nexport const defaultHeatingEnergies: HeatingEnergies = {\n  electricity: true,\n  heatPump: false,\n  gas: false,\n  gasCylinder: false,\n  propane: false,\n  bioGas: false,\n  fuel: false,\n  wood: false,\n  heatNetwork: false,\n};\n\nexport const surfaces = {\n  /*\n   * Living surfaces\n   */\n  houses: 1874000000, //m2\n  appartements: 817000000, //m2\n  get living() {\n    return this.houses + this.appartements;\n  },\n\n  /*\n   * Energies surfaces\n   * https://www.statistiques.developpement-durable.gouv.fr/consommation-denergie-par-usage-du-residentiel\n   */\n  electricity: 962771183, //m2\n  gas: 1068962604, //m2\n  fuel: 364967468, //m2\n  wood: 146747327, //m2\n  heatNetwork: 82129765, //m2\n  bioGas: 45230016, //m2\n\n  /*\n   * Energies surface part\n   */\n  get energies() {\n    return (\n      this.electricity +\n      this.gas +\n      this.fuel +\n      this.wood +\n      this.heatNetwork +\n      this.bioGas\n    );\n  },\n  get electricityPart() {\n    return this.electricity / this.energies;\n  },\n  get gasPart() {\n    return this.gas / this.energies;\n  },\n  get fuelPart() {\n    return this.fuel / this.energies;\n  },\n  get woodPart() {\n    return this.wood / this.energies;\n  },\n  get heatNetworkPart() {\n    return this.heatNetwork / this.energies;\n  },\n  get bioGasPart() {\n    return this.bioGas / this.energies;\n  },\n};\n\n/*\n * Gas\n */\n// https://selectra.info/energie/guides/conso/consommation-moyenne-gaz/tout-au-gaz\nconst gasCylinderCapacity = 13; // kg\n\nexport const gas = {\n  consumption: {\n    cooking: 9087203792, // kWh\n    perSquareMeter: 100, // kWh/m2\n  },\n  carbonBasedEmissionFactor: 0.221, // kgCO2e/kWh\n  footprint: {\n    butane: 3.44, // kgCO2e/kg\n    propane: 3.47, // kgCO2e/kg\n    get cylinder() {\n      return ((this.butane + this.propane) / 2) * gasCylinderCapacity;\n    },\n  },\n  energy: {\n    cylinderPerBottle: 179, // kWh/bottle\n    propanePerKg: 14.196, // kWh/kg\n  },\n  get footprintPerSquareMeter() {\n    return (\n      surfaces.gasPart *\n      (gas.consumption.perSquareMeter * gas.carbonBasedEmissionFactor)\n    );\n  },\n};\n\n/*\n * Bio gas\n */\nexport const bioGas = {\n  consumption: {\n    heating: 2665257467, // kWh\n    hotWater: 750729503, // kWh\n    get perSquareMeter() {\n      return (this.heating + this.hotWater) / surfaces.heatNetwork;\n    },\n  },\n  part: 0.2,\n  carbonBasedEmissionFactor: 0.0395, // kgCO2e/kWh\n  get emissionFactor() {\n    return (\n      bioGas.part * bioGas.carbonBasedEmissionFactor +\n      gas.carbonBasedEmissionFactor * (1 - bioGas.part)\n    );\n  },\n  get footprintPerSquareMeter(): number {\n    return (\n      surfaces.bioGasPart *\n      (bioGas.consumption.perSquareMeter * bioGas.carbonBasedEmissionFactor)\n    );\n  },\n};\n\n/*\n * Fuel\n */\nexport const fuel = {\n  consumption: {\n    heating: 33502306219, // kWh\n    hotWater: 5490322725, // kWh\n    // https://bilans-ges.ademe.fr/fr/accueil/documentation-gene/index/page/New_liquides\n    perLiter: 0.101436943, // L/kWh\n    get perSquareMeter() {\n      return (this.heating + this.hotWater) / surfaces.fuel;\n    },\n  },\n  carbonBasedEmissionFactor: {\n    perKiloWattHeure: 0.324, // kgCO2e/kWh\n    perLiter: 3.25, // kgCO2e/L\n  },\n  get footprintPerSquareMeter(): number {\n    return (\n      surfaces.fuelPart *\n      (fuel.consumption.perSquareMeter *\n        fuel.carbonBasedEmissionFactor.perKiloWattHeure)\n    );\n  },\n};\n\n/*\n * Wood\n */\nexport const wood = {\n  consumption: {\n    heating: 66554452159, // kWh\n    hotWater: 355124805, // kWh\n    get perSquareMeter() {\n      return (this.heating + this.hotWater) / surfaces.wood;\n    },\n    // https://librairie.ademe.fr/produire-autrement/872-etude-sur-le-chauffage-domestique-au-bois.html, p.10\n    perLog: 1610, // kWh/stere\n  },\n  carbonBasedEmissionFactor: {\n    logs: 0.046, // kgCO2e/kWh\n    pellets: 0.0113, // kgCO2e/kWh\n  },\n  get logFootprintPerSquareMeter(): number {\n    return (\n      surfaces.woodPart *\n      (wood.consumption.perSquareMeter * wood.carbonBasedEmissionFactor.logs)\n    );\n  },\n  get pelletFootprintPerSquareMeter(): number {\n    return (\n      surfaces.woodPart *\n      (wood.consumption.perSquareMeter * wood.carbonBasedEmissionFactor.pellets)\n    );\n  },\n};\n\n/*\n * Heat network\n */\nexport const heatNetwork = {\n  consumption: {\n    heating: 10406115235, // kWh\n    hotWater: 3385797065, // kWh\n    get perSquareMeter() {\n      return (this.heating + this.hotWater) / surfaces.heatNetwork;\n    },\n  },\n  carbonBasedEmissionFactor: 0.125,\n  get footprintPerSquareMeter(): number {\n    return (\n      surfaces.heatNetworkPart *\n      (heatNetwork.consumption.perSquareMeter *\n        heatNetwork.carbonBasedEmissionFactor)\n    );\n  },\n};\n\n/*\n * Electricity (without heating)\n */\n// https://prod-basecarbonesolo.ademe-dri.fr/documentation/UPLOAD_DOC_FR/\nexport const electricityWithoutHeating = {\n  carbonIntensity: 0.052, // kgCO2e/kwh\n  consumption: 79384041653, // kWh\n  get consuptionPerSquareMeter() {\n    return this.consumption / surfaces.living;\n  },\n};\n\n/*\n * Electricity\n */\nexport const electricity = {\n  consumption: {\n    heating: 34746847942, // kWh\n    hotWater: 25101553844, // kWh\n    cooking: 12415175837, // kWh\n    get all() {\n      return this.heating + this.hotWater + this.cooking;\n    },\n    get perSquareMeter() {\n      return this.all / surfaces.electricity;\n    },\n  },\n};\n\n/*\n * Air conditioning\n */\nconst airConditionerLifetimeInYear = 6;\nconst refrigeratorFluid = 1924; // kgCO2e/kg\n\nexport const airConditioner = {\n  defaultNumber: {\n    house: 0.31,\n    apartment: 0.2,\n  },\n  footprint: {\n    get annualLeak() {\n      return 1.72 * 0.042 * refrigeratorFluid; // kg/conditioner\n    },\n    get endOfLifeLeak() {\n      return 1.72 * 0.664 * refrigeratorFluid; // kg/conditioner\n    },\n    get endOfLifeLeakAmortized() {\n      return this.endOfLifeLeak / airConditionerLifetimeInYear;\n    },\n    construction: 239, // kgCO2e/airConditioner\n    get constructionAmortized() {\n      return this.construction / airConditionerLifetimeInYear;\n    },\n    get total() {\n      return (\n        this.annualLeak +\n        this.endOfLifeLeakAmortized +\n        this.constructionAmortized\n      );\n    },\n  },\n};\n","import { HeatingEnergies, WoodType } from \"@domain/models/housing/energy/types\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\nimport {\n  defaultNumberOfOccupants,\n  defaultLivingSpace,\n  isAnApartmentDefaultValue,\n} from \"@domain/models/housing/constants\";\nimport {\n  airConditioner,\n  bioGas,\n  electricity,\n  electricityWithoutHeating,\n  defaultHeatingEnergies,\n  fuel,\n  gas,\n  heatNetwork,\n  surfaces,\n  wood,\n} from \"./constants\";\n\nexport const HeatingEnergiesLabels: (keyof HeatingEnergies)[] = [\n  \"electricity\",\n  \"heatPump\",\n  \"gas\",\n  \"gasCylinder\",\n  \"propane\",\n  \"bioGas\",\n  \"fuel\",\n  \"wood\",\n  \"heatNetwork\",\n];\n\nexport const WoodTypes: WoodType[] = [\"logs\", \"pellets\"];\n\ntype Props = {\n  occupants?: number;\n  livingSpace?: number;\n  isAnApartment?: boolean;\n  annualElectricityConsumption?: number; // kWh\n  heatingEnergies?: HeatingEnergies;\n  airConditioners?: number;\n  woodType?: WoodType;\n};\n\nexport class Energy implements WithAnnualFootprint {\n  occupants: number;\n  livingSpace: number;\n  annualElectricityConsumption: number; // kWh\n  heatingEnergies: HeatingEnergies;\n  airConditioners: number;\n  isAnApartment: boolean;\n  woodType: WoodType;\n\n  constructor({\n    annualElectricityConsumption,\n    heatingEnergies,\n    occupants,\n    livingSpace,\n    airConditioners,\n    isAnApartment,\n    woodType,\n  }: Props) {\n    this.occupants = occupants ?? defaultNumberOfOccupants;\n    this.livingSpace = livingSpace ?? defaultLivingSpace;\n    this.heatingEnergies = heatingEnergies ?? defaultHeatingEnergies;\n    this.woodType = woodType ?? \"logs\";\n    this.airConditioners = airConditioners ?? 0;\n    this.isAnApartment = isAnApartment ?? isAnApartmentDefaultValue;\n    this.annualElectricityConsumption =\n      annualElectricityConsumption ??\n      this.defaultElectricityAnnualkWhConsumption;\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      this.heatingAnnualFootprint +\n        this.electricityAnnualFootprint +\n        this.airConditioningAnnualFootprint,\n    );\n  }\n\n  public get electricityAnnualFootprint(): number {\n    return Math.round(\n      (this.annualElectricityConsumption *\n        electricityWithoutHeating.carbonIntensity) /\n        this.occupants,\n    );\n  }\n\n  private get defaultElectricityAnnualkWhConsumption(): number {\n    if (this.noHeating)\n      return Math.round(\n        this.livingSpace *\n          (electricityWithoutHeating.consuptionPerSquareMeter +\n            surfaces.electricityPart * electricity.consumption.perSquareMeter),\n      );\n    else if (\n      this.heatingEnergies.electricity ||\n      this.heatingEnergies.heatPump\n    ) {\n      return Math.round(\n        this.livingSpace *\n          (electricityWithoutHeating.consuptionPerSquareMeter +\n            electricity.consumption.perSquareMeter),\n      );\n    } else {\n      return Math.round(\n        this.livingSpace * electricityWithoutHeating.consuptionPerSquareMeter,\n      );\n    }\n  }\n\n  public get airConditioningAnnualFootprint(): number {\n    return Math.round(this.airConditionersFootprint / this.occupants);\n  }\n\n  private get airConditionersFootprint(): number {\n    if (this.airConditioners === 0) return 0;\n    return this.airConditioners * airConditioner.footprint.total;\n  }\n\n  // NB : calcul utilisé par défaut sur le simulateur nosgestesclimat\n  // lorsqu'aucune valeur n'a été renseignée par l'utilisateur.\n  // Non utilisé ici car nous utilisons des valeurs par défaut.\n  /*private get defaultAirConditioningAnnualFootprint(): number {\n    return (\n      (this.isAnApartment\n        ? airConditioner.defaultNumber.apartment\n        : airConditioner.defaultNumber.house) * airConditioner.footprint.all\n    );\n  }*/\n\n  private get noHeating(): boolean {\n    return !Object.values(this.heatingEnergies).some((energy) => energy);\n  }\n\n  public get heatingAnnualFootprint(): number {\n    return Math.round(\n      (this.noHeating\n        ? 0\n        : this.gasAnnualFootprint +\n          this.gasCylinderAnnualFootprint +\n          this.propaneAnnualFootprint +\n          this.fuelAnnualFootprint +\n          this.woodAnnualFootprint +\n          this.heatNetworkAnnualFootprint) / this.occupants,\n    );\n  }\n\n  // NB : calcul utilisé par défaut sur le simulateur nosgestesclimat\n  // lorsqu'aucune valeur n'a été renseignée par l'utilisateur.\n  // Non utilisé ici car nous utilisons des valeurs par défaut.\n  /*private get defaultHeatingAnnualFootprint(): number {\n    const averageFootprintPerSquareMeterWithoutElectricity =\n      gas.footprintPerSquareMeter +\n      fuel.footprintPerSquareMeter +\n      wood.logFootprintPerSquareMeter / 2 +\n      wood.pelletFootprintPerSquareMeter / 2 +\n      heatNetwork.footprintPerSquareMeter +\n      bioGas.footprintPerSquareMeter;\n    return averageFootprintPerSquareMeterWithoutElectricity * this.livingSpace;\n  }*/\n\n  private get gasAnnualFootprint(): number {\n    if (!this.heatingEnergies.gas) return 0;\n    return (\n      this.gasAnnualKWhConsumption *\n      (this.heatingEnergies.bioGas\n        ? bioGas.emissionFactor\n        : gas.carbonBasedEmissionFactor)\n    );\n  }\n\n  private get gasAnnualKWhConsumption(): number {\n    // NB : améliorable en permettant à l'utilisateur de renseigner la valeur de sa consommation réelle\n    return gas.consumption.perSquareMeter * this.livingSpace;\n  }\n\n  private get gasCylinderAnnualFootprint(): number {\n    if (!this.heatingEnergies.gasCylinder) return 0;\n    return gas.footprint.cylinder * this.gasCylinderAnnualBottleConsumption;\n  }\n\n  private get gasCylinderAnnualBottleConsumption(): number {\n    // NB : améliorable en permettant à l'utilisateur de renseigner la valeur de sa consommation réelle\n    return (\n      ((gas.consumption.cooking / surfaces.gas) * this.livingSpace) /\n      gas.energy.cylinderPerBottle\n    );\n  }\n\n  private get propaneAnnualFootprint(): number {\n    if (!this.heatingEnergies.propane) return 0;\n    return gas.footprint.propane * this.propaneAnnualKgConsumption;\n  }\n\n  private get propaneAnnualKgConsumption(): number {\n    // NB : améliorable en permettant à l'utilisateur de renseigner la valeur de sa consommation réelle\n    return (\n      (gas.consumption.perSquareMeter * this.livingSpace) /\n      gas.energy.propanePerKg\n    );\n  }\n\n  private get fuelAnnualFootprint(): number {\n    if (!this.heatingEnergies.fuel) return 0;\n    return (\n      this.fuelAnnualLitersConsumption * fuel.carbonBasedEmissionFactor.perLiter\n    );\n  }\n\n  private get fuelAnnualLitersConsumption(): number {\n    // NB : améliorable en permettant à l'utilisateur de renseigner la valeur de sa consommation réelle\n    return (\n      fuel.consumption.perSquareMeter *\n      fuel.consumption.perLiter *\n      this.livingSpace\n    );\n  }\n\n  private get woodAnnualFootprint(): number {\n    if (!this.heatingEnergies.wood) return 0;\n    if (this.woodType === \"logs\") return this.woodLogAnnualFootprint;\n    else return this.woodPelletAnnualFootprint;\n  }\n\n  private get woodLogAnnualFootprint(): number {\n    return (\n      this.woodLogAnnualStereConsumption *\n      wood.consumption.perLog *\n      wood.carbonBasedEmissionFactor.logs\n    );\n  }\n\n  private get woodLogAnnualStereConsumption(): number {\n    // NB : améliorable en permettant à l'utilisateur de renseigner la valeur de sa consommation réelle\n    return (\n      (wood.consumption.perSquareMeter * this.livingSpace) /\n      wood.consumption.perLog\n    );\n  }\n\n  private get woodPelletAnnualFootprint(): number {\n    return (\n      this.woodPelletAnnualkWhConsumption *\n      wood.carbonBasedEmissionFactor.pellets\n    );\n  }\n\n  private get woodPelletAnnualkWhConsumption(): number {\n    // NB : améliorable en permettant à l'utilisateur de renseigner la valeur de sa consommation réelle\n    return wood.consumption.perSquareMeter * this.livingSpace;\n  }\n\n  private get heatNetworkAnnualFootprint(): number {\n    if (!this.heatingEnergies.heatNetwork) return 0;\n    return (\n      this.heatNetworkAnnualkWhConsumption *\n      heatNetwork.carbonBasedEmissionFactor\n    );\n  }\n\n  private get heatNetworkAnnualkWhConsumption(): number {\n    // NB : améliorable en permettant à l'utilisateur de renseigner la valeur de sa consommation réelle\n    return heatNetwork.consumption.perSquareMeter * this.livingSpace;\n  }\n}\n","import {\n  defaultLivingSpace,\n  defaultNumberOfOccupants,\n  isAnApartmentDefaultValue,\n} from \"@domain/models/housing/constants\";\nimport {\n  defaultAgeInYears,\n  depreciationPeriodInYears,\n  footprintByLivingSpace,\n} from \"@domain/models/housing/home/constants\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\n\ntype Props = {\n  occupants?: number;\n  livingSpace?: number;\n  isAnApartment?: boolean;\n  ageInYears?: number;\n  isEcoBuilt?: boolean;\n};\n\nexport class Home implements WithAnnualFootprint {\n  occupants: number;\n  livingSpace: number;\n  isAnApartment: boolean;\n  ageInYears: number;\n  isEcoBuilt: boolean;\n\n  constructor({\n    occupants,\n    livingSpace,\n    isAnApartment,\n    ageInYears,\n    isEcoBuilt,\n  }: Props) {\n    this.occupants = occupants ?? defaultNumberOfOccupants;\n    this.livingSpace = livingSpace ?? defaultLivingSpace;\n    this.isAnApartment = isAnApartment ?? isAnApartmentDefaultValue;\n    this.ageInYears = ageInYears ?? defaultAgeInYears;\n    this.isEcoBuilt = isEcoBuilt ?? false;\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(this.constructionAnnualFootprint);\n  }\n\n  private get constructionAnnualFootprint(): number {\n    if (this.ageInYears >= depreciationPeriodInYears) return 0;\n    return (\n      (this.livingSpace * this.constructionAnnualFootprintPerSquareMeter) /\n      this.occupants\n    );\n  }\n\n  private get constructionAnnualFootprintPerSquareMeter(): number {\n    return footprintByLivingSpace(this) / depreciationPeriodInYears;\n  }\n}\n","import { Home } from \"@domain/models/housing/home/Home\";\n\nexport const defaultAgeInYears = 30;\n\n// https://prod-basecarbonesolo.ademe-dri.fr/documentation/UPLOAD_DOC_FR/\nexport const footprintByLivingSpace = ({ isAnApartment, isEcoBuilt }: Home) => {\n  if (isEcoBuilt) return 144;\n  else if (isAnApartment) return 525;\n  else return 425;\n};\n\n// https://prod-basecarbonesolo.ademe-dri.fr/documentation/UPLOAD_DOC_FR/\nexport const depreciationPeriodInYears = 50;\n","import { HolidayAccomodations } from \"@domain/models/housing/leisure/types\";\n\nexport const defaultHolidayAccomodations: HolidayAccomodations = {\n  hotel: false,\n  camping: false,\n  youthHostel: false,\n  rentals: false,\n  exchange: false,\n};\n\n// https://www.statistiques.developpement-durable.gouv.fr/resultats-detailles-de-lenquete-mobilite-des-personnes-de-2019?rubrique=60&dossier=1345\nconst averageNightsAwayFromHomePerYear = 26.5;\n\n/*\n * Hotel\n */\n// https://librairie.ademe.fr/consommer-autrement/4096-projet-de-pre-deploiement-de-l-affichage-environnemental-des-hotels.html\nexport const hotelFootprintPerNight = 6.93; // kgCO2e/nuit\nconst hotelPart = 0.157 + 0.02;\nexport const averageHotelNightsPerYear = Number(\n  (averageNightsAwayFromHomePerYear * hotelPart).toFixed(2),\n);\n\n/*\n * Camping\n */\nexport const campingFootprintPerNight = 1.4; // kgCO2e/nuit\nconst campingPart = 0.066;\nexport const averageCampingNightsPerYear = Number(\n  (averageNightsAwayFromHomePerYear * campingPart).toFixed(2),\n);\n\n/*\n * Youth hostel\n */\nconst averagePeoplePerYouthHostelRoom = 6;\nexport const youthHostelFootprintPerNight =\n  campingFootprintPerNight / averagePeoplePerYouthHostelRoom; // kgCO2e/nuit\nconst youthHostelPart = 0.03;\nexport const averageYouthHostelNightsPerYear = Number(\n  (averageNightsAwayFromHomePerYear * youthHostelPart).toFixed(2),\n);\n\n/*\n * Rental\n */\n// https://librairie.ademe.fr/changement-climatique-et-energie/4688-bilan-des-emissions-de-gaz-a-effet-de-serre-du-secteur-du-tourisme-en-france.html\nexport const rentalFootprintPerNight = 5.8; // kgCO2e/nuit\nconst rentalPart = 0.091;\nexport const averageRentalNightsPerYear = Number(\n  (averageNightsAwayFromHomePerYear * rentalPart).toFixed(2),\n);\n\n/*\n * Exchange\n */\n// https://www.homeexchange.fr/p/homeexchange-etude-impact-carbone?ref=homeexchange.fr\nexport const exchangeFootprintPerNight = 3.52; // kgCO2e/nuit\nconst exchangePart = 0.008;\nexport const averageExchangeNightsPerYear = Number(\n  (averageNightsAwayFromHomePerYear * exchangePart).toFixed(2),\n);\n\n/*\n * Pool\n */\n// https://futur.eco/documentation/piscine/empreinte-eau-froide\nconst poolColdWaterFootprint = 18.91;\n// https://futur.eco/documentation/piscine/traitement-chimique\nconst poolChemicalTreatmentFootprint = 24.31;\n// https://futur.eco/documentation/piscine/construction\nconst poolConstructionFootprint = 164.07;\nexport const poolFootprint =\n  poolColdWaterFootprint +\n  poolChemicalTreatmentFootprint +\n  poolConstructionFootprint;\n","import {\n  defaultNumberOfOccupants,\n  isAnApartmentDefaultValue,\n} from \"@domain/models/housing/constants\";\nimport {\n  defaultHolidayAccomodations,\n  hotelFootprintPerNight,\n  averageHotelNightsPerYear,\n  averageCampingNightsPerYear,\n  campingFootprintPerNight,\n  youthHostelFootprintPerNight,\n  averageYouthHostelNightsPerYear,\n  rentalFootprintPerNight,\n  averageRentalNightsPerYear,\n  averageExchangeNightsPerYear,\n  poolFootprint,\n} from \"@domain/models/housing/leisure/constants\";\nimport { HolidayAccomodations } from \"@domain/models/housing/leisure/types\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\n\ntype Props = {\n  occupants?: number;\n  isAnApartment?: boolean;\n  hasIngroundPool?: boolean;\n  holidayAccomodations?: HolidayAccomodations;\n  hotelNightsPerYear?: number;\n  campingNightsPerYear?: number;\n  youthHostelNightsPerYear?: number;\n  rentalNightsPerYear?: number;\n  exchangeNightsPerYear?: number;\n};\n\nexport class Leisure implements WithAnnualFootprint {\n  occupants: number;\n  isAnApartment: boolean;\n  hasIngroundPool: boolean;\n  holidayAccomodations: HolidayAccomodations;\n  hotelNightsPerYear: number;\n  campingNightsPerYear: number;\n  youthHostelNightsPerYear: number;\n  rentalNightsPerYear: number;\n  exchangeNightsPerYear: number;\n\n  constructor({\n    occupants,\n    isAnApartment,\n    hasIngroundPool,\n    holidayAccomodations,\n    hotelNightsPerYear,\n    campingNightsPerYear,\n    youthHostelNightsPerYear,\n    rentalNightsPerYear,\n    exchangeNightsPerYear,\n  }: Props) {\n    this.occupants = occupants ?? defaultNumberOfOccupants;\n    this.isAnApartment = isAnApartment ?? isAnApartmentDefaultValue;\n    this.hasIngroundPool = isAnApartment ? false : hasIngroundPool ?? false;\n    this.holidayAccomodations =\n      holidayAccomodations ?? defaultHolidayAccomodations;\n    this.hotelNightsPerYear = hotelNightsPerYear ?? averageHotelNightsPerYear;\n    this.campingNightsPerYear =\n      campingNightsPerYear ?? averageCampingNightsPerYear;\n    this.youthHostelNightsPerYear =\n      youthHostelNightsPerYear ?? averageYouthHostelNightsPerYear;\n    this.rentalNightsPerYear =\n      rentalNightsPerYear ?? averageRentalNightsPerYear;\n    this.exchangeNightsPerYear =\n      exchangeNightsPerYear ?? averageExchangeNightsPerYear;\n  }\n\n  get annualFootprint(): number {\n    return Math.round(this.poolAnnualFootprint + this.holidaysAnnualFootprint);\n  }\n\n  public get holidaysAnnualFootprint(): number {\n    return Math.round(\n      (this.noHolidayAccomodation ? 0 : this.holidaysTotalFootprint) /\n        this.occupants,\n    );\n  }\n\n  private get noHolidayAccomodation(): boolean {\n    return !Object.values(this.holidayAccomodations).some(\n      (accomodation) => accomodation,\n    );\n  }\n\n  // NB : calcul utilisé par défaut sur le simulateur nosgestesclimat\n  // lorsqu'aucune valeur n'a été renseignée par l'utilisateur.\n  // Non utilisé ici car nous utilisons des valeurs par défaut.\n  /*private get holidaysDefaultFootprint(): number {\n    return (\n      averageHotelNightsPerYear * hotelFootprintPerNight +\n      averageCampingNightsPerYear * campingFootprintPerNight +\n      averageRentalNightsPerYear * rentalFootprintPerNight +\n      averageExchangeNightsPerYear * rentalFootprintPerNight +\n      averageYouthHostelNightsPerYear *\n        youthHostelFootprintPerNight *\n        this.occupants\n    );\n  }*/\n\n  private get holidaysTotalFootprint(): number {\n    return (\n      this.hotelFootprint +\n      this.campingFootprint +\n      this.youthHostelFootprint +\n      this.rentalsFootprint +\n      this.exchangeFootprint\n    );\n  }\n\n  private get hotelFootprint(): number {\n    if (!this.holidayAccomodations.hotel) return 0;\n    const footprint = this.hotelNightsPerYear * hotelFootprintPerNight;\n    if (this.occupants > 8) return footprint * 3;\n    else if (this.occupants > 4) return footprint * 2;\n    else return footprint;\n  }\n\n  private get campingFootprint(): number {\n    if (!this.holidayAccomodations.camping) return 0;\n    return campingFootprintPerNight * this.campingNightsPerYear;\n  }\n\n  private get youthHostelFootprint(): number {\n    if (!this.holidayAccomodations.youthHostel) return 0;\n    return youthHostelFootprintPerNight * this.youthHostelNightsPerYear;\n  }\n\n  private get rentalsFootprint(): number {\n    if (!this.holidayAccomodations.rentals) return 0;\n    return rentalFootprintPerNight * this.rentalNightsPerYear;\n  }\n\n  private get exchangeFootprint(): number {\n    if (!this.holidayAccomodations.exchange) return 0;\n    return rentalFootprintPerNight * this.exchangeNightsPerYear;\n  }\n\n  public get poolAnnualFootprint(): number {\n    if (!this.hasIngroundPool || this.isAnApartment) return 0;\n    return Math.round(poolFootprint / this.occupants);\n  }\n}\n","import { Energy } from \"@domain/models/housing/energy/Energy\";\nimport { Home } from \"@domain/models/housing/home/Home\";\nimport { Leisure } from \"@domain/models/housing/leisure/Leisure\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\n\ntype Props = {\n  home?: Home;\n  energy?: Energy;\n  leisure?: Leisure;\n};\n\nexport class Housing implements WithAnnualFootprint {\n  home: Home;\n  energy: Energy;\n  leisure: Leisure;\n\n  constructor({ home, energy, leisure }: Props) {\n    this.home = new Home(home ?? {});\n    this.energy = new Energy(energy ?? {});\n    this.leisure = new Leisure(leisure ?? {});\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      this.home.annualFootprint +\n        this.energy.annualFootprint +\n        this.leisure.annualFootprint,\n    );\n  }\n}\n","export class PublicServices {\n  // https://github.com/datagir/nosgestesclimat/issues/1583\n  public get annualFootprint(): number {\n    return 1500;\n  }\n}\n","import { averageFootprintPerKm, averageSpeed } from \"./constants\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\n\ntype Props = {\n  usage?: boolean;\n  hoursPerYear?: number;\n};\n\nexport class Boat implements WithAnnualFootprint {\n  usage: boolean;\n  hoursPerYear: number;\n\n  constructor({ usage = false, hoursPerYear = 0 }: Props) {\n    this.usage = usage;\n    this.hoursPerYear = hoursPerYear;\n  }\n\n  public resetValues() {\n    this.usage = false;\n    this.hoursPerYear = 0;\n  }\n\n  public get annualFootprint(): number {\n    if (!this.usage) return 0;\n    return Math.round(this.hoursPerYear * averageSpeed * averageFootprintPerKm);\n  }\n}\n","// https://futur.eco/ferry\n\n// https://www.greenferries.org/ships/mega-express-four-9086590/\nexport const averageSpeed = 33; // km/h\n\n// https://nosgestesclimat.fr/documentation/futureco%E2%80%91data/transport/ferry/empreinte-par-km-volume\nexport const averageFootprintPerKm = 0.3; // kgCO2e/km/passager\n","import { CarSize, CarEngine, FuelType } from \"@domain/models/transport/car/Car\";\nimport { g45 } from \"@domain/models/transport/constants\";\n\nexport const defaultSize: CarSize = \"medium\";\n\nexport const defaultEngine: CarEngine = \"thermal\";\n\nexport const defaultFuelType: FuelType = \"gasoline\";\n\nexport const defaultYears = 5;\n\nexport const defaultAveragePassengers = 1.2;\n\n// l / 100km\n// https://librairie.ademe.fr/mobilite-et-transport/3273-elaboration-selon-les-principes-des-acv-des-bilans-energetiques-des-emissions-de-gaz-a-effet-de-serre-et-des-autres-impacts-environnementaux.html\nexport const defaultAverageFuelConsumption: Record<CarSize, number> = {\n  small: 5,\n  medium: 6,\n  vul: 6,\n  sedan: 7,\n  suv: 8,\n};\n\n// https://bilans-ges.ademe.fr/fr/basecarbone/donnees-consulter/liste-element?recherche=diesel\nexport const defaultAverageFootPrintPerLiter: Record<FuelType, number> = {\n  diesel: 3.1,\n  gasoline: 2.7,\n  biofuels: 1.11,\n};\n\n// https://www.statistiques.developpement-durable.gouv.fr/bilan-annuel-des-transports-en-2019-0 (p.3)\nexport const averageCarKmPerYear = 12200;\n\n// https://librairie.ademe.fr/cadic/7353/enquete-autopartage-2022-rapport.pdf (p.80)\nexport const sharedCarKmPerYear = 15130;\n\n// https://librairie.ademe.fr/mobilite-et-transport/1267-bilan-transversal-de-l-impact-de-l-electrification-par-segment.html\nexport const defaultCarLifetime = 10; // years\n\n// https://www.insee.fr/fr/statistiques/2045167#tableau-figure1_radio1\nconst vehiclesInCirculation = 37880000 + 5977000;\n\n// https://www.citepa.org/fr/secten/\nexport const fluorinatedGasEmissions = 1374000000; // kgCO2e\n\n// https://nosgestesclimat.fr/documentation/empreinte-branche/G45?lang=fr\nexport const g45VehicleMaintenancePart = 0.07;\n\nexport const thermalMaintenanceFootprint =\n  (g45 * 1000000 * g45VehicleMaintenancePart) /\n  vehiclesInCirculation /\n  averageCarKmPerYear;\n\nexport const airConditionerFootprint =\n  fluorinatedGasEmissions / vehiclesInCirculation / averageCarKmPerYear;\n\nexport const electricSmallCarFootprint = 0.0159;\nexport const electricMediumCarFootprint = 0.0198;\nexport const electricCarFootprint = 0.0273;\n\n// https://github.com/betagouv/ecolab-data/files/5945898/vehicule_electrique_rapport.pdf\nexport const thermalCarManufacturingFootprint: Record<CarSize, number> = {\n  small: 6700,\n  medium: 6700,\n  vul: 7600,\n  sedan: 7600,\n  suv: 7600,\n};\n\n// https://github.com/betagouv/ecolab-data/files/5945898/vehicule_electrique_rapport.pdf\nexport const hybridCarManufacturingFootprint: Record<CarSize, number> = {\n  small: 9600,\n  medium: 9600,\n  vul: 6900,\n  sedan: 6900,\n  suv: 6900,\n};\n\n// https://github.com/betagouv/ecolab-data/files/5945898/vehicule_electrique_rapport.pdf\nexport const electricCarManufacturingFootprint: Record<CarSize, number> = {\n  small: 10200,\n  medium: 10200,\n  vul: 20200,\n  sedan: 20200,\n  suv: 20200,\n};\n","/**\n * footprint = kgCO2e or kgC02e/km\n */\n\nimport {\n  airConditionerFootprint,\n  averageCarKmPerYear,\n  defaultAverageFootPrintPerLiter,\n  defaultAverageFuelConsumption,\n  defaultEngine,\n  defaultFuelType,\n  defaultSize,\n  electricCarFootprint,\n  electricCarManufacturingFootprint,\n  electricMediumCarFootprint,\n  electricSmallCarFootprint,\n  hybridCarManufacturingFootprint,\n  defaultCarLifetime,\n  sharedCarKmPerYear,\n  thermalCarManufacturingFootprint,\n  thermalMaintenanceFootprint,\n  defaultYears,\n  defaultAveragePassengers,\n} from \"./constants\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\n\nexport type CarSize = \"small\" | \"medium\" | \"vul\" | \"sedan\" | \"suv\";\nexport const carSizes: CarSize[] = [\"small\", \"medium\", \"vul\", \"sedan\", \"suv\"];\n\nexport type CarEngine = \"thermal\" | \"hybrid\" | \"electric\";\nexport const carEngines: CarEngine[] = [\"thermal\", \"hybrid\", \"electric\"];\n\nexport type FuelType = \"diesel\" | \"gasoline\" | \"biofuels\";\nexport const fuelTypes: FuelType[] = [\"diesel\", \"gasoline\", \"biofuels\"];\n\ntype Props = {\n  regularUser?: boolean;\n  kmPerYear?: number;\n  size?: CarSize;\n  engine?: CarEngine;\n  fuelType?: FuelType;\n  age?: number;\n  averageFuelConsumption?: number;\n  averagePassengers?: number;\n};\n\nexport class Car implements WithAnnualFootprint {\n  regularUser: boolean;\n  kmPerYear: number;\n  size: CarSize;\n  engine: CarEngine;\n  fuelType: FuelType;\n  age: number;\n  lifetime = defaultCarLifetime;\n  averageFuelConsumption;\n  averagePassengers;\n\n  constructor({\n    regularUser = true,\n    kmPerYear = averageCarKmPerYear,\n    age = defaultYears,\n    size = defaultSize,\n    engine = defaultEngine,\n    fuelType = defaultFuelType,\n    averageFuelConsumption = defaultAverageFuelConsumption.medium, // l/100km\n    averagePassengers = defaultAveragePassengers,\n  }: Props) {\n    this.regularUser = regularUser;\n    this.kmPerYear = kmPerYear;\n    this.size = size;\n    this.engine = engine;\n    this.fuelType = fuelType;\n    this.age = age;\n    this.averageFuelConsumption = averageFuelConsumption;\n    this.averagePassengers = averagePassengers;\n  }\n\n  public initValuesForNonRegularUser() {\n    this.size = defaultSize;\n    this.engine = defaultEngine;\n    this.fuelType = defaultFuelType;\n    this.averageFuelConsumption = defaultAverageFuelConsumption[this.size];\n  }\n\n  public get annualFootprint(): number {\n    if (this.kmPerYear === 0) return 0;\n    if (this.regularUser) return Math.floor(this.regularUserFootprint);\n    return Math.floor(this.nonRegularUserFootprint);\n  }\n\n  private get regularUserFootprint(): number {\n    return (\n      (this.carUseFootprint + this.amortizedManufacturingFootprint) /\n      this.averagePassengers\n    );\n  }\n\n  private get nonRegularUserFootprint(): number {\n    return (\n      ((this.manufacturingFootprint / this.lifetime) * this.rentalFactor +\n        this.carUseFootprint) /\n      this.averagePassengers\n    );\n  }\n\n  private get carUseFootprint(): number {\n    return this.kmPerYear * (this.footprintPerKm + this.footprintBasePerKm);\n  }\n\n  // http://www2.ademe.fr/servlet/KBaseShow?catid=13655\n  private get footprintPerKm(): number {\n    if (this.engine === \"electric\") {\n      if (this.size === \"small\") return electricSmallCarFootprint;\n      if (this.size === \"medium\") return electricMediumCarFootprint;\n      return electricCarFootprint;\n    }\n\n    const thermalCarFootprint =\n      (this.averageFuelConsumption / 100) *\n      defaultAverageFootPrintPerLiter[this.fuelType];\n\n    if (this.engine === \"hybrid\") return thermalCarFootprint * 0.85;\n\n    return thermalCarFootprint;\n  }\n\n  private get footprintBasePerKm(): number {\n    return this.weightedMaintenanceFootprint + this.airConditionerFootprint;\n  }\n\n  // https://izi-by-edf.fr/blog/voiture-hybride-entretien/\n  private get weightedMaintenanceFootprint(): number {\n    if (this.engine === \"hybrid\") return thermalMaintenanceFootprint * 0.9;\n    if (this.engine === \"electric\") return thermalMaintenanceFootprint * 0.75;\n    return thermalMaintenanceFootprint;\n  }\n\n  private get airConditionerFootprint(): number {\n    return airConditionerFootprint;\n  }\n\n  private get amortizedManufacturingFootprint(): number {\n    return this.manufacturingFootprint * this.amortization;\n  }\n\n  private get manufacturingFootprint(): number {\n    if (this.engine === \"hybrid\")\n      return hybridCarManufacturingFootprint[this.size];\n    if (this.engine === \"electric\")\n      return electricCarManufacturingFootprint[this.size];\n    return thermalCarManufacturingFootprint[this.size];\n  }\n\n  private get amortization(): number {\n    if (this.age < 10) return 1 / defaultCarLifetime;\n    return 0;\n  }\n\n  private get rentalFactor(): number {\n    return this.kmPerYear / sharedCarKmPerYear;\n  }\n}\n","import { haulFlight } from \"@domain/models/transport/plane/Plane\";\n\nexport const defaultAverageSpeed: Record<haulFlight, number> = {\n  // we take Paris-Toulouse as a reference flight, in km/h\n  short: 600 / 1.3,\n  // we take Paris-Alger as a reference flight, in km/h\n  medium: 1350 / 2.5,\n  // http://www.abm.fr/voyager-en-avion-le-guide-du-passager/en-complement/distances-et-durees-de-vol.html\n  long: 5800 / 8.5,\n};\n\nexport const defaultAverageFootprintPerKm: Record<haulFlight, number> = {\n  // cf footprint \"Avion passagers - Court courrier, 2018 - AVEC trainées\"\n  short: 0.258,\n  // cf footprint \"Avion passagers - Moyen courrier, 2018 - AVEC trainées\"\n  medium: 0.187,\n  // cf footprint \"Avion passagers - Long courrier, 2018 - AVEC trainées\"\n  long: 0.152,\n};\n","import { defaultAverageFootprintPerKm, defaultAverageSpeed } from \"./constants\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\n\nexport type haulFlight = \"short\" | \"medium\" | \"long\";\n\ntype Props = {\n  usage?: boolean;\n  hoursPerYearInShortHaul?: number;\n  hoursPerYearInMediumHaul?: number;\n  hoursPerYearInLongHaul?: number;\n};\n\nexport class Plane implements WithAnnualFootprint {\n  usage: boolean;\n  hoursPerYearInShortHaul: number;\n  hoursPerYearInMediumHaul: number;\n  hoursPerYearInLongHaul: number;\n\n  constructor({\n    usage = false,\n    hoursPerYearInShortHaul = 0,\n    hoursPerYearInMediumHaul = 0,\n    hoursPerYearInLongHaul = 0,\n  }: Props) {\n    this.usage = usage;\n    this.hoursPerYearInShortHaul = hoursPerYearInShortHaul;\n    this.hoursPerYearInMediumHaul = hoursPerYearInMediumHaul;\n    this.hoursPerYearInLongHaul = hoursPerYearInLongHaul;\n  }\n\n  public resetValues() {\n    this.usage = false;\n    this.hoursPerYearInShortHaul = 0;\n    this.hoursPerYearInMediumHaul = 0;\n    this.hoursPerYearInLongHaul = 0;\n  }\n\n  public get annualFootprint(): number {\n    if (!this.usage) return 0;\n\n    const shortHaulFootprint =\n      this.hoursPerYearInShortHaul *\n      defaultAverageSpeed[\"short\"] *\n      defaultAverageFootprintPerKm[\"short\"];\n\n    const mediumHaulFootprint =\n      this.hoursPerYearInMediumHaul *\n      defaultAverageSpeed[\"medium\"] *\n      defaultAverageFootprintPerKm[\"medium\"];\n\n    const longHaulFootprint =\n      this.hoursPerYearInLongHaul *\n      defaultAverageSpeed[\"long\"] *\n      defaultAverageFootprintPerKm[\"long\"];\n\n    return Math.round(\n      shortHaulFootprint + mediumHaulFootprint + longHaulFootprint,\n    );\n  }\n}\n","import {\n  averageTrainFootprintPerKm,\n  averageBusFootprintPerHour,\n  defaultHoursPerYearInTrain,\n  averageMetroFootprintPerHour,\n} from \"./constants\";\nimport { weeksInYear } from \"@domain/models/constants\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\n\ntype Props = {\n  hoursPerYearInTrain?: number;\n  hoursPerWeekInMetro?: number;\n  hoursPerWeekInBus?: number;\n};\n\nexport class PublicTransport implements WithAnnualFootprint {\n  hoursPerYearInTrain: number;\n  hoursPerWeekInMetro: number;\n  hoursPerWeekInBus: number;\n\n  constructor({\n    hoursPerYearInTrain = defaultHoursPerYearInTrain,\n    hoursPerWeekInMetro = 0,\n    hoursPerWeekInBus = 0,\n  }: Props) {\n    this.hoursPerYearInTrain = hoursPerYearInTrain;\n    this.hoursPerWeekInMetro = hoursPerWeekInMetro;\n    this.hoursPerWeekInBus = hoursPerWeekInBus;\n  }\n\n  private get trainAnnualFootprint(): number {\n    return this.hoursPerYearInTrain * averageTrainFootprintPerKm;\n  }\n\n  private get metroWeekFootprint(): number {\n    return (\n      this.hoursPerWeekInMetro * averageMetroFootprintPerHour * weeksInYear\n    );\n  }\n\n  private get busWeekFootprint(): number {\n    return this.hoursPerWeekInBus * averageBusFootprintPerHour * weeksInYear;\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      this.trainAnnualFootprint +\n        this.metroWeekFootprint +\n        this.busWeekFootprint,\n    );\n  }\n}\n","// (TER + TGV) / 2. Cf Base Carbone 04/04/2022 (SNCF)\nexport const averageTrainFootprintPerKm = (0.0296 + 0.00236) / 2;\n\nexport const defaultHoursPerYearInTrain = 1000;\n\n// cf Base Carbone 04/04/2022 (SNCF)\nconst metroFootprintPerKm = 0.00329;\n\n//http://transports.blog.lemonde.fr/2013/03/11/les-petits-secrets-de-la-ratp-reveles-au-public/\nconst metroAverageSpeed = 25; // km/h\n\nexport const averageMetroFootprintPerHour =\n  metroFootprintPerKm * metroAverageSpeed;\n\n// cf Base Carbone 04/04/2022 (SNCF)\nconst busFootprintPerKm = 0.113;\n\n// https://www.lemonde.fr/blog/transports/2013/03/11/les-petits-secrets-de-la-ratp-reveles-au-public/\nconst busAverageSpeed = 12; // km/h\n\nexport const averageBusFootprintPerHour = busFootprintPerKm * busAverageSpeed;\n","import { g45 } from \"@domain/models/transport/constants\";\nimport { TwoWheelerType } from \"@domain/models/transport/two-wheeler/TwoWheeler\";\n\nexport const defaultTwoWheelerType: TwoWheelerType = \"thermalScooter\";\n\n// cf ADEME - HBEFA (2020)\nexport const twoWheelerDefaultFootprint: Record<TwoWheelerType, number> = {\n  thermalScooter: 0.0763,\n  electricScooter: 0.03,\n  motorbikeLT250: 0.0763,\n  motorbikeGT250: 0.191,\n};\n\n// https://nosgestesclimat.fr/documentation/empreinte-branche/G45?lang=fr\nconst g45VehicleMaintenancePart = 0.07;\nconst g45VehicleBusinessPart = 0.69;\nconst g45MotorbikePart = 0.02;\n\n// https://www.onisr.securite-routiere.gouv.fr/etudes-et-recherches/vehicules/parc-des-vehicules/le-parc-deux-roues-motorises-des-menages\nconst twoWheelerInCirculation = 2700000;\n\n// https://www.statistiques.developpement-durable.gouv.fr/bilan-annuel-des-transports-en-2019-0 (G1-1)\nconst averageTwoWheelerKmPerYear = 3000;\n\nexport const thermalMaintenanceFootprint =\n  (g45 * 1000000 * g45MotorbikePart * g45VehicleMaintenancePart) /\n  (g45VehicleBusinessPart + g45VehicleMaintenancePart) /\n  twoWheelerInCirculation /\n  averageTwoWheelerKmPerYear;\n","import {\n  defaultTwoWheelerType,\n  thermalMaintenanceFootprint,\n  twoWheelerDefaultFootprint,\n} from \"./constants\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\n\nexport type TwoWheelerType =\n  | \"thermalScooter\"\n  | \"electricScooter\"\n  | \"motorbikeLT250\"\n  | \"motorbikeGT250\";\n\nexport const TwoWheelerTypes: TwoWheelerType[] = [\n  \"thermalScooter\",\n  \"electricScooter\",\n  \"motorbikeLT250\",\n  \"motorbikeGT250\",\n];\n\ntype Props = {\n  usage?: boolean;\n  type?: TwoWheelerType;\n  kmPerYear?: number;\n};\n\nexport class TwoWheeler implements WithAnnualFootprint {\n  usage: boolean;\n  type: TwoWheelerType;\n  kmPerYear: number;\n\n  constructor({\n    usage = false,\n    type = defaultTwoWheelerType,\n    kmPerYear = 0,\n  }: Props) {\n    this.usage = usage;\n    this.type = type;\n    this.kmPerYear = kmPerYear;\n  }\n\n  public resetValues() {\n    this.usage = false;\n    this.type = defaultTwoWheelerType;\n    this.kmPerYear = 0;\n  }\n\n  public get annualFootprint(): number {\n    if (!this.usage || this.kmPerYear === 0) return 0;\n    return Math.floor(\n      (this.footprintPerKm + this.weightedMaintenanceFootprint) *\n        this.kmPerYear,\n    );\n  }\n\n  private get footprintPerKm(): number {\n    return twoWheelerDefaultFootprint[this.type];\n  }\n\n  private get weightedMaintenanceFootprint(): number {\n    const maintenanceFootprint = thermalMaintenanceFootprint;\n    if (this.type === \"electricScooter\") return maintenanceFootprint * 0.75;\n    return maintenanceFootprint;\n  }\n}\n","import { Boat } from \"@domain/models/transport/boat/Boat\";\nimport { Car } from \"@domain/models/transport/car/Car\";\nimport { Plane } from \"@domain/models/transport/plane/Plane\";\nimport { PublicTransport } from \"@domain/models/transport/public-transport/PublicTransport\";\nimport { TwoWheeler } from \"@domain/models/transport/two-wheeler/TwoWheeler\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\n\ntype Props = {\n  car?: Car;\n  twoWheeler?: TwoWheeler;\n  plane?: Plane;\n  boat?: Boat;\n  publicTransport?: PublicTransport;\n};\n\nexport class Transport implements WithAnnualFootprint {\n  car: Car;\n  twoWheeler: TwoWheeler;\n  plane: Plane;\n  boat: Boat;\n  publicTransport: PublicTransport;\n\n  constructor({ car, twoWheeler, plane, boat, publicTransport }: Props) {\n    this.car = new Car(car ?? {});\n    this.twoWheeler = new TwoWheeler(twoWheeler ?? {});\n    this.plane = new Plane(plane ?? {});\n    this.boat = new Boat(boat ?? {});\n    this.publicTransport = new PublicTransport(publicTransport ?? {});\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      this.car.annualFootprint +\n        this.twoWheeler.annualFootprint +\n        this.plane.annualFootprint +\n        this.boat.annualFootprint +\n        this.publicTransport.annualFootprint,\n    );\n  }\n}\n","import { EverydayThings } from \"@domain/models/everyday-things/EverydayThings\";\nimport { Food } from \"@domain/models/food/Food\";\nimport { Housing } from \"@domain/models/housing/Housing\";\nimport { PublicServices } from \"@domain/models/public-services/PublicServices\";\nimport { Transport } from \"@domain/models/transport/Transport\";\nimport { EmissionsRepository } from \"@domain/repositories/EmissionsRepository\";\n\nexport class EmissionsInMemoryRepository implements EmissionsRepository {\n  private transport: Transport = new Transport({});\n  private food: Food = new Food({});\n  private housing: Housing = new Housing({});\n  private everydayThings: EverydayThings = new EverydayThings({});\n  private publicServices: PublicServices = new PublicServices();\n\n  fetchTransport(): Transport {\n    return this.transport;\n  }\n\n  updateTransport(transport: Transport): void {\n    this.transport = new Transport(transport);\n  }\n\n  fetchFood(): Food {\n    return this.food;\n  }\n\n  updateFood(food: Food): void {\n    this.food = new Food(food);\n  }\n\n  fetchHousing(): Housing {\n    return this.housing;\n  }\n\n  updateHousing(housing: Housing): void {\n    this.housing = new Housing(housing);\n  }\n\n  fetchEverydayThings(): EverydayThings {\n    return this.everydayThings;\n  }\n\n  updateEverydayThings(everydayThings: EverydayThings): void {\n    this.everydayThings = new EverydayThings(everydayThings);\n  }\n\n  fetchPublicServices(): PublicServices {\n    return this.publicServices;\n  }\n\n  injectFakeTransport(transport: Transport): void {\n    this.transport = new Transport(transport);\n  }\n\n  injectFakeFood(food: Food): void {\n    this.food = new Food(food);\n  }\n\n  injectFakeHousing(housing: Housing): void {\n    this.housing = new Housing(housing);\n  }\n\n  injectFakeEverydayThings(everydayThings: EverydayThings): void {\n    this.everydayThings = new EverydayThings(everydayThings);\n  }\n}\n","import { useAppStore } from \"@data/store/store\";\nimport { EverydayThings } from \"@domain/models/everyday-things/EverydayThings\";\nimport { Food } from \"@domain/models/food/Food\";\nimport { Housing } from \"@domain/models/housing/Housing\";\nimport { Transport } from \"@domain/models/transport/Transport\";\n\nexport const appStoreActions = {\n  getTransport: () => useAppStore.getState().transport,\n\n  setTransport: (transport: Transport) =>\n    useAppStore.setState((state) => ({ ...state, transport })),\n\n  getFood: () => useAppStore.getState().food,\n\n  setFood: (food: Food) =>\n    useAppStore.setState((state) => ({ ...state, food })),\n\n  getHousing: () => useAppStore.getState().housing,\n\n  setHousing: (housing: Housing) =>\n    useAppStore.setState((state) => ({ ...state, housing })),\n\n  getEverydayThings: () => useAppStore.getState().everydayThings,\n\n  setEverydayThings: (everydayThings: EverydayThings) =>\n    useAppStore.setState((state) => ({ ...state, everydayThings })),\n};\n","import { Food } from \"@domain/models/food/Food\";\nimport { PublicServices } from \"@domain/models/public-services/PublicServices\";\nimport { Transport } from \"@domain/models/transport/Transport\";\nimport { EmissionsRepository } from \"@domain/repositories/EmissionsRepository\";\nimport { appStoreActions } from \"@data/store/storeActions\";\nimport { Housing } from \"@domain/models/housing/Housing\";\nimport { EverydayThings } from \"@domain/models/everyday-things/EverydayThings\";\n\nexport class EmissionsStoreRepository implements EmissionsRepository {\n  fetchTransport(): Transport {\n    const storedTransport = appStoreActions.getTransport();\n    return new Transport(storedTransport);\n  }\n\n  updateTransport(transport: Transport): void {\n    return appStoreActions.setTransport(transport);\n  }\n\n  fetchFood(): Food {\n    const storedFood = appStoreActions.getFood();\n    return new Food(storedFood);\n  }\n\n  updateFood(food: Food): void {\n    return appStoreActions.setFood(food);\n  }\n\n  fetchHousing(): Housing {\n    const storedHousing = appStoreActions.getHousing();\n    return new Housing(storedHousing);\n  }\n\n  updateHousing(housing: Housing): void {\n    return appStoreActions.setHousing(housing);\n  }\n\n  fetchEverydayThings(): EverydayThings {\n    const storedEverydayThings = appStoreActions.getEverydayThings();\n    return new EverydayThings(storedEverydayThings);\n  }\n\n  updateEverydayThings(everydayThings: EverydayThings): void {\n    return appStoreActions.setEverydayThings(everydayThings);\n  }\n\n  fetchPublicServices(): PublicServices {\n    const publicServices = new PublicServices();\n    return publicServices;\n  }\n}\n","import { EmissionsRepository } from \"@domain/repositories/EmissionsRepository\";\n\nexport const createUseComputeTotalAnnualFootprint = (\n  emissionsRepository: EmissionsRepository,\n) =>\n  function useComputeTotalAnnualFootprint() {\n    const computeTotalAnnualFootprint = (): number => {\n      const transport = emissionsRepository.fetchTransport();\n      const food = emissionsRepository.fetchFood();\n      const housing = emissionsRepository.fetchHousing();\n      const everydayThings = emissionsRepository.fetchEverydayThings();\n      const publicServices = emissionsRepository.fetchPublicServices();\n\n      return (\n        transport.annualFootprint +\n        food.annualFootprint +\n        housing.annualFootprint +\n        everydayThings.annualFootprint +\n        publicServices.annualFootprint\n      );\n    };\n\n    return { computeTotalAnnualFootprint };\n  };\n","import { Food } from \"@domain/models/food/Food\";\nimport { EmissionsRepository } from \"@domain/repositories/EmissionsRepository\";\n\nexport const createUseFetchFood = (emissionsRepository: EmissionsRepository) =>\n  function useFetchFood() {\n    const fetchFood = (): Food => {\n      return emissionsRepository.fetchFood();\n    };\n\n    return { fetchFood };\n  };\n","import { PublicServices } from \"@domain/models/public-services/PublicServices\";\nimport { EmissionsRepository } from \"@domain/repositories/EmissionsRepository\";\n\nexport const createUseFetchPublicServices = (\n  emissionsRepository: EmissionsRepository,\n) =>\n  function useFetchPublicServices() {\n    const fetchPublicServices = (): PublicServices => {\n      return emissionsRepository.fetchPublicServices();\n    };\n\n    return { fetchPublicServices };\n  };\n","import { Transport } from \"@domain/models/transport/Transport\";\nimport { EmissionsRepository } from \"@domain/repositories/EmissionsRepository\";\n\nexport const createUseFetchTransport = (\n  emissionsRepository: EmissionsRepository,\n) =>\n  function useFetchTransport() {\n    const fetchTransport = (): Transport => {\n      return emissionsRepository.fetchTransport();\n    };\n\n    return { fetchTransport };\n  };\n","import { Drinks } from \"@domain/models/food/drinks/Drinks\";\nimport { Meals } from \"@domain/models/food/meals/Meals\";\nimport { Waste } from \"@domain/models/food/waste/Waste\";\nimport { EmissionsRepository } from \"@domain/repositories/EmissionsRepository\";\n\nexport const createUseUpdateFood = (emissionsRepository: EmissionsRepository) =>\n  function useUpdateFood() {\n    const updateMeals = (values: Meals) => {\n      const newMeals = new Meals(values);\n\n      const newFood = emissionsRepository.fetchFood();\n      newFood.meals = newMeals;\n\n      emissionsRepository.updateFood(newFood);\n    };\n\n    const updateDrinks = (values: Drinks) => {\n      const newDrinks = new Drinks(values);\n\n      const newFood = emissionsRepository.fetchFood();\n      newFood.drinks = newDrinks;\n\n      emissionsRepository.updateFood(newFood);\n    };\n\n    const updateWaste = (values: Waste) => {\n      const newWaste = new Waste(values);\n\n      const newFood = emissionsRepository.fetchFood();\n      newFood.waste = newWaste;\n\n      emissionsRepository.updateFood(newFood);\n    };\n\n    return {\n      updateMeals,\n      updateDrinks,\n      updateWaste,\n    };\n  };\n","import { Boat } from \"@domain/models/transport/boat/Boat\";\nimport { Car } from \"@domain/models/transport/car/Car\";\nimport { Plane } from \"@domain/models/transport/plane/Plane\";\nimport { PublicTransport } from \"@domain/models/transport/public-transport/PublicTransport\";\nimport { TwoWheeler } from \"@domain/models/transport/two-wheeler/TwoWheeler\";\nimport { EmissionsRepository } from \"@domain/repositories/EmissionsRepository\";\n\nexport const createUseUpdateTransport = (\n  emissionsRepository: EmissionsRepository,\n) =>\n  function useUpdateTransport() {\n    const updateCar = (values: Car) => {\n      const newCar = new Car(values);\n      if (!newCar.regularUser) newCar.initValuesForNonRegularUser();\n\n      const newTransport = emissionsRepository.fetchTransport();\n      newTransport.car = newCar;\n\n      emissionsRepository.updateTransport(newTransport);\n    };\n\n    const updateTwoWheeler = (values: TwoWheeler) => {\n      const newTwoWheeler = new TwoWheeler(values);\n      if (!newTwoWheeler.usage) newTwoWheeler.resetValues();\n\n      const newTransport = emissionsRepository.fetchTransport();\n      newTransport.twoWheeler = newTwoWheeler;\n\n      emissionsRepository.updateTransport(newTransport);\n    };\n\n    const updatePlane = (values: Plane) => {\n      const newPlane = new Plane(values);\n      if (!newPlane.usage) newPlane.resetValues();\n\n      const newTransport = emissionsRepository.fetchTransport();\n      newTransport.plane = newPlane;\n\n      emissionsRepository.updateTransport(newTransport);\n    };\n\n    const updateBoat = (values: Boat) => {\n      const newBoat = new Boat(values);\n      if (!newBoat.usage) newBoat.resetValues();\n\n      const newTransport = emissionsRepository.fetchTransport();\n      newTransport.boat = newBoat;\n\n      emissionsRepository.updateTransport(newTransport);\n    };\n\n    const updatePublicTransport = (values: PublicTransport) => {\n      const newPublicTransport = new PublicTransport(values);\n\n      const newTransport = emissionsRepository.fetchTransport();\n      newTransport.publicTransport = newPublicTransport;\n\n      emissionsRepository.updateTransport(newTransport);\n    };\n\n    return {\n      updateCar,\n      updateTwoWheeler,\n      updatePlane,\n      updateBoat,\n      updatePublicTransport,\n    };\n  };\n","import { Housing } from \"@domain/models/housing/Housing\";\nimport { EmissionsRepository } from \"@domain/repositories/EmissionsRepository\";\n\nexport const createUseFetchHousing = (\n  emissionsRepository: EmissionsRepository,\n) =>\n  function useFetchHousing() {\n    const fetchHousing = (): Housing => {\n      return emissionsRepository.fetchHousing();\n    };\n\n    return { fetchHousing };\n  };\n","import { Energy } from \"@domain/models/housing/energy/Energy\";\nimport { Home } from \"@domain/models/housing/home/Home\";\nimport { Leisure } from \"@domain/models/housing/leisure/Leisure\";\nimport { EmissionsRepository } from \"@domain/repositories/EmissionsRepository\";\n\nexport const createUseUpdateHousing = (\n  emissionsRepository: EmissionsRepository,\n) =>\n  function useUpdateHousing() {\n    const updateHome = (values: Home) => {\n      const newHome = new Home(values);\n\n      const newHousing = emissionsRepository.fetchHousing();\n      newHousing.home = newHome;\n      newHousing.energy.occupants = newHome.occupants;\n      newHousing.energy.livingSpace = newHome.livingSpace;\n      newHousing.energy.isAnApartment = newHome.isAnApartment;\n      newHousing.leisure.occupants = newHome.occupants;\n      newHousing.leisure.isAnApartment = newHome.isAnApartment;\n\n      const newEverydayThings = emissionsRepository.fetchEverydayThings();\n      newEverydayThings.pets.occupants = newHome.occupants;\n      newEverydayThings.digital.occupants = newHome.occupants;\n      newEverydayThings.furniture.occupants = newHome.occupants;\n      newEverydayThings.householdAppliances.occupants = newHome.occupants;\n\n      emissionsRepository.updateHousing(newHousing);\n      emissionsRepository.updateEverydayThings(newEverydayThings);\n    };\n\n    const updateEnergy = (values: Energy) => {\n      const newEnergy = new Energy(values);\n\n      const newHousing = emissionsRepository.fetchHousing();\n      newHousing.energy = newEnergy;\n\n      emissionsRepository.updateHousing(newHousing);\n    };\n\n    const updateLeisure = (values: Leisure) => {\n      const newLeisure = new Leisure(values);\n\n      const newHousing = emissionsRepository.fetchHousing();\n      newHousing.leisure = newLeisure;\n\n      emissionsRepository.updateHousing(newHousing);\n    };\n\n    return {\n      updateHome,\n      updateEnergy,\n      updateLeisure,\n    };\n  };\n","import { EmissionsRepository } from \"@domain/repositories/EmissionsRepository\";\n\nexport const createUseFetchEverydayThings = (\n  emissionsRepository: EmissionsRepository,\n) => {\n  return function useFetchEverydayThings() {\n    const fetchEverydayThings = () => {\n      return emissionsRepository.fetchEverydayThings();\n    };\n\n    return { fetchEverydayThings };\n  };\n};\n","import { Clothes } from \"@domain/models/everyday-things/clothes/Clothes\";\nimport { ConsumableProducts } from \"@domain/models/everyday-things/consumable-products/ConsumableProducts\";\nimport { Digital } from \"@domain/models/everyday-things/digital/Digital\";\nimport { Furniture } from \"@domain/models/everyday-things/furniture/Furniture\";\nimport { Hobbies } from \"@domain/models/everyday-things/hobbies/Hobbies\";\nimport { HouseholdAppliances } from \"@domain/models/everyday-things/household-appliances/HouseholdAppliances\";\nimport { OtherProducts } from \"@domain/models/everyday-things/other-products/OtherProducts\";\nimport { Pets } from \"@domain/models/everyday-things/pets/Pets\";\nimport { Tobacco } from \"@domain/models/everyday-things/tobacco/Tobacco\";\nimport { EmissionsRepository } from \"@domain/repositories/EmissionsRepository\";\n\nexport const createUseUpdateEverydayThings = (\n  emissionsRepository: EmissionsRepository,\n) =>\n  function useUpdateEverydayThings() {\n    const updatePets = (values: Pets) => {\n      const newPets = new Pets(values);\n\n      const newEverydayThings = emissionsRepository.fetchEverydayThings();\n      newEverydayThings.pets = newPets;\n\n      emissionsRepository.updateEverydayThings(newEverydayThings);\n    };\n\n    const updateClothes = (values: Clothes) => {\n      const newClothes = new Clothes(values);\n\n      const newEverydayThings = emissionsRepository.fetchEverydayThings();\n      newEverydayThings.clothes = newClothes;\n\n      emissionsRepository.updateEverydayThings(newEverydayThings);\n    };\n\n    const updateHouseholdAppliances = (values: HouseholdAppliances) => {\n      const newHouseholdAppliances = new HouseholdAppliances(values);\n\n      const newEverydayThings = emissionsRepository.fetchEverydayThings();\n      newEverydayThings.householdAppliances = newHouseholdAppliances;\n\n      emissionsRepository.updateEverydayThings(newEverydayThings);\n    };\n\n    const updateFurniture = (values: Furniture) => {\n      const newFurniture = new Furniture(values);\n\n      const newEverydayThings = emissionsRepository.fetchEverydayThings();\n      newEverydayThings.furniture = newFurniture;\n\n      emissionsRepository.updateEverydayThings(newEverydayThings);\n    };\n\n    const updateDigital = (values: Digital) => {\n      const newDigital = new Digital(values);\n\n      const newEverydayThings = emissionsRepository.fetchEverydayThings();\n      newEverydayThings.digital = newDigital;\n\n      emissionsRepository.updateEverydayThings(newEverydayThings);\n    };\n\n    const updateHobbies = (values: Hobbies) => {\n      const newHobbies = new Hobbies(values);\n\n      const newEverydayThings = emissionsRepository.fetchEverydayThings();\n      newEverydayThings.hobbies = newHobbies;\n\n      emissionsRepository.updateEverydayThings(newEverydayThings);\n    };\n\n    const updateConsumableProducts = (values: ConsumableProducts) => {\n      const newConsumableProducts = new ConsumableProducts(values);\n\n      const newEverydayThings = emissionsRepository.fetchEverydayThings();\n      newEverydayThings.consumableProducts = newConsumableProducts;\n\n      emissionsRepository.updateEverydayThings(newEverydayThings);\n    };\n\n    const updateTobacco = (values: Tobacco) => {\n      const newTobacco = new Tobacco(values);\n\n      const newEverydayThings = emissionsRepository.fetchEverydayThings();\n      newEverydayThings.tobacco = newTobacco;\n\n      emissionsRepository.updateEverydayThings(newEverydayThings);\n    };\n\n    const updateOtherProducts = (values: OtherProducts) => {\n      const newOtherProducts = new OtherProducts(values);\n\n      const newEverydayThings = emissionsRepository.fetchEverydayThings();\n      newEverydayThings.otherProducts = newOtherProducts;\n\n      emissionsRepository.updateEverydayThings(newEverydayThings);\n    };\n\n    return {\n      updatePets,\n      updateClothes,\n      updateHouseholdAppliances,\n      updateFurniture,\n      updateDigital,\n      updateHobbies,\n      updateConsumableProducts,\n      updateTobacco,\n      updateOtherProducts,\n    };\n  };\n","import { createContext } from \"react\";\n\nimport { EmissionsInMemoryRepository } from \"@data/repositories/EmissionsInMemoryRepository\";\nimport { EmissionsStoreRepository } from \"@data/repositories/EmissionsStoreRepository\";\nimport { EmissionsRepository } from \"@domain/repositories/EmissionsRepository\";\nimport { createUseComputeTotalAnnualFootprint } from \"@domain/usecases/computeTotalAnnualFootprint\";\nimport { createUseFetchFood } from \"@domain/usecases/fetchFood\";\nimport { createUseFetchPublicServices } from \"@domain/usecases/fetchPublicServices\";\nimport { createUseFetchTransport } from \"@domain/usecases/fetchTransport\";\nimport { createUseUpdateFood } from \"@domain/usecases/updateFood\";\nimport { createUseUpdateTransport } from \"@domain/usecases/updateTransport\";\nimport { createUseFetchHousing } from \"@domain/usecases/fetchHousing\";\nimport { createUseUpdateHousing } from \"@domain/usecases/updateHousing\";\nimport { createUseFetchEverydayThings } from \"@domain/usecases/fetchEverydayThings\";\nimport { createUseUpdateEverydayThings } from \"@domain/usecases/updateEverydayThings\";\n\nconst isTestMode = process.env.NODE_ENV === \"test\";\n\ninterface Repositories {\n  emissionsRepository: EmissionsRepository;\n}\n\nconst initRealRepositories = () => ({\n  emissionsRepository: new EmissionsStoreRepository(),\n});\n\nexport const initFakeRepositories = () => ({\n  emissionsRepository: new EmissionsInMemoryRepository(),\n});\n\nconst repositories: Repositories = isTestMode\n  ? initFakeRepositories()\n  : initRealRepositories();\n\nconst initUsecases = (repositories: Repositories) => {\n  const { emissionsRepository } = repositories;\n\n  return {\n    useFetchTransport: createUseFetchTransport(emissionsRepository),\n    useUpdateTransport: createUseUpdateTransport(emissionsRepository),\n    useFetchFood: createUseFetchFood(emissionsRepository),\n    useUpdateFood: createUseUpdateFood(emissionsRepository),\n    useFetchHousing: createUseFetchHousing(emissionsRepository),\n    useUpdateHousing: createUseUpdateHousing(emissionsRepository),\n    useFetchEverydayThings: createUseFetchEverydayThings(emissionsRepository),\n    useUpdateEverydayThings: createUseUpdateEverydayThings(emissionsRepository),\n    useFetchPublicServices: createUseFetchPublicServices(emissionsRepository),\n    useComputeTotalAnnualFootprint:\n      createUseComputeTotalAnnualFootprint(emissionsRepository),\n  };\n};\n\nconst usecases = initUsecases(repositories);\n\nconst UsecasesContext = createContext(usecases);\n\nexport type { Repositories };\nexport { UsecasesContext };\n","export enum FootprintCategories {\n  TRANSPORT = \"transport\",\n  HOUSING = \"housing\",\n  FOOD = \"food\",\n  EVERYDAY_THINGS = \"everydayThings\",\n  PUBLIC_SERVICES = \"publicServices\",\n}\n","import { IconSource } from \"react-native-paper/lib/typescript/components/Icon\";\n\nimport foodImage from \"@assets/images/food.svg\";\nimport everydayThingsImage from \"@assets/images/goods.svg\";\nimport housingImage from \"@assets/images/house.svg\";\nimport publicServicesImage from \"@assets/images/public_services.svg\";\nimport transportImage from \"@assets/images/transport.svg\";\nimport { FootprintCategories } from \"@domain/models/Categories\";\n\nexport class FootprintByCategory {\n  public color: string = \"\";\n  public icon: string = \"\";\n  public part: number;\n  public image: string = \"\";\n  public materialIcon: IconSource = \"\";\n\n  protected constructor(\n    public category: FootprintCategories,\n    public footprint: number,\n    totalFootprint: number,\n  ) {\n    this.part = this.computePart(totalFootprint);\n  }\n\n  static forTransport(\n    footprint: number,\n    totalFootprint: number,\n  ): FootprintByCategory {\n    return new FootprintCategoryTransport(footprint, totalFootprint);\n  }\n\n  static forFood(\n    footprint: number,\n    totalFootprint: number,\n  ): FootprintByCategory {\n    return new FootprintCategoryFood(footprint, totalFootprint);\n  }\n\n  static forHousing(\n    footprint: number,\n    totalFootprint: number,\n  ): FootprintByCategory {\n    return new FootprintCategoryHousing(footprint, totalFootprint);\n  }\n\n  static forEverydayThings(\n    footprint: number,\n    totalFootprint: number,\n  ): FootprintByCategory {\n    return new FootprintCategoryEverydayThings(footprint, totalFootprint);\n  }\n\n  static forPublicServices(\n    footprint: number,\n    totalFootprint: number,\n  ): FootprintByCategory {\n    return new FootprintCategoryPublicServices(footprint, totalFootprint);\n  }\n\n  private computePart = (totalFootprint: number) =>\n    totalFootprint === 0\n      ? 0\n      : Math.floor((this.footprint / totalFootprint) * 100);\n}\n\nclass FootprintCategoryTransport extends FootprintByCategory {\n  constructor(footprint: number, totalFootprint: number) {\n    super(FootprintCategories.TRANSPORT, footprint, totalFootprint);\n    this.color = \"sandybrown\";\n    this.icon = \"🚗\";\n    this.materialIcon = \"car\";\n    this.image = transportImage;\n  }\n}\n\nclass FootprintCategoryFood extends FootprintByCategory {\n  constructor(footprint: number, totalFootprint: number) {\n    super(FootprintCategories.FOOD, footprint, totalFootprint);\n    this.color = \"plum\";\n    this.icon = \"🍲\";\n    this.materialIcon = \"food\";\n    this.image = foodImage;\n  }\n}\n\nclass FootprintCategoryHousing extends FootprintByCategory {\n  constructor(footprint: number, totalFootprint: number) {\n    super(FootprintCategories.HOUSING, footprint, totalFootprint);\n    this.color = \"cadetblue\";\n    this.icon = \"🏠\";\n    this.materialIcon = \"home\";\n    this.image = housingImage;\n  }\n}\n\nclass FootprintCategoryEverydayThings extends FootprintByCategory {\n  constructor(footprint: number, totalFootprint: number) {\n    super(FootprintCategories.EVERYDAY_THINGS, footprint, totalFootprint);\n    this.color = \"khaki\";\n    this.icon = \"🛍️\";\n    this.materialIcon = \"package\";\n    this.image = everydayThingsImage;\n  }\n}\n\nclass FootprintCategoryPublicServices extends FootprintByCategory {\n  constructor(footprint: number, totalFootprint: number) {\n    super(FootprintCategories.PUBLIC_SERVICES, footprint, totalFootprint);\n    this.color = \"steelblue\";\n    this.icon = \"🏛\";\n    this.materialIcon = \"bank\";\n    this.image = publicServicesImage;\n  }\n}\n\nexport type Footprints = Record<FootprintCategories, FootprintByCategory>;\n","import { useContext, useMemo } from \"react\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { Footprints, FootprintByCategory } from \"@view/view-models/Footprint\";\n\nexport const useFootprints = () => {\n  const appStore = useAppStore((store) => store);\n\n  const {\n    useFetchTransport,\n    useFetchFood,\n    useFetchHousing,\n    useFetchEverydayThings,\n    useFetchPublicServices,\n    useComputeTotalAnnualFootprint,\n  } = useContext(UsecasesContext);\n\n  const { computeTotalAnnualFootprint } = useComputeTotalAnnualFootprint();\n  const { fetchTransport } = useFetchTransport();\n  const { fetchFood } = useFetchFood();\n  const { fetchHousing } = useFetchHousing();\n  const { fetchEverydayThings } = useFetchEverydayThings();\n  const { fetchPublicServices } = useFetchPublicServices();\n\n  const transport = useMemo(() => fetchTransport(), [appStore]);\n  const food = useMemo(() => fetchFood(), [appStore]);\n  const housing = useMemo(() => fetchHousing(), [appStore]);\n  const everydayThings = useMemo(() => fetchEverydayThings(), [appStore]);\n  const publicServices = useMemo(() => fetchPublicServices(), [appStore]);\n  const totalAnnualFootprint = useMemo(\n    () => computeTotalAnnualFootprint(),\n    [appStore],\n  );\n\n  const footprints: Footprints = {\n    transport: FootprintByCategory.forTransport(\n      transport.annualFootprint,\n      totalAnnualFootprint,\n    ),\n    food: FootprintByCategory.forFood(\n      food.annualFootprint,\n      totalAnnualFootprint,\n    ),\n    housing: FootprintByCategory.forHousing(\n      housing.annualFootprint,\n      totalAnnualFootprint,\n    ),\n    everydayThings: FootprintByCategory.forEverydayThings(\n      everydayThings.annualFootprint,\n      totalAnnualFootprint,\n    ),\n    publicServices: FootprintByCategory.forPublicServices(\n      publicServices.annualFootprint,\n      totalAnnualFootprint,\n    ),\n  };\n\n  return { footprints, totalAnnualFootprint };\n};\n","import { ScrollView, View } from \"react-native\";\n\nimport { EmissionsDataTable } from \"@view/screens/emissions/EmissionsDataTable\";\nimport { EmissionsDistribution } from \"@view/screens/emissions/EmissionsDistribution\";\nimport { EmissionsEstimationButton } from \"@view/screens/emissions/EmissionsEstimationButton\";\nimport { EmissionsTitle } from \"@view/screens/emissions/EmissionsTitle\";\nimport { useFootprints } from \"@view/view-models/useFootprints\";\n\nexport const Emissions = () => {\n  const { footprints, totalAnnualFootprint } = useFootprints();\n\n  return (\n    <ScrollView\n      contentContainerStyle={{ justifyContent: \"center\", alignItems: \"center\" }}\n    >\n      <View>\n        <EmissionsTitle />\n      </View>\n\n      <View style={{ width: 300 }}>\n        <EmissionsDistribution\n          footprints={footprints}\n          totalFootprint={totalAnnualFootprint}\n        />\n      </View>\n\n      {/* <View style={{ width: \"90%\" }}>\n        <EmissionsGoal />\n      </View> */}\n\n      <View style={{ width: \"90%\" }}>\n        <EmissionsDataTable footprints={footprints} />\n      </View>\n\n      <View style={{ width: \"90%\", marginTop: 20, marginBottom: 20 }}>\n        <EmissionsEstimationButton />\n      </View>\n    </ScrollView>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport { Text } from \"react-native-paper\";\n\nexport const Objectives = () => {\n  const { t } = useTranslation([\"common\"]);\n\n  return (\n    <Text style={{ textAlign: \"center\", marginTop: 10 }}>\n      {t(\"comingSoon\")}\n    </Text>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport { StyleSheet } from \"react-native\";\nimport { Avatar, Card } from \"react-native-paper\";\nimport { IconSource } from \"react-native-paper/lib/typescript/components/Icon\";\n\nimport { FootprintByCategory } from \"@view/view-models/Footprint\";\n\ntype Props = {\n  title: string;\n  footprintCategory: FootprintByCategory;\n  icon: IconSource;\n  onClick: () => void;\n};\n\nexport const ProfileCategoryCard = ({\n  title,\n  footprintCategory,\n  icon,\n  onClick,\n}: Props) => {\n  const { t } = useTranslation(\"common\");\n\n  const { image, footprint, color, part } = footprintCategory;\n\n  return (\n    <Card style={styles.card} onPress={onClick}>\n      <Card.Title\n        title={title}\n        subtitle={`${footprint} ${t(\"footprintKgPerYear\")}`}\n        left={(props: any) => (\n          <Avatar.Icon\n            {...props}\n            icon={icon}\n            style={{ backgroundColor: color }}\n          />\n        )}\n        right={(props: any) => (\n          <Avatar.Text\n            {...props}\n            label={`${part} %`}\n            color={color}\n            style={{\n              backgroundColor: null,\n              borderWidth: 2,\n              borderColor: color,\n              width: 40,\n              height: 40,\n            }}\n          />\n        )}\n        style={{ paddingRight: 16 }}\n      />\n      <Card.Cover\n        resizeMode=\"contain\"\n        source={{ uri: image }}\n        style={styles.image}\n      />\n    </Card>\n  );\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    width: \"100%\",\n  },\n  image: {\n    height: 150,\n  },\n});\n","import { useNavigation } from \"@react-navigation/native\";\nimport { useTranslation } from \"react-i18next\";\nimport { View, StyleSheet, ScrollView } from \"react-native\";\n\nimport { AppNavigationProp } from \"@common/AppNavigation\";\nimport { ProfileCategoryCard } from \"@view/screens/profile/ProfileCategoryCard\";\nimport { useProfile } from \"./useProfile\";\n\nexport const Profile = () => {\n  const { t } = useTranslation(\"common\");\n\n  const { navigate } = useNavigation<AppNavigationProp>();\n\n  const {\n    transportFootprint,\n    housingFootprint,\n    foodFootprint,\n    everydayThingsFootprint,\n    publicServicesFootprint,\n  } = useProfile();\n\n  return (\n    <ScrollView>\n      <View style={styles.container}>\n        <ProfileCategoryCard\n          title={t(\"transport\")}\n          icon={transportFootprint.materialIcon}\n          footprintCategory={transportFootprint}\n          onClick={() => navigate(\"TransportProfile\")}\n        />\n        <ProfileCategoryCard\n          title={t(\"housing\")}\n          icon={housingFootprint.materialIcon}\n          footprintCategory={housingFootprint}\n          onClick={() => navigate(\"HousingProfile\")}\n        />\n        <ProfileCategoryCard\n          title={t(\"food\")}\n          icon={foodFootprint.materialIcon}\n          footprintCategory={foodFootprint}\n          onClick={() => navigate(\"FoodProfile\")}\n        />\n        <ProfileCategoryCard\n          title={t(\"everydayThings\")}\n          icon={everydayThingsFootprint.materialIcon}\n          footprintCategory={everydayThingsFootprint}\n          onClick={() => navigate(\"EverydayThingsProfile\")}\n        />\n        <ProfileCategoryCard\n          title={t(\"publicServices\")}\n          icon={publicServicesFootprint.materialIcon}\n          footprintCategory={publicServicesFootprint}\n          onClick={() => navigate(\"Profile\")}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: 10,\n    gap: 10,\n  },\n});\n","import { FootprintCategories } from \"@domain/models/Categories\";\nimport { useFootprints } from \"@view/view-models/useFootprints\";\n\nexport const useProfile = () => {\n  const { footprints } = useFootprints();\n\n  return {\n    transportFootprint: footprints[FootprintCategories.TRANSPORT],\n    housingFootprint: footprints[FootprintCategories.HOUSING],\n    foodFootprint: footprints[FootprintCategories.FOOD],\n    everydayThingsFootprint: footprints[FootprintCategories.EVERYDAY_THINGS],\n    publicServicesFootprint: footprints[FootprintCategories.PUBLIC_SERVICES],\n  };\n};\n","export type MilkType = \"cow\" | \"soy\" | \"oat\";\n\nexport const MilkTypes: MilkType[] = [\"cow\", \"soy\", \"oat\"];\n","import { StyleSheet } from \"react-native\";\n\nexport const styles = StyleSheet.create({\n  listContentContainer: {\n    padding: 15,\n    paddingLeft: 15, // needed to force the left padding\n  },\n  rowContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    gap: 10,\n  },\n  columnContainer: {\n    flexDirection: \"column\",\n    gap: 10,\n  },\n  divider: {\n    marginTop: 10,\n    marginBottom: 10,\n  },\n});\n","import { PropsWithChildren } from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { styles } from \"./styles\";\n\nexport const ColumnContainer = ({\n  children,\n  style,\n}: PropsWithChildren & { style?: ViewStyle }) => {\n  const { columnContainer } = styles;\n  return <View style={{ ...columnContainer, ...style }}>{children}</View>;\n};\n","import { PropsWithChildren } from \"react\";\nimport { View } from \"react-native\";\n\nimport { styles } from \"./styles\";\n\nexport const ListContentContainer = ({ children }: PropsWithChildren) => {\n  const { listContentContainer } = styles;\n  return <View style={listContentContainer}>{children}</View>;\n};\n","import { Divider } from \"react-native-paper\";\n\nimport { styles } from \"./styles\";\n\nexport const ListItemDivider = () => {\n  const { divider } = styles;\n  return <Divider style={divider} />;\n};\n","import { PropsWithChildren } from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { styles } from \"./styles\";\n\nexport const RowContainer = ({\n  children,\n  style,\n}: PropsWithChildren & { style?: ViewStyle }) => {\n  const { rowContainer } = styles;\n  return <View style={{ ...rowContainer, ...style }}>{children}</View>;\n};\n","import { View } from \"react-native\";\nimport { Text } from \"react-native-paper\";\n\ntype Props = {\n  title: string;\n  subtitle?: string;\n};\n\nexport const ListTitle = ({ title, subtitle }: Props) => {\n  return (\n    <View style={{ flexDirection: \"column\" }}>\n      <Text variant={subtitle ? \"titleSmall\" : \"titleMedium\"}>{title}</Text>\n      {subtitle && <Text variant=\"bodySmall\">{subtitle}</Text>}\n    </View>\n  );\n};\n","import { PropsWithChildren } from \"react\";\nimport { List } from \"react-native-paper\";\nimport { IconSource } from \"react-native-paper/lib/typescript/components/Icon\";\nimport { ListTitle } from \"@view/screens/profile/components/ListTitle\";\n\ntype Props = {\n  title: string;\n  subtitle?: string;\n  icon: IconSource;\n};\n\nexport const ListAccordion = ({\n  title,\n  subtitle,\n  icon,\n  children,\n}: PropsWithChildren<Props>) => {\n  return (\n    <List.Accordion\n      title={<ListTitle title={title} subtitle={subtitle} />}\n      left={(props) => <List.Icon {...props} icon={icon} />}\n    >\n      {children}\n    </List.Accordion>\n  );\n};\n","import { TextInput, TextInputProps } from \"react-native-paper\";\n\ntype Props = TextInputProps & {\n  positive?: boolean;\n  min?: number;\n};\n\nexport const NumericInput = (props: Props) => {\n  const positive = props.positive ?? true;\n  const dense = props.dense ?? true;\n  const mode = props.mode ?? \"outlined\";\n  const min = props.min !== undefined ? props.min : positive ? 0 : undefined;\n\n  return (\n    <TextInput\n      {...props}\n      keyboardType=\"numeric\"\n      dense={dense}\n      mode={mode}\n      onChangeText={(text) => {\n        if (!props.onChangeText) return;\n        const isNumber = /^\\d*\\.?\\d*$/.test(text);\n        if (!isNumber) return;\n        if (positive && text.includes(\"-\")) return;\n        props.onChangeText(text);\n      }}\n      onBlur={(e) => {\n        if (props.onChangeText && e.target.value === \"\")\n          props.onChangeText(min !== undefined ? min.toString() : \"0\");\n        if (!props.onBlur) return;\n        props.onBlur(e);\n      }}\n    />\n  );\n};\n","export type StringifyProperties<T> = {\n  [K in keyof T]: string;\n};\n\nexport const convertStringToType = (\n  value: string,\n  targetType: unknown,\n): any => {\n  if (targetType === \"string\") {\n    return value;\n  } else if (targetType === \"number\") {\n    return Number(value);\n  } else if (targetType === \"boolean\") {\n    return value === \"true\";\n  } else if (targetType === \"object\") {\n    return JSON.parse(value);\n  }\n\n  throw new Error(\"Unsupported targetType\");\n};\n","import { DefaultValues, FieldValues, useForm } from \"react-hook-form\";\n\nimport { WithAnnualFootprint } from \"@domain/models/types\";\nimport { convertStringToType } from \"@srctypes/utils\";\n\nexport const useUpdateForm = <\n  T extends WithAnnualFootprint,\n  K extends FieldValues,\n>(\n  defaultValues: DefaultValues<K>,\n  storedData: T,\n  updateUsecase: (data: T) => void,\n) => {\n  const { getValues, ...rest } = useForm<K>({ defaultValues });\n\n  const handleUpdate = (field: any) => {\n    const stringValue = getValues(field);\n    const targetType = typeof storedData[field as keyof T];\n    if (targetType === \"undefined\") return;\n    const value = convertStringToType(stringValue, targetType);\n    const updatedData = { ...storedData, [field]: value };\n    updateUsecase(updatedData);\n  };\n\n  return { handleUpdate, getValues, ...rest };\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { SegmentedButtons, Text } from \"react-native-paper\";\n\nimport { MilkTypes } from \"@domain/models/food/types\";\nimport { ColumnContainer } from \"@view/screens/profile/components/ColumnContainer\";\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport { ListItemDivider } from \"@view/screens/profile/components/ListItemDivider\";\nimport { RowContainer } from \"@view/screens/profile/components/RowContainer\";\nimport { ListAccordion } from \"@view/screens/profile/components/ListAccordion\";\nimport { NumericInput } from \"@view/components/forms/NumericInput\";\nimport { FormValues, useDrinks } from \"./useDrinks\";\n\nexport const DrinksSection = () => {\n  const { t } = useTranslation([\"food\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, annualFootprint, disableMilkSelection } =\n    useDrinks();\n\n  return (\n    <ListAccordion\n      title={t(\"emissions:food.drinks\")}\n      subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n      icon=\"water\"\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ textAlign: \"center\" }}>\n            {t(\"drinks.hotDrinksPerWeek\")}\n          </Text>\n        </RowContainer>\n        <RowContainer style={{ marginTop: 10 }}>\n          <Text variant=\"labelLarge\" style={{ flex: 3 }}>\n            {t(\"drinks.coffeePerWeek\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"coffeePerWeek\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"coffeePerWeek\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n        <RowContainer style={{ marginTop: 10 }}>\n          <Text variant=\"labelLarge\" style={{ flex: 3 }}>\n            {t(\"drinks.teaPerWeek\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"teaPerWeek\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"teaPerWeek\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n        <RowContainer style={{ marginTop: 10 }}>\n          <Text variant=\"labelLarge\" style={{ flex: 3 }}>\n            {t(\"drinks.chocolatePerWeek\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"chocolatePerWeek\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"chocolatePerWeek\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n        <ColumnContainer style={{ marginTop: 10 }}>\n          <Text variant=\"labelLarge\">{t(\"milk.type\")}</Text>\n          <Controller<FormValues>\n            name=\"milkType\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"milkType\");\n                }}\n                buttons={MilkTypes.map((type) => ({\n                  value: type,\n                  label: t(`milk.types.${type}`),\n                  disabled: disableMilkSelection,\n                }))}\n              />\n            )}\n          />\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\">{t(\"drinks.bottledWater\")}</Text>\n          <Controller<FormValues>\n            name=\"bottledWater\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"bottledWater\");\n                }}\n                buttons={[\n                  { value: \"true\", label: t(\"common:yes\") },\n                  { value: \"false\", label: t(\"common:no\") },\n                ]}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 3 }}>\n            {t(\"drinks.sodaLitersPerWeek\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"sodaLitersPerWeek\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"sodaLitersPerWeek\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 3 }}>\n            {t(\"drinks.alcoholLitersPerWeek\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"alcoholLitersPerWeek\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"alcoholLitersPerWeek\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </ListAccordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { Drinks } from \"@domain/models/food/drinks/Drinks\";\nimport { StringifyProperties } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\n\nexport type FormValues = Omit<\n  StringifyProperties<\n    Drinks & {\n      chocolatePerWeek: number;\n      coffeePerWeek: number;\n      teaPerWeek: number;\n    }\n  >,\n  \"annualFootprint\"\n>;\n\nexport const useDrinks = () => {\n  const storedDrinks = useAppStore((store) => store.food.drinks);\n  const annualFootprint = new Drinks(storedDrinks).annualFootprint;\n\n  const { useUpdateFood } = useContext(UsecasesContext);\n  const { updateDrinks } = useUpdateFood();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    hotDrinksPerWeek: JSON.stringify(storedDrinks.hotDrinksPerWeek),\n    chocolatePerWeek: storedDrinks.hotDrinksPerWeek.chocolate.toString(),\n    coffeePerWeek: storedDrinks.hotDrinksPerWeek.coffee.toString(),\n    teaPerWeek: storedDrinks.hotDrinksPerWeek.tea.toString(),\n    milkType: storedDrinks.milkType,\n    alcoholLitersPerWeek: storedDrinks.alcoholLitersPerWeek.toString(),\n    sodaLitersPerWeek: storedDrinks.sodaLitersPerWeek.toString(),\n    bottledWater: storedDrinks.bottledWater.toString(),\n  });\n\n  const { handleUpdate, control, watch, setValue } = useUpdateForm<\n    Drinks,\n    FormValues\n  >(getDefaultValues(), storedDrinks, updateDrinks);\n\n  const chocolatePerWeek = watch(\"chocolatePerWeek\");\n  const coffeePerWeek = watch(\"coffeePerWeek\");\n  const teaPerWeek = watch(\"teaPerWeek\");\n\n  useEffect(() => {\n    setValue(\n      \"hotDrinksPerWeek\",\n      JSON.stringify({\n        chocolate: Number(chocolatePerWeek) || 0,\n        coffee: Number(coffeePerWeek) || 0,\n        tea: Number(teaPerWeek) || 0,\n      }),\n    );\n    handleUpdate(\"hotDrinksPerWeek\");\n  }, [chocolatePerWeek, coffeePerWeek, teaPerWeek]);\n\n  const disableMilkSelection = chocolatePerWeek === \"0\" || !chocolatePerWeek;\n\n  return { annualFootprint, control, handleUpdate, disableMilkSelection };\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { View } from \"react-native\";\nimport { SegmentedButtons, Text } from \"react-native-paper\";\n\nimport {\n  BreakfastTypes,\n  Diets,\n  Frequencies,\n} from \"@domain/models/food/meals/types\";\nimport { MilkTypes } from \"@domain/models/food/types\";\nimport { ColumnContainer } from \"@view/screens/profile/components/ColumnContainer\";\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport { ListItemDivider } from \"@view/screens/profile/components/ListItemDivider\";\nimport { ListAccordion } from \"@view/screens/profile/components/ListAccordion\";\nimport { FormValues, useMeals } from \"./useMeals\";\n\nexport const MealsSection = () => {\n  const { t } = useTranslation([\"food\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, milkAndCerealsBreakfast, annualFootprint } =\n    useMeals();\n\n  return (\n    <ListAccordion\n      title={t(\"emissions:food.meals\")}\n      subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n      icon=\"food\"\n    >\n      <ListContentContainer>\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"breakfast.type\")}</Text>\n          <View>\n            <Controller<FormValues>\n              name=\"breakfast\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"breakfast\");\n                  }}\n                  buttons={BreakfastTypes.slice(0, 3).map((type) => ({\n                    value: type,\n                    label: t(`breakfast.types.${type}`),\n                  }))}\n                />\n              )}\n            />\n            <Controller<FormValues>\n              name=\"breakfast\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"breakfast\");\n                  }}\n                  buttons={BreakfastTypes.slice(3, 5).map((type) => ({\n                    value: type,\n                    label: t(`breakfast.types.${type}`),\n                  }))}\n                />\n              )}\n            />\n          </View>\n          <Text variant=\"labelLarge\">{t(\"milk.type\")}</Text>\n          <Controller<FormValues>\n            name=\"milkType\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"milkType\");\n                }}\n                buttons={MilkTypes.map((type) => ({\n                  value: type,\n                  label: t(`milk.types.${type}`),\n                  disabled: !milkAndCerealsBreakfast,\n                }))}\n              />\n            )}\n          />\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"diet.type\")}</Text>\n          <View>\n            <Controller<FormValues>\n              name=\"diet\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"diet\");\n                  }}\n                  buttons={Diets.slice(0, 3).map((type) => ({\n                    value: type,\n                    label: t(`diet.types.${type}`),\n                  }))}\n                />\n              )}\n            />\n            <Controller<FormValues>\n              name=\"diet\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"diet\");\n                  }}\n                  buttons={Diets.slice(3, 5).map((type) => ({\n                    value: type,\n                    label: t(`diet.types.${type}`),\n                  }))}\n                />\n              )}\n            />\n          </View>\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"localProducts\")}</Text>\n          <View>\n            <Controller<FormValues>\n              name=\"localProducts\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"localProducts\");\n                  }}\n                  buttons={Frequencies.slice(0, 2).map((frequency) => ({\n                    value: frequency,\n                    label: t(`frequencies.${frequency}`),\n                  }))}\n                />\n              )}\n            />\n            <Controller<FormValues>\n              name=\"localProducts\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"localProducts\");\n                  }}\n                  buttons={Frequencies.slice(2, 4).map((frequency) => ({\n                    value: frequency,\n                    label: t(`frequencies.${frequency}`),\n                  }))}\n                />\n              )}\n            />\n          </View>\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"seasonalProducts\")}</Text>\n          <View>\n            <Controller<FormValues>\n              name=\"seasonalProducts\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"seasonalProducts\");\n                  }}\n                  buttons={Frequencies.slice(0, 2).map((frequency) => ({\n                    value: frequency,\n                    label: t(`frequencies.${frequency}`),\n                  }))}\n                />\n              )}\n            />\n            <Controller<FormValues>\n              name=\"seasonalProducts\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"seasonalProducts\");\n                  }}\n                  buttons={Frequencies.slice(2, 4).map((frequency) => ({\n                    value: frequency,\n                    label: t(`frequencies.${frequency}`),\n                  }))}\n                />\n              )}\n            />\n          </View>\n        </ColumnContainer>\n      </ListContentContainer>\n    </ListAccordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { Meals } from \"@domain/models/food/meals/Meals\";\nimport { BreakfastType } from \"@domain/models/food/meals/types\";\nimport { StringifyProperties } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\n\nexport type FormValues = Omit<StringifyProperties<Meals>, \"annualFootprint\">;\n\nexport const useMeals = () => {\n  const storedMeals = useAppStore((store) => store.food.meals);\n  const storedBreakfast = storedMeals.breakfast;\n  const annualFootprint = new Meals(storedMeals).annualFootprint;\n\n  const { useUpdateFood } = useContext(UsecasesContext);\n  const { updateMeals } = useUpdateFood();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    breakfast: storedMeals.breakfast,\n    milkType: storedMeals.milkType,\n    diet: storedMeals.diet,\n    localProducts: storedMeals.localProducts,\n    seasonalProducts: storedMeals.seasonalProducts,\n  });\n\n  const { handleUpdate, control, watch, setValue } = useUpdateForm<\n    Meals,\n    FormValues\n  >(getDefaultValues(), storedMeals, updateMeals);\n\n  useEffect(() => {\n    if (storedBreakfast !== \"milk & cereals\") {\n      setValue(\"milkType\", \"cow\");\n      handleUpdate(\"milkType\");\n    }\n  }, [storedBreakfast]);\n\n  const milkAndCerealsBreakfast =\n    (watch(\"breakfast\") as BreakfastType) === \"milk & cereals\";\n\n  return { annualFootprint, milkAndCerealsBreakfast, control, handleUpdate };\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { View } from \"react-native\";\nimport { Checkbox, RadioButton, Text } from \"react-native-paper\";\n\nimport { WasteQuantity } from \"@domain/models/food/waste/Waste\";\nimport { ColumnContainer } from \"@view/screens/profile/components/ColumnContainer\";\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport { ListItemDivider } from \"@view/screens/profile/components/ListItemDivider\";\nimport { ListAccordion } from \"@view/screens/profile/components/ListAccordion\";\nimport { FormValues, useWaste } from \"./useWaste\";\n\nexport const WasteSection = () => {\n  const { t } = useTranslation([\"food\", \"emissions\", \"common\"]);\n  const {\n    control,\n    handleUpdate,\n    annualFootprint,\n    setValue,\n    disableWasteBonuses,\n  } = useWaste();\n\n  return (\n    <ListAccordion\n      title={t(\"emissions:food.waste\")}\n      subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n      icon=\"recycle\"\n    >\n      <ListContentContainer>\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"waste.quantity\")}</Text>\n          <Controller<FormValues>\n            name=\"quantity\"\n            control={control}\n            render={({ field: { value } }) => (\n              <RadioButton.Group\n                value={value}\n                onValueChange={(newValue) => {\n                  setValue(\"quantity\", newValue);\n                  handleUpdate(\"quantity\");\n                }}\n              >\n                <View\n                  style={{ flexDirection: \"row\", alignItems: \"center\", gap: 5 }}\n                >\n                  <RadioButton value={\"base\" as WasteQuantity} />\n                  <Text>{t(\"waste.quantities.base\")}</Text>\n                </View>\n                <View\n                  style={{ flexDirection: \"row\", alignItems: \"center\", gap: 5 }}\n                >\n                  <RadioButton value={\"reduction\" as WasteQuantity} />\n                  <Text>{t(\"waste.quantities.reduction\")}</Text>\n                </View>\n                <View\n                  style={{ flexDirection: \"row\", alignItems: \"center\", gap: 5 }}\n                >\n                  <RadioButton value={\"zero\" as WasteQuantity} />\n                  <Text>{t(\"waste.quantities.zero\")}</Text>\n                </View>\n              </RadioButton.Group>\n            )}\n          />\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer style={{ gap: 0 }}>\n          <Text variant=\"labelLarge\" style={{ marginBottom: 5 }}>\n            {t(\"waste.bonus\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"wasteComposting\"\n            control={control}\n            render={({ field: { value } }) => (\n              <Checkbox.Item\n                style={{ height: 40 }}\n                disabled={disableWasteBonuses}\n                labelVariant=\"labelLarge\"\n                label={t(\"waste.bonuses.wasteComposting\")}\n                status={value === \"true\" ? \"checked\" : \"unchecked\"}\n                onPress={() => {\n                  setValue(\n                    \"wasteComposting\",\n                    value === \"true\" ? \"false\" : \"true\",\n                  );\n                  handleUpdate(\"wasteComposting\");\n                }}\n              />\n            )}\n          />\n          <Controller<FormValues>\n            name=\"noFoodWaste\"\n            control={control}\n            render={({ field: { value } }) => (\n              <Checkbox.Item\n                style={{ height: 40 }}\n                disabled={disableWasteBonuses}\n                labelVariant=\"labelLarge\"\n                label={t(\"waste.bonuses.noFoodWaste\")}\n                status={value === \"true\" ? \"checked\" : \"unchecked\"}\n                onPress={() => {\n                  setValue(\"noFoodWaste\", value === \"true\" ? \"false\" : \"true\");\n                  handleUpdate(\"noFoodWaste\");\n                }}\n              />\n            )}\n          />\n          <Controller<FormValues>\n            name=\"stopAdvertisingSticker\"\n            control={control}\n            render={({ field: { value } }) => (\n              <Checkbox.Item\n                style={{ height: 40 }}\n                disabled={disableWasteBonuses}\n                labelVariant=\"labelLarge\"\n                label={t(\"waste.bonuses.stopAdvertisingSticker\")}\n                status={value === \"true\" ? \"checked\" : \"unchecked\"}\n                onPress={() => {\n                  setValue(\n                    \"stopAdvertisingSticker\",\n                    value === \"true\" ? \"false\" : \"true\",\n                  );\n                  handleUpdate(\"stopAdvertisingSticker\");\n                }}\n              />\n            )}\n          />\n        </ColumnContainer>\n      </ListContentContainer>\n    </ListAccordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { Waste } from \"@domain/models/food/waste/Waste\";\nimport { StringifyProperties, convertStringToType } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\n\nexport type FormValues = Omit<\n  StringifyProperties<\n    Waste & {\n      noFoodWaste: boolean;\n      stopAdvertisingSticker: boolean;\n      wasteComposting: boolean;\n    }\n  >,\n  \"annualFootprint\"\n>;\n\nexport const useWaste = () => {\n  const storedWaste = useAppStore((store) => store.food.waste);\n  const annualFootprint = new Waste(storedWaste).annualFootprint;\n\n  const { useUpdateFood } = useContext(UsecasesContext);\n  const { updateWaste } = useUpdateFood();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    quantity: storedWaste.quantity,\n    wasteBonuses: JSON.stringify(storedWaste.wasteBonuses),\n    noFoodWaste: storedWaste.wasteBonuses.noFoodWaste.toString(),\n    wasteComposting: storedWaste.wasteBonuses.wasteComposting.toString(),\n    stopAdvertisingSticker:\n      storedWaste.wasteBonuses.stopAdvertisingSticker.toString(),\n  });\n\n  const { handleUpdate, control, watch, setValue } = useUpdateForm<\n    Waste,\n    FormValues\n  >(getDefaultValues(), storedWaste, updateWaste);\n\n  const noFoodWaste = watch(\"noFoodWaste\");\n  const stopAdvertisingSticker = watch(\"stopAdvertisingSticker\");\n  const wasteComposting = watch(\"wasteComposting\");\n\n  useEffect(() => {\n    const newWasteBonuses = JSON.stringify({\n      noFoodWaste: convertStringToType(noFoodWaste, \"boolean\"),\n      wasteComposting: convertStringToType(wasteComposting, \"boolean\"),\n      stopAdvertisingSticker: convertStringToType(\n        stopAdvertisingSticker,\n        \"boolean\",\n      ),\n    });\n    setValue(\"wasteBonuses\", newWasteBonuses);\n    handleUpdate(\"wasteBonuses\");\n  }, [noFoodWaste, stopAdvertisingSticker, wasteComposting]);\n\n  const disableWasteBonuses = storedWaste.quantity !== \"reduction\";\n\n  return {\n    annualFootprint,\n    control,\n    handleUpdate,\n    setValue,\n    disableWasteBonuses,\n  };\n};\n","import { ScrollView } from \"react-native\";\nimport { Divider, List } from \"react-native-paper\";\n\nimport { DrinksSection } from \"@view/screens/profile/food/drinks/DrinksSection\";\nimport { MealsSection } from \"@view/screens/profile/food/meals/MealsSection\";\nimport { WasteSection } from \"@view/screens/profile/food/waste/WasteSection\";\n\nexport const FoodProfile = () => {\n  return (\n    <ScrollView>\n      <List.Section>\n        <MealsSection />\n        <Divider />\n        <DrinksSection />\n        <Divider />\n        <WasteSection />\n      </List.Section>\n    </ScrollView>\n  );\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { SegmentedButtons, Text, TextInput } from \"react-native-paper\";\n\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport { ListItemDivider } from \"@view/screens/profile/components/ListItemDivider\";\nimport { RowContainer } from \"@view/screens/profile/components/RowContainer\";\nimport { NumericInput } from \"@view/components/forms/NumericInput\";\nimport { ListAccordion } from \"@view/screens/profile/components/ListAccordion\";\nimport { FormValues, useBoat } from \"./useBoat\";\n\nexport const BoatSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, usage, annualFootprint } = useBoat();\n\n  return (\n    <ListAccordion\n      title={t(\"emissions:transport.boat\")}\n      subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n      icon=\"ferry\"\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\">{t(\"boat.usage\")}</Text>\n          <Controller<FormValues>\n            name=\"usage\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"usage\");\n                }}\n                buttons={[\n                  { value: \"true\", label: t(\"common:yes\") },\n                  { value: \"false\", label: t(\"common:no\") },\n                ]}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"boat.hoursPerYear\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerYear\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerYear\")}\n                onChangeText={onChange}\n                value={value}\n                disabled={!usage}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </ListAccordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { Boat } from \"@domain/models/transport/boat/Boat\";\nimport { StringifyProperties } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\n\nexport type FormValues = Omit<StringifyProperties<Boat>, \"annualFootprint\">;\n\nexport const useBoat = () => {\n  const storedBoat = useAppStore((store) => store.transport.boat);\n  const storedBoatUsage = storedBoat.usage;\n  const annualFootprint = new Boat(storedBoat).annualFootprint;\n\n  const { useUpdateTransport } = useContext(UsecasesContext);\n  const { updateBoat } = useUpdateTransport();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    usage: storedBoat.usage.toString(),\n    hoursPerYear: storedBoat.hoursPerYear.toString(),\n  });\n\n  const { handleUpdate, control, watch, reset } = useUpdateForm<\n    Boat,\n    FormValues\n  >(getDefaultValues(), storedBoat, updateBoat);\n\n  useEffect(() => {\n    if (!storedBoatUsage) reset(getDefaultValues());\n  }, [storedBoatUsage]);\n\n  const usage = watch(\"usage\") === \"true\";\n\n  return { control, handleUpdate, usage, annualFootprint };\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { View } from \"react-native\";\nimport {\n  TextInput,\n  Text,\n  SegmentedButtons,\n  HelperText,\n  Icon,\n} from \"react-native-paper\";\n\nimport {\n  carEngines,\n  carSizes,\n  fuelTypes,\n} from \"@domain/models/transport/car/Car\";\nimport { ColumnContainer } from \"@view/screens/profile/components/ColumnContainer\";\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport { ListItemDivider } from \"@view/screens/profile/components/ListItemDivider\";\nimport { RowContainer } from \"@view/screens/profile/components/RowContainer\";\nimport { ListAccordion } from \"@view/screens/profile/components/ListAccordion\";\nimport { NumericInput } from \"@view/components/forms/NumericInput\";\nimport { FormValues, useCar } from \"./useCar\";\n\nexport const CarSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, regularUser, annualFootprint } = useCar();\n\n  return (\n    <ListAccordion\n      title={t(\"emissions:transport.car\")}\n      subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n      icon=\"car\"\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 1.5 }}>\n            {t(\"car.kmPerYear\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"kmPerYear\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                right={<TextInput.Affix text=\"km\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"kmPerYear\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <RowContainer>\n            <Text variant=\"labelLarge\">{t(\"car.regularUser\")}</Text>\n            <Controller<FormValues>\n              name=\"regularUser\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"regularUser\");\n                  }}\n                  buttons={[\n                    { value: \"true\", label: t(\"common:yes\") },\n                    { value: \"false\", label: t(\"common:no\") },\n                  ]}\n                />\n              )}\n            />\n          </RowContainer>\n          {!regularUser && (\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <Icon source=\"information\" size={15} />\n              <HelperText\n                type=\"info\"\n                style={{ alignSelf: \"flex-start\", marginTop: 2 }}\n              >\n                {t(\"car.nonRegularUserHelperText\")}\n              </HelperText>\n            </View>\n          )}\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"car.size\")}</Text>\n          <View>\n            <Controller<FormValues>\n              name=\"size\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"size\");\n                  }}\n                  buttons={carSizes.slice(0, 3).map((size) => ({\n                    value: size,\n                    label: t(`car.sizes.${size}`),\n                    disabled: !regularUser,\n                  }))}\n                />\n              )}\n            />\n            <Controller<FormValues>\n              name=\"size\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"size\");\n                  }}\n                  buttons={carSizes.slice(3, 5).map((size) => ({\n                    value: size,\n                    label: t(`car.sizes.${size}`),\n                    disabled: !regularUser,\n                  }))}\n                />\n              )}\n            />\n          </View>\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"car.engine\")}</Text>\n          <Controller<FormValues>\n            name=\"engine\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"engine\");\n                }}\n                buttons={carEngines.map((engine) => ({\n                  value: engine,\n                  label: t(`car.engines.${engine}`),\n                  disabled: !regularUser,\n                }))}\n              />\n            )}\n          />\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"car.fuelType\")}</Text>\n          <Controller<FormValues>\n            name=\"fuelType\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"fuelType\");\n                }}\n                buttons={fuelTypes.map((fuelType) => ({\n                  value: fuelType,\n                  label: t(`car.fuelTypes.${fuelType}`),\n                  disabled: !regularUser,\n                }))}\n              />\n            )}\n          />\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 3 }}>\n            {t(\"car.averageFuelConsumption\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"averageFuelConsumption\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                disabled={!regularUser}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"averageFuelConsumption\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 3 }}>\n            {t(\"car.age\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"age\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"age\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 3 }}>\n            {t(\"car.averagePassengers\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"averagePassengers\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"averagePassengers\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </ListAccordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { Car } from \"@domain/models/transport/car/Car\";\nimport { StringifyProperties } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\n\nexport type FormValues = Omit<StringifyProperties<Car>, \"annualFootprint\">;\n\nexport const useCar = () => {\n  const storedCar = useAppStore((store) => store.transport.car);\n  const storedRegularUser = storedCar.regularUser;\n  const annualFootprint = new Car(storedCar).annualFootprint;\n\n  const { useUpdateTransport } = useContext(UsecasesContext);\n  const { updateCar } = useUpdateTransport();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    kmPerYear: storedCar.kmPerYear.toString(),\n    regularUser: storedCar.regularUser.toString(),\n    size: storedCar.size.toString(),\n    engine: storedCar.engine.toString(),\n    fuelType: storedCar.fuelType.toString(),\n    age: storedCar.age.toString(),\n    averagePassengers: storedCar.averagePassengers.toString(),\n    averageFuelConsumption: storedCar.averageFuelConsumption.toString(),\n  });\n\n  const { handleUpdate, control, watch, reset } = useUpdateForm<\n    Car,\n    FormValues\n  >(getDefaultValues(), storedCar, updateCar);\n\n  useEffect(() => {\n    if (!storedRegularUser) reset(getDefaultValues());\n  }, [storedRegularUser]);\n\n  const regularUser = watch(\"regularUser\") === \"true\";\n\n  return { control, handleUpdate, regularUser, annualFootprint };\n};\n","import { useTranslation } from \"react-i18next\";\nimport { Text } from \"react-native-paper\";\n\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport { ListAccordion } from \"@view/screens/profile/components/ListAccordion\";\n\nexport const OtherSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n\n  return (\n    <ListAccordion title={t(\"emissions:transport.other\")} icon=\"bike\">\n      <ListContentContainer>\n        <Text>{t(\"common:comingSoon\")}</Text>\n      </ListContentContainer>\n    </ListAccordion>\n  );\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { SegmentedButtons, Text, TextInput } from \"react-native-paper\";\n\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport { ListItemDivider } from \"@view/screens/profile/components/ListItemDivider\";\nimport { RowContainer } from \"@view/screens/profile/components/RowContainer\";\nimport { NumericInput } from \"@view/components/forms/NumericInput\";\nimport { ListAccordion } from \"@view/screens/profile/components/ListAccordion\";\nimport { FormValues, usePlane } from \"./usePlane\";\n\nexport const PlaneSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, usage, annualFootprint } = usePlane();\n\n  return (\n    <ListAccordion\n      title={t(\"emissions:transport.plane\")}\n      subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n      icon=\"airplane\"\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\">{t(\"plane.usage\")}</Text>\n          <Controller<FormValues>\n            name=\"usage\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"usage\");\n                }}\n                buttons={[\n                  { value: \"true\", label: t(\"common:yes\") },\n                  { value: \"false\", label: t(\"common:no\") },\n                ]}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"plane.hoursPerYearInShortHaul\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerYearInShortHaul\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerYearInShortHaul\")}\n                onChangeText={onChange}\n                value={value}\n                disabled={!usage}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"plane.hoursPerYearInMediumHaul\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerYearInMediumHaul\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerYearInMediumHaul\")}\n                onChangeText={onChange}\n                value={value}\n                disabled={!usage}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"plane.hoursPerYearInLongHaul\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerYearInLongHaul\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerYearInLongHaul\")}\n                onChangeText={onChange}\n                value={value}\n                disabled={!usage}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </ListAccordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { Plane } from \"@domain/models/transport/plane/Plane\";\nimport { StringifyProperties } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\n\nexport type FormValues = Omit<StringifyProperties<Plane>, \"annualFootprint\">;\n\nexport const usePlane = () => {\n  const storedPlane = useAppStore((store) => store.transport.plane);\n  const storedPlaneUsage = storedPlane.usage;\n  const annualFootprint = new Plane(storedPlane).annualFootprint;\n\n  const { useUpdateTransport } = useContext(UsecasesContext);\n  const { updatePlane } = useUpdateTransport();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    usage: storedPlane.usage.toString(),\n    hoursPerYearInShortHaul: storedPlane.hoursPerYearInShortHaul.toString(),\n    hoursPerYearInMediumHaul: storedPlane.hoursPerYearInMediumHaul.toString(),\n    hoursPerYearInLongHaul: storedPlane.hoursPerYearInLongHaul.toString(),\n  });\n\n  const { handleUpdate, control, watch, reset } = useUpdateForm<\n    Plane,\n    FormValues\n  >(getDefaultValues(), storedPlane, updatePlane);\n\n  useEffect(() => {\n    if (!storedPlaneUsage) reset(getDefaultValues());\n  }, [storedPlaneUsage]);\n\n  const usage = watch(\"usage\") === \"true\";\n\n  return { control, handleUpdate, usage, annualFootprint };\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Text, TextInput } from \"react-native-paper\";\n\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport { ListItemDivider } from \"@view/screens/profile/components/ListItemDivider\";\nimport { RowContainer } from \"@view/screens/profile/components/RowContainer\";\nimport { NumericInput } from \"@view/components/forms/NumericInput\";\nimport { ListAccordion } from \"@view/screens/profile/components/ListAccordion\";\nimport { FormValues, usePublicTransport } from \"./usePublicTransport\";\n\nexport const PublicTransportSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, annualFootprint } = usePublicTransport();\n\n  return (\n    <ListAccordion\n      title={t(\"emissions:transport.public\")}\n      subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n      icon=\"train\"\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"public.hoursPerYearInTrain\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerYearInTrain\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerYearInTrain\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"public.hoursPerWeekInBus\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerWeekInBus\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerWeekInBus\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"public.hoursPerWeekInMetro\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerWeekInMetro\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerWeekInMetro\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </ListAccordion>\n  );\n};\n","import { useContext } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { PublicTransport } from \"@domain/models/transport/public-transport/PublicTransport\";\nimport { StringifyProperties } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\n\nexport type FormValues = Omit<\n  StringifyProperties<PublicTransport>,\n  \"annualFootprint\"\n>;\n\nexport const usePublicTransport = () => {\n  const storedPublicTransport = useAppStore(\n    (store) => store.transport.publicTransport,\n  );\n  const annualFootprint = new PublicTransport(storedPublicTransport)\n    .annualFootprint;\n\n  const { useUpdateTransport } = useContext(UsecasesContext);\n  const { updatePublicTransport } = useUpdateTransport();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    hoursPerYearInTrain: storedPublicTransport.hoursPerYearInTrain.toString(),\n    hoursPerWeekInBus: storedPublicTransport.hoursPerWeekInBus.toString(),\n    hoursPerWeekInMetro: storedPublicTransport.hoursPerWeekInMetro.toString(),\n  });\n\n  const { handleUpdate, control } = useUpdateForm<PublicTransport, FormValues>(\n    getDefaultValues(),\n    storedPublicTransport,\n    updatePublicTransport,\n  );\n\n  return { control, handleUpdate, annualFootprint };\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { View } from \"react-native\";\nimport { SegmentedButtons, Text, TextInput } from \"react-native-paper\";\n\nimport { TwoWheelerTypes } from \"@domain/models/transport/two-wheeler/TwoWheeler\";\nimport { ColumnContainer } from \"@view/screens/profile/components/ColumnContainer\";\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport { ListItemDivider } from \"@view/screens/profile/components/ListItemDivider\";\nimport { RowContainer } from \"@view/screens/profile/components/RowContainer\";\nimport { ListAccordion } from \"@view/screens/profile/components/ListAccordion\";\nimport { NumericInput } from \"@view/components/forms/NumericInput\";\nimport { FormValues, useTwhoWheeler } from \"./useTwoWheeler\";\n\nexport const TwoWheelerSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, usage, annualFootprint } = useTwhoWheeler();\n\n  return (\n    <ListAccordion\n      title={t(\"emissions:transport.twoWheeler\")}\n      subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n      icon=\"motorbike\"\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\">{t(\"twoWheeler.usage\")}</Text>\n          <Controller<FormValues>\n            name=\"usage\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"usage\");\n                }}\n                buttons={[\n                  { value: \"true\", label: t(\"common:yes\") },\n                  { value: \"false\", label: t(\"common:no\") },\n                ]}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"twoWheeler.type\")}</Text>\n          <View>\n            <Controller<FormValues>\n              name=\"type\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"type\");\n                  }}\n                  buttons={TwoWheelerTypes.slice(0, 2).map((type) => ({\n                    value: type,\n                    label: t(`twoWheeler.types.${type}`),\n                    disabled: !usage,\n                  }))}\n                />\n              )}\n            />\n            <Controller<FormValues>\n              name=\"type\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"type\");\n                  }}\n                  buttons={TwoWheelerTypes.slice(2, 4).map((type) => ({\n                    value: type,\n                    label: t(`twoWheeler.types.${type}`),\n                    disabled: !usage,\n                  }))}\n                />\n              )}\n            />\n          </View>\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 1.5 }}>\n            {t(\"car.kmPerYear\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"kmPerYear\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                right={<TextInput.Affix text=\"km\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"kmPerYear\")}\n                onChangeText={onChange}\n                value={value}\n                disabled={!usage}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </ListAccordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { TwoWheeler } from \"@domain/models/transport/two-wheeler/TwoWheeler\";\nimport { StringifyProperties } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\n\nexport type FormValues = Omit<\n  StringifyProperties<TwoWheeler>,\n  \"annualFootprint\"\n>;\n\nexport const useTwhoWheeler = () => {\n  const storedTwoWheeler = useAppStore((store) => store.transport.twoWheeler);\n  const storedTwoWheelerUsage = storedTwoWheeler.usage;\n  const annualFootprint = new TwoWheeler(storedTwoWheeler).annualFootprint;\n\n  const { useUpdateTransport } = useContext(UsecasesContext);\n  const { updateTwoWheeler } = useUpdateTransport();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    kmPerYear: storedTwoWheeler.kmPerYear.toString(),\n    type: storedTwoWheeler.type.toString(),\n    usage: storedTwoWheeler.usage.toString(),\n  });\n\n  const { handleUpdate, control, watch, reset } = useUpdateForm<\n    TwoWheeler,\n    FormValues\n  >(getDefaultValues(), storedTwoWheeler, updateTwoWheeler);\n\n  useEffect(() => {\n    if (!storedTwoWheelerUsage) reset(getDefaultValues());\n  }, [storedTwoWheelerUsage]);\n\n  const usage = watch(\"usage\") === \"true\";\n\n  return { control, handleUpdate, usage, annualFootprint };\n};\n","import { ScrollView } from \"react-native\";\nimport { Divider, List } from \"react-native-paper\";\n\nimport { BoatSection } from \"@view/screens/profile/transport/boat/BoatSection\";\nimport { CarSection } from \"@view/screens/profile/transport/car/CarSection\";\nimport { OtherSection } from \"@view/screens/profile/transport/other/OtherSection\";\nimport { PlaneSection } from \"@view/screens/profile/transport/plane/PlaneSection\";\nimport { PublicTransportSection } from \"@view/screens/profile/transport/public-transport/PublicTransportSection\";\nimport { TwoWheelerSection } from \"@view/screens/profile/transport/two-wheeler/TwoWheelerSection\";\n\nexport const TransportProfile = () => {\n  return (\n    <ScrollView>\n      <List.Section>\n        <CarSection />\n        <Divider />\n        <TwoWheelerSection />\n        <Divider />\n        <PlaneSection />\n        <Divider />\n        <BoatSection />\n        <Divider />\n        <PublicTransportSection />\n        <Divider />\n        <OtherSection />\n      </List.Section>\n    </ScrollView>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport { SegmentedButtons, Text, TextInput } from \"react-native-paper\";\nimport { Controller } from \"react-hook-form\";\n\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport { ListAccordion } from \"@view/screens/profile/components/ListAccordion\";\nimport { RowContainer } from \"@view/screens/profile/components/RowContainer\";\nimport { ListItemDivider } from \"@view/screens/profile/components/ListItemDivider\";\nimport { NumericInput } from \"@view/components/forms/NumericInput\";\nimport { FormValues, useHome } from \"./useHome\";\n\nexport const HomeSection = () => {\n  const { t } = useTranslation([\"housing\", \"emissions\", \"common\"]);\n\n  const { annualFootprint, control, handleUpdate } = useHome();\n\n  return (\n    <ListAccordion\n      title={t(\"emissions:housing.home\")}\n      subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n      icon=\"home\"\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 3 }}>\n            {t(\"housing:home.occupants\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"occupants\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"occupants\")}\n                onChangeText={onChange}\n                value={value}\n                min={1}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 3 }}>\n            {t(\"housing:home.livingSpace\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"livingSpace\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"livingSpace\")}\n                onChangeText={onChange}\n                value={value}\n                min={10}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"housing:home.ageInYears\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"ageInYears\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"ageInYears\")}\n                onChangeText={onChange}\n                value={value}\n                right={<TextInput.Affix text=\"ans\" />}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\">{t(\"housing:home.isAnApartment\")}</Text>\n          <Controller<FormValues>\n            name=\"isAnApartment\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"isAnApartment\");\n                }}\n                buttons={[\n                  { value: \"true\", label: t(\"common:yes\") },\n                  { value: \"false\", label: t(\"common:no\") },\n                ]}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\">{t(\"housing:home.isEcoBuilt\")}</Text>\n          <Controller<FormValues>\n            name=\"isEcoBuilt\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"isEcoBuilt\");\n                }}\n                buttons={[\n                  { value: \"true\", label: t(\"common:yes\") },\n                  { value: \"false\", label: t(\"common:no\") },\n                ]}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </ListAccordion>\n  );\n};\n","import { useContext } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { Home } from \"@domain/models/housing/home/Home\";\nimport { StringifyProperties } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\n\nexport type FormValues = Omit<StringifyProperties<Home>, \"annualFootprint\">;\n\nexport const useHome = () => {\n  const storedHome = useAppStore((store) => store.housing.home);\n  const annualFootprint = new Home(storedHome).annualFootprint;\n\n  const { useUpdateHousing } = useContext(UsecasesContext);\n  const { updateHome } = useUpdateHousing();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    occupants: storedHome.occupants.toString(),\n    livingSpace: storedHome.livingSpace.toString(),\n    ageInYears: storedHome.ageInYears.toString(),\n    isAnApartment: storedHome.isAnApartment.toString(),\n    isEcoBuilt: storedHome.isEcoBuilt.toString(),\n  });\n\n  const { handleUpdate, control } = useUpdateForm<Home, FormValues>(\n    getDefaultValues(),\n    storedHome,\n    updateHome,\n  );\n\n  return {\n    annualFootprint,\n    handleUpdate,\n    control,\n  };\n};\n","import { useTranslation } from \"react-i18next\";\nimport {\n  Text,\n  Checkbox,\n  SegmentedButtons,\n  TextInput,\n} from \"react-native-paper\";\nimport { Controller } from \"react-hook-form\";\n\nimport {\n  HeatingEnergiesLabels,\n  WoodTypes,\n} from \"@domain/models/housing/energy/Energy\";\nimport { ListAccordion } from \"@view/screens/profile/components/ListAccordion\";\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport { ColumnContainer } from \"@view/screens/profile/components/ColumnContainer\";\nimport { RowContainer } from \"@view/screens/profile/components/RowContainer\";\nimport { ListItemDivider } from \"@view/screens/profile/components/ListItemDivider\";\nimport { NumericInput } from \"@view/components/forms/NumericInput\";\nimport { FormValues, useEnergy } from \"./useEnergy\";\n\nexport const EnergySection = () => {\n  const { t } = useTranslation([\"housing\", \"emissions\", \"common\"]);\n\n  const {\n    annualFootprint,\n    control,\n    handleUpdate,\n    setValue,\n    showBioGas,\n    showWoodType,\n  } = useEnergy();\n\n  return (\n    <ListAccordion\n      title={t(\"emissions:housing.energy\")}\n      subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n      icon=\"flash\"\n    >\n      <ListContentContainer>\n        <ColumnContainer style={{ gap: 0 }}>\n          <Text variant=\"labelLarge\" style={{ marginBottom: 5 }}>\n            {t(\"energy.heatingEnergies\")}\n          </Text>\n          {HeatingEnergiesLabels.filter((energy) => energy !== \"bioGas\").map(\n            (label) => (\n              <Controller<FormValues>\n                key={label}\n                name={label}\n                control={control}\n                render={({ field: { value } }) => (\n                  <Checkbox.Item\n                    style={{ height: 40 }}\n                    labelVariant=\"labelLarge\"\n                    label={t(`energy.energies.${label}`)}\n                    status={value === \"true\" ? \"checked\" : \"unchecked\"}\n                    onPress={() => {\n                      setValue(label, value === \"true\" ? \"false\" : \"true\");\n                      handleUpdate(label);\n                    }}\n                  />\n                )}\n              />\n            ),\n          )}\n        </ColumnContainer>\n\n        {showBioGas && (\n          <RowContainer style={{ marginTop: 10 }}>\n            <Text variant=\"labelLarge\">{t(\"energy.bioGas\")}</Text>\n            <Controller<FormValues>\n              name=\"bioGas\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"bioGas\");\n                  }}\n                  buttons={[\n                    { value: \"true\", label: t(\"common:yes\") },\n                    { value: \"false\", label: t(\"common:no\") },\n                  ]}\n                />\n              )}\n            />\n          </RowContainer>\n        )}\n\n        {showWoodType && (\n          <RowContainer style={{ marginTop: 10 }}>\n            <Text variant=\"labelLarge\" style={{ flex: 1.5 }}>\n              {t(\"energy.woodType\")}\n            </Text>\n            <Controller<FormValues>\n              name=\"woodType\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  style={{ flex: 2 }}\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"woodType\");\n                  }}\n                  buttons={WoodTypes.map((woodType) => ({\n                    value: woodType,\n                    label: t(`energy.woodTypes.${woodType}`),\n                  }))}\n                />\n              )}\n            />\n          </RowContainer>\n        )}\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 1.5 }}>\n            {t(\"energy.annualElectricityConsumption\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"annualElectricityConsumption\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                right={<TextInput.Affix text=\"kWh\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"annualElectricityConsumption\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 3 }}>\n            {t(\"energy.airConditioners\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"airConditioners\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"airConditioners\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </ListAccordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { Energy } from \"@domain/models/housing/energy/Energy\";\nimport { HeatingEnergies } from \"@domain/models/housing/energy/types\";\nimport { StringifyProperties, convertStringToType } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\n\nexport type FormValues = Omit<\n  StringifyProperties<Energy & HeatingEnergies>,\n  \"annualFootprint\" | \"occupants\" | \"livingSpace\" | \"isAnApartment\"\n>;\n\nexport const useEnergy = () => {\n  const storedEnergy = useAppStore((store) => store.housing.energy);\n  const annualFootprint = new Energy(storedEnergy).annualFootprint;\n\n  const { useUpdateHousing } = useContext(UsecasesContext);\n  const { updateEnergy } = useUpdateHousing();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    annualElectricityConsumption:\n      storedEnergy.annualElectricityConsumption.toString(),\n    airConditioners: storedEnergy.airConditioners.toString(),\n    heatingEnergies: JSON.stringify(storedEnergy.heatingEnergies),\n    electricity: storedEnergy.heatingEnergies.electricity.toString(),\n    gas: storedEnergy.heatingEnergies.gas.toString(),\n    heatNetwork: storedEnergy.heatingEnergies.heatNetwork.toString(),\n    fuel: storedEnergy.heatingEnergies.fuel.toString(),\n    wood: storedEnergy.heatingEnergies.wood.toString(),\n    propane: storedEnergy.heatingEnergies.propane.toString(),\n    gasCylinder: storedEnergy.heatingEnergies.gasCylinder.toString(),\n    heatPump: storedEnergy.heatingEnergies.heatPump.toString(),\n    bioGas: storedEnergy.heatingEnergies.bioGas.toString(),\n    woodType: storedEnergy.woodType.toString(),\n  });\n\n  const { handleUpdate, control, watch, setValue } = useUpdateForm<\n    Energy,\n    FormValues\n  >(getDefaultValues(), storedEnergy, updateEnergy);\n\n  const electricity = watch(\"electricity\");\n  const gas = watch(\"gas\");\n  const heatNetwork = watch(\"heatNetwork\");\n  const fuel = watch(\"fuel\");\n  const wood = watch(\"wood\");\n  const propane = watch(\"propane\");\n  const gasCylinder = watch(\"gasCylinder\");\n  const heatPump = watch(\"heatPump\");\n  const bioGas = watch(\"bioGas\");\n\n  useEffect(() => {\n    const newHeatingEnergies = JSON.stringify({\n      electricity: convertStringToType(electricity, \"boolean\"),\n      gas: convertStringToType(gas, \"boolean\"),\n      heatNetwork: convertStringToType(heatNetwork, \"boolean\"),\n      fuel: convertStringToType(fuel, \"boolean\"),\n      wood: convertStringToType(wood, \"boolean\"),\n      propane: convertStringToType(propane, \"boolean\"),\n      gasCylinder: convertStringToType(gasCylinder, \"boolean\"),\n      heatPump: convertStringToType(heatPump, \"boolean\"),\n      bioGas: convertStringToType(bioGas, \"boolean\"),\n    });\n    setValue(\"heatingEnergies\", newHeatingEnergies);\n    handleUpdate(\"heatingEnergies\");\n  }, [\n    electricity,\n    gas,\n    heatNetwork,\n    fuel,\n    wood,\n    propane,\n    gasCylinder,\n    heatPump,\n    bioGas,\n  ]);\n\n  const showBioGas = gas === \"true\";\n  const showWoodType = wood === \"true\";\n\n  return {\n    annualFootprint,\n    handleUpdate,\n    control,\n    setValue,\n    showBioGas,\n    showWoodType,\n  };\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { useAppStore } from \"@data/store/store\";\nimport { StringifyProperties, convertStringToType } from \"@srctypes/utils\";\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\nimport { Leisure } from \"@domain/models/housing/leisure/Leisure\";\nimport { HolidayAccomodations } from \"@domain/models/housing/leisure/types\";\n\nexport const HolidayAccomodationLabels: (keyof HolidayAccomodations)[] = [\n  \"hotel\",\n  \"rentals\",\n  \"youthHostel\",\n  \"camping\",\n  \"exchange\",\n];\n\nexport type FormValues = Omit<\n  StringifyProperties<Leisure & HolidayAccomodations>,\n  \"annualFootprint\"\n>;\n\nexport const useLeisure = () => {\n  const storedLeisure = useAppStore((store) => store.housing.leisure);\n  const isAnApartment = useAppStore(\n    (store) => store.housing.home.isAnApartment,\n  );\n  const annualFootprint = new Leisure(storedLeisure).annualFootprint;\n\n  const { useUpdateHousing } = useContext(UsecasesContext);\n  const { updateLeisure } = useUpdateHousing();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    hasIngroundPool: storedLeisure.hasIngroundPool.toString(),\n    campingNightsPerYear: storedLeisure.campingNightsPerYear.toString(),\n    exchangeNightsPerYear: storedLeisure.exchangeNightsPerYear.toString(),\n    hotelNightsPerYear: storedLeisure.hotelNightsPerYear.toString(),\n    rentalNightsPerYear: storedLeisure.rentalNightsPerYear.toString(),\n    youthHostelNightsPerYear: storedLeisure.youthHostelNightsPerYear.toString(),\n    holidayAccomodations: JSON.stringify(storedLeisure.holidayAccomodations),\n    camping: storedLeisure.holidayAccomodations.camping.toString(),\n    exchange: storedLeisure.holidayAccomodations.exchange.toString(),\n    hotel: storedLeisure.holidayAccomodations.hotel.toString(),\n    rentals: storedLeisure.holidayAccomodations.rentals.toString(),\n    youthHostel: storedLeisure.holidayAccomodations.youthHostel.toString(),\n  });\n\n  const { handleUpdate, control, watch, setValue } = useUpdateForm<\n    Leisure,\n    FormValues\n  >(getDefaultValues(), storedLeisure, updateLeisure);\n\n  const camping = watch(\"camping\");\n  const exchange = watch(\"exchange\");\n  const hotel = watch(\"hotel\");\n  const rentals = watch(\"rentals\");\n  const youthHostel = watch(\"youthHostel\");\n\n  useEffect(() => {\n    const newHolidayAccomodations = JSON.stringify({\n      camping: convertStringToType(camping, \"boolean\"),\n      exchange: convertStringToType(exchange, \"boolean\"),\n      hotel: convertStringToType(hotel, \"boolean\"),\n      rentals: convertStringToType(rentals, \"boolean\"),\n      youthHostel: convertStringToType(youthHostel, \"boolean\"),\n    });\n    setValue(\"holidayAccomodations\", newHolidayAccomodations);\n    handleUpdate(\"holidayAccomodations\");\n  }, [camping, exchange, hotel, rentals, youthHostel]);\n\n  const disablePool = isAnApartment;\n  const showCamping = camping === \"true\";\n  const showExchange = exchange === \"true\";\n  const showHotel = hotel === \"true\";\n  const showRentals = rentals === \"true\";\n  const showYouthHostel = youthHostel === \"true\";\n\n  return {\n    annualFootprint,\n    handleUpdate,\n    control,\n    setValue,\n    disablePool,\n    showCamping,\n    showExchange,\n    showHotel,\n    showRentals,\n    showYouthHostel,\n  };\n};\n","import { useTranslation } from \"react-i18next\";\nimport { Controller } from \"react-hook-form\";\nimport { Checkbox, SegmentedButtons, Text } from \"react-native-paper\";\n\nimport { ListAccordion } from \"@view/screens/profile/components/ListAccordion\";\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport { RowContainer } from \"@view/screens/profile/components/RowContainer\";\nimport { ListItemDivider } from \"@view/screens/profile/components/ListItemDivider\";\nimport { ColumnContainer } from \"@view/screens/profile/components/ColumnContainer\";\nimport { NumericInput } from \"@view/components/forms/NumericInput\";\nimport {\n  FormValues,\n  useLeisure,\n  HolidayAccomodationLabels,\n} from \"./useLeisure\";\n\nexport const LeisureSection = () => {\n  const { t } = useTranslation([\"housing\", \"emissions\", \"common\"]);\n\n  const {\n    annualFootprint,\n    control,\n    handleUpdate,\n    setValue,\n    disablePool,\n    showCamping,\n    showExchange,\n    showHotel,\n    showRentals,\n    showYouthHostel,\n  } = useLeisure();\n\n  return (\n    <ListAccordion\n      title={t(\"emissions:housing.leisure\")}\n      subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n      icon=\"beach\"\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\">{t(\"leisure.hasIngroundPool\")}</Text>\n          <Controller<FormValues>\n            name=\"hasIngroundPool\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"hasIngroundPool\");\n                }}\n                buttons={[\n                  {\n                    value: \"true\",\n                    label: t(\"common:yes\"),\n                    disabled: disablePool,\n                  },\n                  {\n                    value: \"false\",\n                    label: t(\"common:no\"),\n                  },\n                ]}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer style={{ gap: 0 }}>\n          <Text variant=\"labelLarge\" style={{ marginBottom: 5 }}>\n            {t(\"leisure.holidayAccomodations\")}\n          </Text>\n          {HolidayAccomodationLabels.map((label) => (\n            <Controller<FormValues>\n              key={label}\n              name={label}\n              control={control}\n              render={({ field: { value } }) => (\n                <Checkbox.Item\n                  style={{ height: 40 }}\n                  labelVariant=\"labelLarge\"\n                  label={t(`leisure.accomodations.${label}`)}\n                  status={value === \"true\" ? \"checked\" : \"unchecked\"}\n                  onPress={() => {\n                    setValue(label, value === \"true\" ? \"false\" : \"true\");\n                    handleUpdate(label);\n                  }}\n                />\n              )}\n            />\n          ))}\n        </ColumnContainer>\n\n        {showHotel && (\n          <>\n            <ListItemDivider />\n            <RowContainer>\n              <Text variant=\"labelLarge\" style={{ flex: 3 }}>\n                {t(\"leisure.hotelNightsPerYear\")}\n              </Text>\n              <Controller<FormValues>\n                name=\"hotelNightsPerYear\"\n                control={control}\n                render={({ field: { onChange, value } }) => (\n                  <NumericInput\n                    style={{ flex: 1 }}\n                    onBlur={() => handleUpdate(\"hotelNightsPerYear\")}\n                    onChangeText={onChange}\n                    value={value}\n                  />\n                )}\n              />\n            </RowContainer>\n          </>\n        )}\n\n        {showRentals && (\n          <>\n            <ListItemDivider />\n            <RowContainer>\n              <Text variant=\"labelLarge\" style={{ flex: 3 }}>\n                {t(\"leisure.rentalNightsPerYear\")}\n              </Text>\n              <Controller<FormValues>\n                name=\"rentalNightsPerYear\"\n                control={control}\n                render={({ field: { onChange, value } }) => (\n                  <NumericInput\n                    style={{ flex: 1 }}\n                    onBlur={() => handleUpdate(\"rentalNightsPerYear\")}\n                    onChangeText={onChange}\n                    value={value}\n                  />\n                )}\n              />\n            </RowContainer>\n          </>\n        )}\n\n        {showYouthHostel && (\n          <>\n            <ListItemDivider />\n            <RowContainer>\n              <Text variant=\"labelLarge\" style={{ flex: 3 }}>\n                {t(\"leisure.youthHostelNightsPerYear\")}\n              </Text>\n              <Controller<FormValues>\n                name=\"youthHostelNightsPerYear\"\n                control={control}\n                render={({ field: { onChange, value } }) => (\n                  <NumericInput\n                    style={{ flex: 1 }}\n                    onBlur={() => handleUpdate(\"youthHostelNightsPerYear\")}\n                    onChangeText={onChange}\n                    value={value}\n                  />\n                )}\n              />\n            </RowContainer>\n          </>\n        )}\n\n        {showCamping && (\n          <>\n            <ListItemDivider />\n            <RowContainer>\n              <Text variant=\"labelLarge\" style={{ flex: 3 }}>\n                {t(\"leisure.campingNightsPerYear\")}\n              </Text>\n              <Controller<FormValues>\n                name=\"campingNightsPerYear\"\n                control={control}\n                render={({ field: { onChange, value } }) => (\n                  <NumericInput\n                    style={{ flex: 1 }}\n                    onBlur={() => handleUpdate(\"campingNightsPerYear\")}\n                    onChangeText={onChange}\n                    value={value}\n                  />\n                )}\n              />\n            </RowContainer>\n          </>\n        )}\n\n        {showExchange && (\n          <>\n            <ListItemDivider />\n            <RowContainer>\n              <Text variant=\"labelLarge\" style={{ flex: 3 }}>\n                {t(\"leisure.exchangeNightsPerYear\")}\n              </Text>\n              <Controller<FormValues>\n                name=\"exchangeNightsPerYear\"\n                control={control}\n                render={({ field: { onChange, value } }) => (\n                  <NumericInput\n                    style={{ flex: 1 }}\n                    onBlur={() => handleUpdate(\"exchangeNightsPerYear\")}\n                    onChangeText={onChange}\n                    value={value}\n                  />\n                )}\n              />\n            </RowContainer>\n          </>\n        )}\n      </ListContentContainer>\n    </ListAccordion>\n  );\n};\n","import { ScrollView } from \"react-native\";\nimport { Divider, List } from \"react-native-paper\";\n\nimport { HomeSection } from \"@view/screens/profile/housing/home/HomeSection\";\nimport { EnergySection } from \"@view/screens/profile/housing/energy/EnergySection\";\nimport { LeisureSection } from \"@view/screens/profile/housing/leisure/Leisure\";\n\nexport const HousingProfile = () => {\n  return (\n    <ScrollView>\n      <List.Section>\n        <HomeSection />\n        <Divider />\n        <EnergySection />\n        <Divider />\n        <LeisureSection />\n      </List.Section>\n    </ScrollView>\n  );\n};\n","import { useContext } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { Clothes } from \"@domain/models/everyday-things/clothes/Clothes\";\nimport { StringifyProperties } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\n\nexport type FormValues = Omit<StringifyProperties<Clothes>, \"annualFootprint\">;\n\nexport const ClothesLabels: (keyof FormValues)[] = [\n  \"tshirts\",\n  \"shirts\",\n  \"sweatshirts\",\n  \"sweaters\",\n  \"shorts\",\n  \"coats\",\n  \"dresses\",\n  \"pants\",\n  \"shoes\",\n  \"smallItems\",\n  \"bigItems\",\n];\n\nexport const useClothes = () => {\n  const storedClothes = useAppStore((store) => store.everydayThings.clothes);\n  const annualFootprint = new Clothes(storedClothes).annualFootprint;\n\n  const { useUpdateEverydayThings } = useContext(UsecasesContext);\n  const { updateClothes } = useUpdateEverydayThings();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    tshirts: storedClothes.tshirts.toString(),\n    shirts: storedClothes.shirts.toString(),\n    sweatshirts: storedClothes.sweatshirts.toString(),\n    sweaters: storedClothes.sweaters.toString(),\n    shorts: storedClothes.shorts.toString(),\n    coats: storedClothes.coats.toString(),\n    dresses: storedClothes.dresses.toString(),\n    pants: storedClothes.pants.toString(),\n    shoes: storedClothes.shoes.toString(),\n    smallItems: storedClothes.smallItems.toString(),\n    bigItems: storedClothes.bigItems.toString(),\n  });\n\n  const { handleUpdate, control } = useUpdateForm<Clothes, FormValues>(\n    getDefaultValues(),\n    storedClothes,\n    updateClothes,\n  );\n\n  return { annualFootprint, control, handleUpdate };\n};\n","import { useTranslation } from \"react-i18next\";\nimport { Text } from \"react-native-paper\";\nimport { Controller } from \"react-hook-form\";\n\nimport { ListAccordion } from \"@view/screens/profile/components/ListAccordion\";\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport { RowContainer } from \"@view/screens/profile/components/RowContainer\";\nimport { NumericInput } from \"@view/components/forms/NumericInput\";\nimport { FormValues, useClothes, ClothesLabels } from \"./useClothes\";\n\nexport const ClothesSection = () => {\n  const { t } = useTranslation([\"everydayThings\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, annualFootprint } = useClothes();\n\n  return (\n    <ListAccordion\n      title={t(\"emissions:everydayThings.clothes\")}\n      subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n      icon=\"tshirt-crew\"\n    >\n      <ListContentContainer>\n        <RowContainer style={{ marginBottom: 10 }}>\n          <Text variant=\"labelLarge\" style={{ textAlign: \"center\" }}>\n            {t(\"clothes.title\")}\n          </Text>\n        </RowContainer>\n\n        {ClothesLabels.map((label) => (\n          <RowContainer key={label} style={{ marginTop: 10 }}>\n            <Text variant=\"labelLarge\" style={{ flex: 3 }}>\n              {t(`clothes.${label}`)}\n            </Text>\n            <Controller<FormValues>\n              name={label}\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <NumericInput\n                  style={{ flex: 1 }}\n                  onBlur={() => handleUpdate(label)}\n                  onChangeText={onChange}\n                  value={value}\n                />\n              )}\n            />\n          </RowContainer>\n        ))}\n      </ListContentContainer>\n    </ListAccordion>\n  );\n};\n","import { useContext } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { StringifyProperties } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\nimport { Pets } from \"@domain/models/everyday-things/pets/Pets\";\n\nexport type FormValues = Omit<StringifyProperties<Pets>, \"annualFootprint\">;\n\nexport const PetsLabels: (keyof FormValues)[] = [\n  \"smallDogs\",\n  \"mediumDogs\",\n  \"bigDogs\",\n  \"cats\",\n];\n\nexport const usePets = () => {\n  const storedPets = useAppStore((store) => store.everydayThings.pets);\n  const annualFootprint = new Pets(storedPets).annualFootprint;\n\n  const { useUpdateEverydayThings } = useContext(UsecasesContext);\n  const { updatePets } = useUpdateEverydayThings();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    smallDogs: storedPets.smallDogs.toString(),\n    mediumDogs: storedPets.mediumDogs.toString(),\n    bigDogs: storedPets.bigDogs.toString(),\n    cats: storedPets.cats.toString(),\n  });\n\n  const { handleUpdate, control } = useUpdateForm<Pets, FormValues>(\n    getDefaultValues(),\n    storedPets,\n    updatePets,\n  );\n\n  return { annualFootprint, control, handleUpdate };\n};\n","import { useTranslation } from \"react-i18next\";\nimport { Text } from \"react-native-paper\";\nimport { Controller } from \"react-hook-form\";\n\nimport { ListAccordion } from \"@view/screens/profile/components/ListAccordion\";\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport { RowContainer } from \"@view/screens/profile/components/RowContainer\";\nimport { NumericInput } from \"@view/components/forms/NumericInput\";\nimport { FormValues, PetsLabels, usePets } from \"./usePets\";\n\nexport const PetsSection = () => {\n  const { t } = useTranslation([\"everydayThings\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, annualFootprint } = usePets();\n\n  return (\n    <ListAccordion\n      title={t(\"emissions:everydayThings.pets\")}\n      subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n      icon=\"dog\"\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ textAlign: \"center\" }}>\n            {t(\"pets.title\")}\n          </Text>\n        </RowContainer>\n\n        {PetsLabels.map((label) => (\n          <RowContainer key={label} style={{ marginTop: 10 }}>\n            <Text variant=\"labelLarge\" style={{ flex: 3 }}>\n              {t(`pets.${label}`)}\n            </Text>\n            <Controller<FormValues>\n              name={label}\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <NumericInput\n                  style={{ flex: 1 }}\n                  onBlur={() => handleUpdate(label)}\n                  onChangeText={onChange}\n                  value={value}\n                />\n              )}\n            />\n          </RowContainer>\n        ))}\n      </ListContentContainer>\n    </ListAccordion>\n  );\n};\n","import { useContext } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { StringifyProperties } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\nimport { HouseholdAppliances } from \"@domain/models/everyday-things/household-appliances/HouseholdAppliances\";\n\nexport type FormValues = Omit<\n  StringifyProperties<HouseholdAppliances>,\n  \"annualFootprint\"\n>;\n\nexport const HouseholdAppliancesLabels: (keyof FormValues)[] = [\n  \"fridges\",\n  \"miniFridges\",\n  \"freezers\",\n  \"washingMachines\",\n  \"dryers\",\n  \"dishWashers\",\n  \"hoods\",\n  \"ovens\",\n  \"microwaves\",\n  \"hotPlates\",\n  \"kettles\",\n  \"coffeeMachines\",\n  \"vacuumCleaners\",\n  \"kitchenRobots\",\n  \"electricLawnMowers\",\n];\n\nexport const useHouseholdAppliances = () => {\n  const storedHouseholdAppliances = useAppStore(\n    (store) => store.everydayThings.householdAppliances,\n  );\n  const annualFootprint = new HouseholdAppliances(storedHouseholdAppliances)\n    .annualFootprint;\n\n  const { useUpdateEverydayThings } = useContext(UsecasesContext);\n  const { updateHouseholdAppliances } = useUpdateEverydayThings();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    preservation: storedHouseholdAppliances.preservation,\n    fridges: storedHouseholdAppliances.fridges.toString(),\n    miniFridges: storedHouseholdAppliances.miniFridges.toString(),\n    freezers: storedHouseholdAppliances.freezers.toString(),\n    washingMachines: storedHouseholdAppliances.washingMachines.toString(),\n    dryers: storedHouseholdAppliances.dryers.toString(),\n    dishWashers: storedHouseholdAppliances.dishWashers.toString(),\n    hoods: storedHouseholdAppliances.hoods.toString(),\n    ovens: storedHouseholdAppliances.ovens.toString(),\n    microwaves: storedHouseholdAppliances.microwaves.toString(),\n    hotPlates: storedHouseholdAppliances.hotPlates.toString(),\n    kettles: storedHouseholdAppliances.kettles.toString(),\n    coffeeMachines: storedHouseholdAppliances.coffeeMachines.toString(),\n    vacuumCleaners: storedHouseholdAppliances.vacuumCleaners.toString(),\n    kitchenRobots: storedHouseholdAppliances.kitchenRobots.toString(),\n    electricLawnMowers: storedHouseholdAppliances.electricLawnMowers.toString(),\n  });\n\n  const { handleUpdate, control } = useUpdateForm<\n    HouseholdAppliances,\n    FormValues\n  >(getDefaultValues(), storedHouseholdAppliances, updateHouseholdAppliances);\n\n  return { annualFootprint, control, handleUpdate };\n};\n","export type Preservation = \"none\" | \"low\" | \"medium\" | \"high\";\n\nexport const preservationOptions: Preservation[] = [\n  \"none\",\n  \"low\",\n  \"medium\",\n  \"high\",\n];\n","import { View } from \"react-native\";\nimport { useTranslation } from \"react-i18next\";\nimport { SegmentedButtons, Text } from \"react-native-paper\";\nimport { Controller } from \"react-hook-form\";\n\nimport { ListAccordion } from \"@view/screens/profile/components/ListAccordion\";\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport { RowContainer } from \"@view/screens/profile/components/RowContainer\";\nimport { NumericInput } from \"@view/components/forms/NumericInput\";\nimport { ListItemDivider } from \"@view/screens/profile/components/ListItemDivider\";\nimport {\n  FormValues,\n  HouseholdAppliancesLabels,\n  useHouseholdAppliances,\n} from \"./useHouseholdAppliances\";\nimport { ColumnContainer } from \"@view/screens/profile/components/ColumnContainer\";\nimport { preservationOptions } from \"@domain/models/everyday-things/types\";\n\nexport const HouseholdAppliancesSection = () => {\n  const { t } = useTranslation([\"everydayThings\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, annualFootprint } = useHouseholdAppliances();\n\n  return (\n    <ListAccordion\n      title={t(\"emissions:everydayThings.householdAppliances\")}\n      subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n      icon=\"microwave\"\n    >\n      <ListContentContainer>\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">\n            {t(\"householdAppliances.preservation\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"preservation\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <View>\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"preservation\");\n                  }}\n                  buttons={preservationOptions.slice(0, 2).map((option) => ({\n                    value: option,\n                    label: t(\n                      `householdAppliances.preservationChoices.${option}`,\n                    ),\n                  }))}\n                />\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"preservation\");\n                  }}\n                  buttons={preservationOptions.slice(2, 4).map((option) => ({\n                    value: option,\n                    label: t(\n                      `householdAppliances.preservationChoices.${option}`,\n                    ),\n                  }))}\n                />\n              </View>\n            )}\n          />\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ textAlign: \"center\" }}>\n            {t(\"householdAppliances.title\")}\n          </Text>\n        </RowContainer>\n\n        {HouseholdAppliancesLabels.map((label) => (\n          <RowContainer key={label} style={{ marginTop: 10 }}>\n            <Text variant=\"labelLarge\" style={{ flex: 3 }}>\n              {t(`householdAppliances.${label}`)}\n            </Text>\n            <Controller<FormValues>\n              name={label}\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <NumericInput\n                  style={{ flex: 1 }}\n                  onBlur={() => handleUpdate(label)}\n                  onChangeText={onChange}\n                  value={value}\n                />\n              )}\n            />\n          </RowContainer>\n        ))}\n      </ListContentContainer>\n    </ListAccordion>\n  );\n};\n","import { useContext } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { StringifyProperties } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\nimport { Furniture } from \"@domain/models/everyday-things/furniture/Furniture\";\n\nexport type FormValues = Omit<\n  StringifyProperties<Furniture>,\n  \"annualFootprint\"\n>;\n\nexport const FurnitureLabels: (keyof FormValues)[] = [\n  \"wardrobes\",\n  \"couches\",\n  \"mattresses\",\n  \"beds\",\n  \"tables\",\n  \"chairs\",\n  \"smallFurnitures\",\n  \"bigFurnitures\",\n  \"woodenGardenFurnitures\",\n  \"resinOrMetalGardenFurnitures\",\n];\n\nexport const useFurniture = () => {\n  const storedFurniture = useAppStore(\n    (store) => store.everydayThings.furniture,\n  );\n  const annualFootprint = new Furniture(storedFurniture).annualFootprint;\n\n  const { useUpdateEverydayThings } = useContext(UsecasesContext);\n  const { updateFurniture } = useUpdateEverydayThings();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    preservation: storedFurniture.preservation,\n    wardrobes: storedFurniture.wardrobes.toString(),\n    couches: storedFurniture.couches.toString(),\n    mattresses: storedFurniture.mattresses.toString(),\n    beds: storedFurniture.beds.toString(),\n    tables: storedFurniture.tables.toString(),\n    chairs: storedFurniture.chairs.toString(),\n    smallFurnitures: storedFurniture.smallFurnitures.toString(),\n    bigFurnitures: storedFurniture.bigFurnitures.toString(),\n    woodenGardenFurnitures: storedFurniture.woodenGardenFurnitures.toString(),\n    resinOrMetalGardenFurnitures:\n      storedFurniture.resinOrMetalGardenFurnitures.toString(),\n  });\n\n  const { handleUpdate, control } = useUpdateForm<Furniture, FormValues>(\n    getDefaultValues(),\n    storedFurniture,\n    updateFurniture,\n  );\n\n  return { annualFootprint, control, handleUpdate };\n};\n","import { View } from \"react-native\";\nimport { useTranslation } from \"react-i18next\";\nimport { SegmentedButtons, Text } from \"react-native-paper\";\nimport { Controller } from \"react-hook-form\";\n\nimport { ListAccordion } from \"@view/screens/profile/components/ListAccordion\";\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport { RowContainer } from \"@view/screens/profile/components/RowContainer\";\nimport { NumericInput } from \"@view/components/forms/NumericInput\";\nimport { ListItemDivider } from \"@view/screens/profile/components/ListItemDivider\";\nimport { ColumnContainer } from \"@view/screens/profile/components/ColumnContainer\";\nimport { preservationOptions } from \"@domain/models/everyday-things/types\";\nimport { FormValues, FurnitureLabels, useFurniture } from \"./useFurniture\";\n\nexport const FurnitureSection = () => {\n  const { t } = useTranslation([\"everydayThings\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, annualFootprint } = useFurniture();\n\n  return (\n    <ListAccordion\n      title={t(\"emissions:everydayThings.furniture\")}\n      subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n      icon=\"bed\"\n    >\n      <ListContentContainer>\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"furniture.preservation\")}</Text>\n          <Controller<FormValues>\n            name=\"preservation\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <View>\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"preservation\");\n                  }}\n                  buttons={preservationOptions.slice(0, 2).map((option) => ({\n                    value: option,\n                    label: t(`furniture.preservationChoices.${option}`),\n                  }))}\n                />\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"preservation\");\n                  }}\n                  buttons={preservationOptions.slice(2, 4).map((option) => ({\n                    value: option,\n                    label: t(`furniture.preservationChoices.${option}`),\n                  }))}\n                />\n              </View>\n            )}\n          />\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ textAlign: \"center\" }}>\n            {t(\"furniture.title\")}\n          </Text>\n        </RowContainer>\n\n        {FurnitureLabels.map((label) => (\n          <RowContainer key={label} style={{ marginTop: 10 }}>\n            <Text variant=\"labelLarge\" style={{ flex: 3 }}>\n              {t(`furniture.${label}`)}\n            </Text>\n            <Controller<FormValues>\n              name={label}\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <NumericInput\n                  style={{ flex: 1 }}\n                  onBlur={() => handleUpdate(label)}\n                  onChangeText={onChange}\n                  value={value}\n                />\n              )}\n            />\n          </RowContainer>\n        ))}\n      </ListContentContainer>\n    </ListAccordion>\n  );\n};\n","import { useContext } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { StringifyProperties } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\nimport { Digital } from \"@domain/models/everyday-things/digital/Digital\";\n\nexport type FormValues = Omit<StringifyProperties<Digital>, \"annualFootprint\">;\n\nexport const DigitalLabels: (keyof FormValues)[] = [\n  \"mobilePhones\",\n  \"televisions\",\n  \"laptops\",\n  \"desktopComputers\",\n  \"tablets\",\n  \"videoProjectors\",\n  \"cameras\",\n  \"homeCinemas\",\n  \"bluetoothSpeakers\",\n  \"vocalSpeakers\",\n  \"smartWatches\",\n  \"gamingConsoles\",\n  \"portableConsoles\",\n];\n\nexport const useDigital = () => {\n  const storedDigital = useAppStore((store) => store.everydayThings.digital);\n  const annualFootprint = new Digital(storedDigital).annualFootprint;\n\n  const { useUpdateEverydayThings } = useContext(UsecasesContext);\n  const { updateDigital } = useUpdateEverydayThings();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    preservation: storedDigital.preservation,\n    internetDailyHours: storedDigital.internetDailyHours.toString(),\n    mobilePhones: storedDigital.mobilePhones.toString(),\n    televisions: storedDigital.televisions.toString(),\n    laptops: storedDigital.laptops.toString(),\n    desktopComputers: storedDigital.desktopComputers.toString(),\n    tablets: storedDigital.tablets.toString(),\n    videoProjectors: storedDigital.videoProjectors.toString(),\n    cameras: storedDigital.cameras.toString(),\n    homeCinemas: storedDigital.homeCinemas.toString(),\n    bluetoothSpeakers: storedDigital.bluetoothSpeakers.toString(),\n    vocalSpeakers: storedDigital.vocalSpeakers.toString(),\n    smartWatches: storedDigital.smartWatches.toString(),\n    gamingConsoles: storedDigital.gamingConsoles.toString(),\n    portableConsoles: storedDigital.portableConsoles.toString(),\n  });\n\n  const { handleUpdate, control } = useUpdateForm<Digital, FormValues>(\n    getDefaultValues(),\n    storedDigital,\n    updateDigital,\n  );\n\n  return { annualFootprint, control, handleUpdate };\n};\n","import { View } from \"react-native\";\nimport { useTranslation } from \"react-i18next\";\nimport { SegmentedButtons, Text } from \"react-native-paper\";\nimport { Controller } from \"react-hook-form\";\n\nimport { ListAccordion } from \"@view/screens/profile/components/ListAccordion\";\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport { RowContainer } from \"@view/screens/profile/components/RowContainer\";\nimport { NumericInput } from \"@view/components/forms/NumericInput\";\nimport { ListItemDivider } from \"@view/screens/profile/components/ListItemDivider\";\nimport { ColumnContainer } from \"@view/screens/profile/components/ColumnContainer\";\nimport { preservationOptions } from \"@domain/models/everyday-things/types\";\nimport { FormValues, useDigital, DigitalLabels } from \"./useDigital\";\n\nexport const DigitalSection = () => {\n  const { t } = useTranslation([\"everydayThings\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, annualFootprint } = useDigital();\n\n  return (\n    <ListAccordion\n      title={t(\"emissions:everydayThings.digital\")}\n      subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n      icon=\"devices\"\n    >\n      <ListContentContainer>\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"digital.preservation\")}</Text>\n          <Controller<FormValues>\n            name=\"preservation\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <View>\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"preservation\");\n                  }}\n                  buttons={preservationOptions.slice(0, 2).map((option) => ({\n                    value: option,\n                    label: t(`digital.preservationChoices.${option}`),\n                  }))}\n                />\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"preservation\");\n                  }}\n                  buttons={preservationOptions.slice(2, 4).map((option) => ({\n                    value: option,\n                    label: t(`digital.preservationChoices.${option}`),\n                  }))}\n                />\n              </View>\n            )}\n          />\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ textAlign: \"center\" }}>\n            {t(\"digital.title\")}\n          </Text>\n        </RowContainer>\n\n        {DigitalLabels.map((label) => (\n          <RowContainer key={label} style={{ marginTop: 10 }}>\n            <Text variant=\"labelLarge\" style={{ flex: 3 }}>\n              {t(`digital.${label}`)}\n            </Text>\n            <Controller<FormValues>\n              name={label}\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <NumericInput\n                  style={{ flex: 1 }}\n                  onBlur={() => handleUpdate(label)}\n                  onChangeText={onChange}\n                  value={value}\n                />\n              )}\n            />\n          </RowContainer>\n        ))}\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 3 }}>\n            {t(\"digital.internetDailyHours\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"internetDailyHours\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"internetDailyHours\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </ListAccordion>\n  );\n};\n","import { useContext } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { StringifyProperties } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\nimport { Hobbies } from \"@domain/models/everyday-things/hobbies/Hobbies\";\n\nexport type FormValues = Omit<StringifyProperties<Hobbies>, \"annualFootprint\">;\n\nexport const SportLabels: (keyof FormValues)[] = [\n  \"outdoorIndividualSport\",\n  \"ballSport\",\n  \"swimming\",\n  \"martialSport\",\n  \"athletics\",\n  \"gym\",\n  \"riding\",\n  \"golf\",\n  \"waterSport\",\n  \"winterSport\",\n  \"motorSport\",\n  \"otherSport\",\n];\n\nexport const CulturalLabels: (keyof FormValues)[] = [\n  \"concertsAndShows\",\n  \"museumsAndMonuments\",\n  \"editions\",\n  \"music\",\n];\n\nexport const useHobbies = () => {\n  const storedHobbies = useAppStore((store) => store.everydayThings.hobbies);\n  const annualFootprint = new Hobbies(storedHobbies).annualFootprint;\n\n  const { useUpdateEverydayThings } = useContext(UsecasesContext);\n  const { updateHobbies } = useUpdateEverydayThings();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    concertsAndShows: storedHobbies.concertsAndShows.toString(),\n    museumsAndMonuments: storedHobbies.museumsAndMonuments.toString(),\n    editions: storedHobbies.editions.toString(),\n    music: storedHobbies.music.toString(),\n    outdoorIndividualSport: storedHobbies.outdoorIndividualSport.toString(),\n    ballSport: storedHobbies.ballSport.toString(),\n    waterSport: storedHobbies.waterSport.toString(),\n    swimming: storedHobbies.swimming.toString(),\n    martialSport: storedHobbies.martialSport.toString(),\n    athletics: storedHobbies.athletics.toString(),\n    gym: storedHobbies.gym.toString(),\n    riding: storedHobbies.riding.toString(),\n    golf: storedHobbies.golf.toString(),\n    winterSport: storedHobbies.winterSport.toString(),\n    motorSport: storedHobbies.motorSport.toString(),\n    otherSport: storedHobbies.otherSport.toString(),\n  });\n\n  const { handleUpdate, control, setValue } = useUpdateForm<\n    Hobbies,\n    FormValues\n  >(getDefaultValues(), storedHobbies, updateHobbies);\n\n  return { annualFootprint, control, handleUpdate, setValue };\n};\n","import { useTranslation } from \"react-i18next\";\nimport { Checkbox, Text } from \"react-native-paper\";\nimport { Controller } from \"react-hook-form\";\n\nimport { ListAccordion } from \"@view/screens/profile/components/ListAccordion\";\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport { ListItemDivider } from \"@view/screens/profile/components/ListItemDivider\";\nimport { ColumnContainer } from \"@view/screens/profile/components/ColumnContainer\";\nimport {\n  FormValues,\n  CulturalLabels,\n  SportLabels,\n  useHobbies,\n} from \"./useHobbies\";\n\nexport const HobbiesSection = () => {\n  const { t } = useTranslation([\"everydayThings\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, annualFootprint, setValue } = useHobbies();\n\n  return (\n    <ListAccordion\n      title={t(\"emissions:everydayThings.hobbies\")}\n      subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n      icon=\"bike\"\n    >\n      <ListContentContainer>\n        <ColumnContainer style={{ gap: 0 }}>\n          <Text variant=\"labelLarge\" style={{ marginBottom: 5 }}>\n            {t(\"hobbies.cultural.title\")}\n          </Text>\n          {CulturalLabels.map((label) => (\n            <Controller<FormValues>\n              key={label}\n              name={label}\n              control={control}\n              render={({ field: { value } }) => (\n                <Checkbox.Item\n                  style={{ height: 40 }}\n                  labelVariant=\"labelLarge\"\n                  label={t(`hobbies.cultural.${label}`)}\n                  status={value === \"true\" ? \"checked\" : \"unchecked\"}\n                  onPress={() => {\n                    setValue(label, value === \"true\" ? \"false\" : \"true\");\n                    handleUpdate(label);\n                  }}\n                />\n              )}\n            />\n          ))}\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer style={{ gap: 0 }}>\n          <Text variant=\"labelLarge\" style={{ marginBottom: 5 }}>\n            {t(\"hobbies.sport.title\")}\n          </Text>\n          {SportLabels.map((label) => (\n            <Controller<FormValues>\n              key={label}\n              name={label}\n              control={control}\n              render={({ field: { value } }) => (\n                <Checkbox.Item\n                  style={{ height: 40 }}\n                  labelVariant=\"labelLarge\"\n                  label={t(`hobbies.sport.${label}`)}\n                  status={value === \"true\" ? \"checked\" : \"unchecked\"}\n                  onPress={() => {\n                    setValue(label, value === \"true\" ? \"false\" : \"true\");\n                    handleUpdate(label);\n                  }}\n                />\n              )}\n            />\n          ))}\n        </ColumnContainer>\n      </ListContentContainer>\n    </ListAccordion>\n  );\n};\n","import { useContext } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { StringifyProperties } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\nimport {\n  ConsumableProducts,\n  ConsumptionFrequency,\n} from \"@domain/models/everyday-things/consumable-products/ConsumableProducts\";\n\nexport type FormValues = Omit<\n  StringifyProperties<ConsumableProducts>,\n  \"annualFootprint\"\n>;\n\nexport const consumptionOptions: ConsumptionFrequency[] = [\n  \"low\",\n  \"medium\",\n  \"high\",\n];\n\nexport const useConsumableProducts = () => {\n  const storedConsumableProducts = useAppStore(\n    (store) => store.everydayThings.consumableProducts,\n  );\n  const annualFootprint = new ConsumableProducts(storedConsumableProducts)\n    .annualFootprint;\n\n  const { useUpdateEverydayThings } = useContext(UsecasesContext);\n  const { updateConsumableProducts } = useUpdateEverydayThings();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    consumption: storedConsumableProducts.consumption,\n  });\n\n  const { handleUpdate, control, setValue } = useUpdateForm<\n    ConsumableProducts,\n    FormValues\n  >(getDefaultValues(), storedConsumableProducts, updateConsumableProducts);\n\n  return { annualFootprint, control, handleUpdate, setValue };\n};\n","import { View } from \"react-native\";\nimport { useTranslation } from \"react-i18next\";\nimport { RadioButton, Text } from \"react-native-paper\";\nimport { Controller } from \"react-hook-form\";\n\nimport { ListAccordion } from \"@view/screens/profile/components/ListAccordion\";\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport {\n  FormValues,\n  consumptionOptions,\n  useConsumableProducts,\n} from \"./useConsumableProducts\";\nimport { ColumnContainer } from \"@view/screens/profile/components/ColumnContainer\";\n\nexport const ConsumableProductsSection = () => {\n  const { t } = useTranslation([\"everydayThings\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, annualFootprint, setValue } =\n    useConsumableProducts();\n\n  return (\n    <ListAccordion\n      title={t(\"emissions:everydayThings.consumableProducts\")}\n      subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n      icon=\"washing-machine\"\n    >\n      <ListContentContainer>\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"consumableProducts.title\")}</Text>\n          <Controller<FormValues>\n            name=\"consumption\"\n            control={control}\n            render={({ field: { value } }) => (\n              <RadioButton.Group\n                value={value}\n                onValueChange={(newValue) => {\n                  setValue(\"consumption\", newValue);\n                  handleUpdate(\"consumption\");\n                }}\n              >\n                {consumptionOptions.map((option) => (\n                  <View\n                    key={option}\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      gap: 5,\n                    }}\n                  >\n                    <RadioButton value={option} />\n                    <Text>\n                      {t(`consumableProducts.consumptionFrequencies.${option}`)}\n                    </Text>\n                  </View>\n                ))}\n              </RadioButton.Group>\n            )}\n          />\n        </ColumnContainer>\n      </ListContentContainer>\n    </ListAccordion>\n  );\n};\n","import { useContext } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { StringifyProperties } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\nimport {\n  CigarettesWeeklyConsumption,\n  Tobacco,\n} from \"@domain/models/everyday-things/tobacco/Tobacco\";\n\nexport type FormValues = Omit<StringifyProperties<Tobacco>, \"annualFootprint\">;\n\nexport const cigarettesConsumptionOptions: CigarettesWeeklyConsumption[] = [\n  \"none\",\n  \"onePackPerMonth\",\n  \"onePackPerWeek\",\n  \"onePackPerDay\",\n];\n\nexport const useTobacco = () => {\n  const storedTobacco = useAppStore((store) => store.everydayThings.tobacco);\n  const annualFootprint = new Tobacco(storedTobacco).annualFootprint;\n\n  const { useUpdateEverydayThings } = useContext(UsecasesContext);\n  const { updateTobacco } = useUpdateEverydayThings();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    weeklyConsumption: storedTobacco.weeklyConsumption,\n  });\n\n  const { handleUpdate, control, setValue } = useUpdateForm<\n    Tobacco,\n    FormValues\n  >(getDefaultValues(), storedTobacco, updateTobacco);\n\n  return { annualFootprint, control, handleUpdate, setValue };\n};\n","import { View } from \"react-native\";\nimport { useTranslation } from \"react-i18next\";\nimport { RadioButton, Text } from \"react-native-paper\";\nimport { Controller } from \"react-hook-form\";\n\nimport { ListAccordion } from \"@view/screens/profile/components/ListAccordion\";\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport {\n  FormValues,\n  cigarettesConsumptionOptions,\n  useTobacco,\n} from \"./useTobacco\";\nimport { ColumnContainer } from \"@view/screens/profile/components/ColumnContainer\";\n\nexport const TobaccoSection = () => {\n  const { t } = useTranslation([\"everydayThings\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, annualFootprint, setValue } = useTobacco();\n\n  return (\n    <ListAccordion\n      title={t(\"emissions:everydayThings.tobacco\")}\n      subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n      icon=\"smoking\"\n    >\n      <ListContentContainer>\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"tobacco.title\")}</Text>\n          <Controller<FormValues>\n            name=\"weeklyConsumption\"\n            control={control}\n            render={({ field: { value } }) => (\n              <RadioButton.Group\n                value={value}\n                onValueChange={(newValue) => {\n                  setValue(\"weeklyConsumption\", newValue);\n                  handleUpdate(\"weeklyConsumption\");\n                }}\n              >\n                {cigarettesConsumptionOptions.map((option) => (\n                  <View\n                    key={option}\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      gap: 5,\n                    }}\n                  >\n                    <RadioButton value={option} />\n                    <Text>{t(`tobacco.consumptionFrequencies.${option}`)}</Text>\n                  </View>\n                ))}\n              </RadioButton.Group>\n            )}\n          />\n        </ColumnContainer>\n      </ListContentContainer>\n    </ListAccordion>\n  );\n};\n","import { useContext } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { StringifyProperties } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\nimport {\n  OtherProducts,\n  SpendingLevel,\n} from \"@domain/models/everyday-things/other-products/OtherProducts\";\n\nexport type FormValues = Omit<\n  StringifyProperties<OtherProducts>,\n  \"annualFootprint\"\n>;\n\nexport const spendingLevels: SpendingLevel[] = [\"low\", \"medium\", \"high\"];\n\nexport const useOtherProducts = () => {\n  const storedOtherProducts = useAppStore(\n    (store) => store.everydayThings.otherProducts,\n  );\n  const annualFootprint = new OtherProducts(storedOtherProducts)\n    .annualFootprint;\n\n  const { useUpdateEverydayThings } = useContext(UsecasesContext);\n  const { updateOtherProducts } = useUpdateEverydayThings();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    spendingLevel: storedOtherProducts.spendingLevel,\n  });\n\n  const { handleUpdate, control, setValue } = useUpdateForm<\n    OtherProducts,\n    FormValues\n  >(getDefaultValues(), storedOtherProducts, updateOtherProducts);\n\n  return { annualFootprint, control, handleUpdate, setValue };\n};\n","import { View } from \"react-native\";\nimport { useTranslation } from \"react-i18next\";\nimport { RadioButton, Text } from \"react-native-paper\";\nimport { Controller } from \"react-hook-form\";\n\nimport { ListAccordion } from \"@view/screens/profile/components/ListAccordion\";\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport {\n  FormValues,\n  spendingLevels,\n  useOtherProducts,\n} from \"./useOtherProducts\";\nimport { ColumnContainer } from \"@view/screens/profile/components/ColumnContainer\";\n\nexport const OtherProductsSection = () => {\n  const { t } = useTranslation([\"everydayThings\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, annualFootprint, setValue } =\n    useOtherProducts();\n\n  return (\n    <ListAccordion\n      title={t(\"emissions:everydayThings.otherProducts\")}\n      subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n      icon=\"package\"\n    >\n      <ListContentContainer>\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"otherProducts.title\")}</Text>\n          <Controller<FormValues>\n            name=\"spendingLevel\"\n            control={control}\n            render={({ field: { value } }) => (\n              <RadioButton.Group\n                value={value}\n                onValueChange={(newValue) => {\n                  setValue(\"spendingLevel\", newValue);\n                  handleUpdate(\"spendingLevel\");\n                }}\n              >\n                {spendingLevels.map((option) => (\n                  <View\n                    key={option}\n                    style={{\n                      flexDirection: \"row\",\n                      alignItems: \"center\",\n                      gap: 5,\n                    }}\n                  >\n                    <RadioButton value={option} />\n                    <Text>{t(`otherProducts.spendingLevels.${option}`)}</Text>\n                  </View>\n                ))}\n              </RadioButton.Group>\n            )}\n          />\n        </ColumnContainer>\n      </ListContentContainer>\n    </ListAccordion>\n  );\n};\n","import { ScrollView } from \"react-native\";\nimport { Divider, List } from \"react-native-paper\";\n\nimport { ClothesSection } from \"@view/screens/profile/everyday-things/clothes/Clothes\";\nimport { PetsSection } from \"@view/screens/profile/everyday-things/pets/Pets\";\nimport { HouseholdAppliancesSection } from \"@view/screens/profile/everyday-things/household-appliances/HouseholdAppliances\";\nimport { FurnitureSection } from \"@view/screens/profile/everyday-things/furniture/Furniture\";\nimport { DigitalSection } from \"@view/screens/profile/everyday-things/digital/Digital\";\nimport { HobbiesSection } from \"@view/screens/profile/everyday-things/hobbies/Hobbies\";\nimport { ConsumableProductsSection } from \"@view/screens/profile/everyday-things/consumable-products/ConsumableProducts\";\nimport { TobaccoSection } from \"@view/screens/profile/everyday-things/tobacco/Tobacco\";\nimport { OtherProductsSection } from \"@view/screens/profile/everyday-things/other-products/OtherProducts\";\n\nexport const EverydayThingsProfile = () => {\n  return (\n    <ScrollView>\n      <List.Section>\n        <ClothesSection />\n        <Divider />\n        <PetsSection />\n        <Divider />\n        <HouseholdAppliancesSection />\n        <Divider />\n        <FurnitureSection />\n        <Divider />\n        <DigitalSection />\n        <Divider />\n        <HobbiesSection />\n        <Divider />\n        <ConsumableProductsSection />\n        <Divider />\n        <TobaccoSection />\n        <Divider />\n        <OtherProductsSection />\n        <Divider />\n      </List.Section>\n    </ScrollView>\n  );\n};\n","import Icons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport {\n  NativeStackNavigationProp,\n  createNativeStackNavigator,\n} from \"@react-navigation/native-stack\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { Actions } from \"@view/screens/actions/Actions\";\nimport { Comparator } from \"@view/screens/comparator/Comparator\";\nimport { Emissions } from \"@view/screens/emissions/Emissions\";\nimport { Objectives } from \"@view/screens/objectives/Objectives\";\nimport { Profile } from \"@view/screens/profile/Profile\";\nimport { FoodProfile } from \"@view/screens/profile/food/Food\";\nimport { TransportProfile } from \"@view/screens/profile/transport/Transport\";\nimport { HousingProfile } from \"@view/screens/profile/housing/Housing\";\nimport { EverydayThingsProfile } from \"@view/screens/profile/everyday-things/EverydayThings\";\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\ntype RootStackParamList = {\n  Home: undefined;\n  Profile: undefined;\n  TransportProfile: undefined;\n  FoodProfile: undefined;\n  HousingProfile: undefined;\n  EverydayThingsProfile: undefined;\n  PublicServicesProfile: undefined;\n};\n\nexport type AppNavigationProp = NativeStackNavigationProp<RootStackParamList>;\n\nconst iconSize = 24;\n\nexport const AppNavigation = () => {\n  const { t } = useTranslation(\"common\");\n\n  return (\n    <Stack.Navigator initialRouteName=\"Home\">\n      <Stack.Screen\n        name=\"Home\"\n        component={TabNavigator}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen\n        name=\"Profile\"\n        component={Profile}\n        options={{ title: t(\"screens.Profile\") }}\n      />\n      <Stack.Screen\n        name=\"TransportProfile\"\n        component={TransportProfile}\n        options={{ title: t(\"screens.Transport\") }}\n      />\n      <Stack.Screen\n        name=\"FoodProfile\"\n        component={FoodProfile}\n        options={{ title: t(\"screens.Food\") }}\n      />\n      <Stack.Screen\n        name=\"HousingProfile\"\n        component={HousingProfile}\n        options={{ title: t(\"screens.Housing\") }}\n      />\n      <Stack.Screen\n        name=\"EverydayThingsProfile\"\n        component={EverydayThingsProfile}\n        options={{ title: t(\"screens.EverydayThings\") }}\n      />\n      {/*<Stack.Screen\n        name=\"PublicServicesProfile\"\n        component={PublicServicesProfile}\n        options={{ title: t(\"screens.PublicServices\") }}\n      /> */}\n    </Stack.Navigator>\n  );\n};\n\nconst TabNavigator = () => {\n  const { t } = useTranslation(\"common\");\n\n  return (\n    <Tab.Navigator\n      initialRouteName=\"Emissions\"\n      screenOptions={{\n        tabBarLabelPosition: \"below-icon\",\n        tabBarStyle: { height: 55, paddingBottom: 8 },\n        headerShown: false,\n      }}\n    >\n      <Tab.Screen\n        name=\"Emissions\"\n        component={Emissions}\n        options={{\n          title: t(\"screens.Emissions\"),\n          tabBarIcon: ({ focused, color }) => {\n            return (\n              <Icons\n                name={focused ? \"home\" : \"home-outline\"}\n                size={iconSize}\n                color={color}\n              />\n            );\n          },\n        }}\n      />\n      <Tab.Screen\n        name=\"Actions\"\n        component={Actions}\n        options={{\n          title: t(\"screens.Actions\"),\n          tabBarIcon: ({ focused, color }) => {\n            return (\n              <Icons\n                name={focused ? \"check-circle\" : \"check-circle-outline\"}\n                size={iconSize}\n                color={color}\n              />\n            );\n          },\n        }}\n      />\n      <Tab.Screen\n        name=\"Objectifs\"\n        component={Objectives}\n        options={{\n          title: t(\"screens.Objectives\"),\n          tabBarIcon: ({ focused, color }) => {\n            return (\n              <Icons\n                name={focused ? \"medal\" : \"medal-outline\"}\n                size={iconSize}\n                color={color}\n              />\n            );\n          },\n        }}\n      />\n      <Tab.Screen\n        name=\"Comparateur\"\n        component={Comparator}\n        options={{\n          title: t(\"screens.Comparator\"),\n          tabBarIcon: ({ color }) => {\n            return (\n              <Icons name=\"compare-horizontal\" size={iconSize} color={color} />\n            );\n          },\n        }}\n      />\n    </Tab.Navigator>\n  );\n};\n","/* eslint-disable no-undef */\n/* eslint-disable prettier/prettier */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  const isEnvProduction = process.env.NODE_ENV === \"production\";\n  if (isEnvProduction && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport * as fr from \"./fr\";\n\nconst resources = { fr };\n\ni18n.use(initReactI18next).init({\n  resources,\n  lng: \"fr\",\n  interpolation: {\n    escapeValue: false, // react already safes from xss\n  },\n});\n\nexport default i18n;\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { registerRootComponent } from \"expo\";\nimport { useEffect, useState } from \"react\";\nimport {\n  Linking,\n  Platform,\n  SafeAreaView,\n  StyleSheet,\n  View,\n} from \"react-native\";\nimport { ActivityIndicator, PaperProvider } from \"react-native-paper\";\nimport Plausible from \"plausible-tracker\";\n\nimport { AppTheme } from \"./AppTheme\";\nimport { AppNavigation } from \"@common/AppNavigation\";\nimport * as serviceWorkerRegistration from \"./src/serviceWorkerRegistration\";\nimport \"./src/view/translations/i18n\";\n\nconst PERSISTENCE_KEY = \"NAVIGATION_STATE_V1\";\n\nconst plausible = Plausible({\n  domain: \"jessy-bgl.github.io/impact\",\n  apiHost: \"http://jydom.myqnapcloud.com:8001\",\n  trackLocalhost: true,\n});\n\nplausible.enableAutoPageviews();\nplausible.enableAutoOutboundTracking();\n\n// plausible.trackPageview({\n//   trackLocalhost: true,\n//   domain: \"jessy-bgl.github.io\",\n//   url: \"https://jessy-bgl.github.io/impact\",\n//   apiHost: \"http://jydom.myqnapcloud.com:8000\",\n// });\n\nconst App = () => {\n  const [isReady, setIsReady] = useState(!__DEV__);\n  const [initialState, setInitialState] = useState();\n\n  useEffect(() => {\n    const restoreState = async () => {\n      try {\n        const initialUrl = await Linking.getInitialURL();\n        if (__DEV__ || (Platform.OS !== \"web\" && initialUrl == null)) {\n          // Only restore state if there's no deep link and we're not on web\n          const savedStateString = await AsyncStorage.getItem(PERSISTENCE_KEY);\n          const state = savedStateString\n            ? JSON.parse(savedStateString)\n            : undefined;\n          if (state !== undefined) setInitialState(state);\n        }\n      } finally {\n        setIsReady(true);\n      }\n    };\n\n    if (!isReady) restoreState();\n  }, [isReady]);\n\n  if (!isReady) return <ActivityIndicator />;\n\n  return (\n    <PaperProvider theme={AppTheme}>\n      <NavigationContainer\n        theme={AppTheme}\n        initialState={initialState}\n        onStateChange={(state) =>\n          AsyncStorage.setItem(PERSISTENCE_KEY, JSON.stringify(state))\n        }\n      >\n        <SafeAreaView style={styles.container}>\n          <View style={styles.content}>\n            <AppNavigation />\n          </View>\n        </SafeAreaView>\n      </NavigationContainer>\n    </PaperProvider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n  },\n  content: {\n    flex: 1,\n    width: \"100%\",\n    maxWidth: 550,\n  },\n});\n\nexport default registerRootComponent(App);\n\nserviceWorkerRegistration.register();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/impact/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [479], () => (__webpack_require__(1559)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["f","MaterialTheme","_objectSpread","MD3DarkTheme","colors","primary","onPrimary","inversePrimary","AppTheme","merge","NavigationTheme","Actions","t","useTranslation","_jsx","Text","style","textAlign","marginTop","children","ComparatorForMobile","WebView","originWhitelist","source","html","ComparatorForWeb","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","ademeComparator","useRef","useEffect","_ademeComparator$curr4","script","document","createElement","id","src","dataset","type","search","async","onload","_ademeComparator$curr","_ademeComparator$curr2","current","querySelector","remove","setTimeout","_ademeComparator$curr3","setAttribute","appendChild","_jsxs","_Fragment","View","flex","justifyContent","alignItems","ActivityIndicator","size","overflow","ref","visibility","Comparator","Platform","OS","EmissionsDataTable","_ref","footprints","useTheme","DataTable","Header","Title","numeric","Object","values","sort","a","b","footprint","map","emissionsCategory","Row","Cell","category","width","height","borderRadius","backgroundColor","color","flexDirection","background","fontSize","part","EmissionsDistribution","totalFootprint","footprintByCategories","viewBox","VictoryPie","colorScale","_ref2","standalone","radius","innerRadius","labelRadius","labels","data","_ref3","x","icon","y","VictoryLabel","textAnchor","fill","onBackground","pieWidth","pieHeight","text","toFixed","EmissionsEstimationButton","navigate","useNavigation","Button","mode","contentStyle","labelStyle","borderColor","onPress","EmissionsTitle","variant","paddingTop","Clothes","tshirts","shirts","sweatshirts","sweaters","shorts","coats","dresses","pants","shoes","smallItems","bigItems","_classCallCheck","this","_createClass","key","get","Math","round","tshirtsAnnualFootprint","shirtsAnnualFootprint","sweatshirtsAnnualFootprint","sweatersAnnualFootprint","shortsAnnualFootprint","coatsAnnualFootprint","dressesAnnualFootprint","pantsAnnualFootprint","shoesAnnualFootprint","smallItemsAnnualFootprint","bigItemsAnnualFootprint","consumableProductsFootprint","ConsumableProducts","consumption","monthlyFootprint","isAnApartmentDefaultValue","weeksInYear","daysInYear","mobilePhone","camera","homeCinema","laptop","desktopComputer","tablet","television","videoProjector","bluetoothSpeaker","vocalSpeaker","smartWatch","gamingConsole","portableConsole","preservationCoefficient","preservation","Digital","occupants","internetDailyHours","mobilePhones","televisions","laptops","desktopComputers","tablets","videoProjectors","cameras","homeCinemas","bluetoothSpeakers","vocalSpeakers","smartWatches","gamingConsoles","portableConsoles","internetAnnualFootprint","mobilePhonesAnnualFootprint","televisionsAnnualFootprint","laptopsAnnualFootprint","desktopComputersAnnualFootprint","tabletsAnnualFootprint","videoProjectorsAnnualFootprint","camerasAnnualFootprint","homeCinemasAnnualFootprint","bluetoothSpeakersAnnualFootprint","vocalSpeakersAnnualFootprint","smartWatchesAnnualFootprint","gamingConsolesAnnualFootprint","portableConsolesAnnualFootprint","Number","internetHourlyConsumption","wardrobe","couch","mattress","bed","table","chair","smallFurniture","furnitureFootprintPerKg","bigFurniture","woodenGardenFurniture","resinOrMetalGardenFurniture","Furniture","wardrobes","couches","mattresses","beds","tables","chairs","smallFurnitures","bigFurnitures","woodenGardenFurnitures","resinOrMetalGardenFurnitures","wardrobesAnnualFootprint","couchesAnnualFootprint","mattressesAnnualFootprint","bedsAnnualFootprint","tablesAnnualFootprint","chairsAnnualFootprint","smallFurnituresAnnualFootprint","bigFurnituresAnnualFootprint","woodenGardenFurnituresAnnualFootprint","resinOrMetalGardenFurnituresAnnualFootprint","sportClubAnnualFootprint","sdesSportFootprint","fitnessAnnualFootprint","distributedSportAnnualFootprint","mountainAnnualFootprint","Hobbies","concertsAndShows","museumsAndMonuments","editions","music","outdoorIndividualSport","ballSport","waterSport","swimming","martialSport","athletics","gym","riding","golf","winterSport","motorSport","otherSport","sportAnnualFootprint","cultureAnnualFootprint","concertsAndShowsAnnualFootprint","museumsAndMonumentsAnnualFootprint","editionsAnnualFootprint","musicAnnualFootprint","fridge","miniFridge","freezer","washingMachine","dryer","dishWasher","hood","oven","microwaves","hotplates","kettle","coffeeMachine","vacuumCleaner","kitchenRobot","electricLawnMower","HouseholdAppliances","fridges","miniFridges","freezers","washingMachines","dryers","dishWashers","hoods","ovens","hotPlates","kettles","coffeeMachines","vacuumCleaners","kitchenRobots","electricLawnMowers","fridgesAnnualFootprint","miniFridgesAnnualFootprint","freezersAnnualFootprint","washingMachinesAnnualFootprint","dryersAnnualFootprint","dishWashersAnnualFootprint","hoodsAnnualFootprint","ovensAnnualFootprint","microwavesAnnualFootprint","hotPlatesAnnualFootprint","kettlesAnnualFootprint","coffeeMachinesAnnualFootprint","vacuumCleanersAnnualFootprint","kitchenRobotsAnnualFootprint","electricLawnMowersAnnualFootprint","OtherProducts","spendingLevel","spendingLevelCoefficient","petVeterinaryCareFootprint","cat","foodFootprintPerKg","dailyFoodRequirements","foodAnnualFootprint","litterAnnualQuantity","litterFootprintPerKg","litterAnnualFootprint","annualFootprint","dog","petSize","dogDailyFoodRequirements","Pets","smallDogs","mediumDogs","bigDogs","cats","catsAnnualFootprint","dogsAnnualFootprint","smallDogsAnnualFootprint","mediumDogsAnnualFootprint","bigDogsAnnualFootprint","Tobacco","weeklyConsumption","cigarettePacksPerWeek","EverydayThings","pets","clothes","householdAppliances","furniture","digital","hobbies","consumableProducts","tobacco","otherProducts","defaultHotDrinksPerWeek","coffee","tea","chocolate","Drinks","hotDrinksPerWeek","bottledWater","sodaLitersPerWeek","alcoholLitersPerWeek","milkType","hotDrinksAnnualFootprint","coldDrinksAnnualFootprint","coffeeAnnualFootprint","teaAnnualFootprint","chocolateAnnualFootprint","groundCoffeeFootprint","cupOfTeaFootprintWithoutConsumption","cocoaFootprint","milkFootprint","bottledWaterAnnualFootprint","sodaAnnualFootprint","alcoholAnnualFootprint","annualWaterConsumption","MealTypes","BreakfastTypes","Diets","Frequencies","localProductsFootprintReductionRate","frequency","Meals","breakfast","diet","localProducts","seasonalProducts","lunchesAndDinersPerWeek","vegan","vegetarian","whiteMeat","redMeat","fattyFish","whiteFish","lunchesAndDinersPerWeekByDiet","lunchesAndDinersAnnualFootprint","breakfastAnnualFootprint","seasonalProductsBonus","lunchesAndDinersWeeklyFootprint","weeklyFootprint","mealType","mealFootprint","mealFootprintReduction","breakfastFootprint","milkAndCerealsBreakfastFootprint","seasonalFactor","seasonPart","seasonalProductsPart","Waste","quantity","wasteBonuses","noFoodWaste","stopAdvertisingSticker","wasteComposting","wasteFootprint","defaultFootprint","householdWasteFootprint","wasteBonus","_this$wasteBonuses","footprintBonus","Food","meals","drinks","waste","defaultHeatingEnergies","electricity","heatPump","gas","gasCylinder","propane","bioGas","fuel","wood","heatNetwork","surfaces","houses","appartements","living","energies","electricityPart","gasPart","fuelPart","woodPart","heatNetworkPart","bioGasPart","cooking","perSquareMeter","carbonBasedEmissionFactor","butane","cylinder","energy","cylinderPerBottle","propanePerKg","footprintPerSquareMeter","heating","hotWater","emissionFactor","perLiter","perKiloWattHeure","perLog","logs","pellets","logFootprintPerSquareMeter","pelletFootprintPerSquareMeter","electricityWithoutHeating","carbonIntensity","consuptionPerSquareMeter","all","airConditioner","annualLeak","endOfLifeLeak","endOfLifeLeakAmortized","construction","constructionAmortized","total","HeatingEnergiesLabels","WoodTypes","Energy","annualElectricityConsumption","heatingEnergies","livingSpace","airConditioners","isAnApartment","woodType","defaultElectricityAnnualkWhConsumption","heatingAnnualFootprint","electricityAnnualFootprint","airConditioningAnnualFootprint","noHeating","airConditionersFootprint","some","gasAnnualFootprint","gasCylinderAnnualFootprint","propaneAnnualFootprint","fuelAnnualFootprint","woodAnnualFootprint","heatNetworkAnnualFootprint","gasAnnualKWhConsumption","gasCylinderAnnualBottleConsumption","propaneAnnualKgConsumption","fuelAnnualLitersConsumption","woodLogAnnualFootprint","woodPelletAnnualFootprint","woodLogAnnualStereConsumption","woodPelletAnnualkWhConsumption","heatNetworkAnnualkWhConsumption","Home","ageInYears","isEcoBuilt","constructionAnnualFootprint","constructionAnnualFootprintPerSquareMeter","footprintByLivingSpace","defaultHolidayAccomodations","hotel","camping","youthHostel","rentals","exchange","averageHotelNightsPerYear","averageCampingNightsPerYear","averageYouthHostelNightsPerYear","averageRentalNightsPerYear","averageExchangeNightsPerYear","Leisure","hasIngroundPool","holidayAccomodations","hotelNightsPerYear","campingNightsPerYear","youthHostelNightsPerYear","rentalNightsPerYear","exchangeNightsPerYear","poolAnnualFootprint","holidaysAnnualFootprint","noHolidayAccomodation","holidaysTotalFootprint","accomodation","hotelFootprint","campingFootprint","youthHostelFootprint","rentalsFootprint","exchangeFootprint","campingFootprintPerNight","poolColdWaterFootprint","Housing","home","leisure","PublicServices","Boat","_ref$usage","usage","_ref$hoursPerYear","hoursPerYear","value","defaultSize","defaultEngine","defaultFuelType","defaultAverageFuelConsumption","small","medium","vul","sedan","suv","defaultAverageFootPrintPerLiter","diesel","gasoline","biofuels","averageCarKmPerYear","thermalMaintenanceFootprint","g45","thermalCarManufacturingFootprint","hybridCarManufacturingFootprint","electricCarManufacturingFootprint","carSizes","carEngines","fuelTypes","Car","_ref$regularUser","regularUser","_ref$kmPerYear","kmPerYear","_ref$age","age","_ref$size","_ref$engine","engine","_ref$fuelType","fuelType","_ref$averageFuelConsu","averageFuelConsumption","_ref$averagePassenger","averagePassengers","lifetime","floor","regularUserFootprint","nonRegularUserFootprint","carUseFootprint","amortizedManufacturingFootprint","manufacturingFootprint","rentalFactor","footprintPerKm","footprintBasePerKm","thermalCarFootprint","weightedMaintenanceFootprint","airConditionerFootprint","fluorinatedGasEmissions","amortization","defaultAverageSpeed","defaultAverageFootprintPerKm","Plane","_ref$hoursPerYearInSh","hoursPerYearInShortHaul","_ref$hoursPerYearInMe","hoursPerYearInMediumHaul","_ref$hoursPerYearInLo","hoursPerYearInLongHaul","shortHaulFootprint","mediumHaulFootprint","longHaulFootprint","PublicTransport","_ref$hoursPerYearInTr","hoursPerYearInTrain","_ref$hoursPerWeekInMe","hoursPerWeekInMetro","_ref$hoursPerWeekInBu","hoursPerWeekInBus","metroFootprintPerKm","busFootprintPerKm","trainAnnualFootprint","metroWeekFootprint","busWeekFootprint","defaultTwoWheelerType","twoWheelerDefaultFootprint","thermalScooter","electricScooter","motorbikeLT250","motorbikeGT250","TwoWheelerTypes","TwoWheeler","_ref$type","maintenanceFootprint","Transport","car","twoWheeler","plane","boat","publicTransport","EmissionsInMemoryRepository","transport","food","housing","everydayThings","publicServices","useAppStore","create","devtools","persist","name","storage","createJSONStorage","AsyncStorage","persistedState","currentState","deepMerge","appStoreActions","getState","setState","state","EmissionsStoreRepository","storedTransport","storedFood","storedHousing","storedEverydayThings","createUseComputeTotalAnnualFootprint","emissionsRepository","computeTotalAnnualFootprint","fetchTransport","fetchFood","fetchHousing","fetchEverydayThings","fetchPublicServices","createUseFetchFood","createUseFetchPublicServices","createUseFetchTransport","createUseUpdateFood","updateMeals","newMeals","newFood","updateFood","updateDrinks","newDrinks","updateWaste","newWaste","createUseUpdateTransport","updateCar","newCar","initValuesForNonRegularUser","newTransport","updateTransport","updateTwoWheeler","newTwoWheeler","resetValues","updatePlane","newPlane","updateBoat","newBoat","updatePublicTransport","newPublicTransport","createUseFetchHousing","createUseUpdateHousing","updateHome","newHome","newHousing","newEverydayThings","updateHousing","updateEverydayThings","updateEnergy","newEnergy","updateLeisure","newLeisure","createUseFetchEverydayThings","createUseUpdateEverydayThings","updatePets","newPets","updateClothes","newClothes","updateHouseholdAppliances","newHouseholdAppliances","updateFurniture","newFurniture","updateDigital","newDigital","updateHobbies","newHobbies","updateConsumableProducts","newConsumableProducts","updateTobacco","newTobacco","updateOtherProducts","newOtherProducts","usecases","repositories","useFetchTransport","useUpdateTransport","useFetchFood","useUpdateFood","useFetchHousing","useUpdateHousing","useFetchEverydayThings","useUpdateEverydayThings","useFetchPublicServices","useComputeTotalAnnualFootprint","initUsecases","UsecasesContext","createContext","FootprintCategories","FootprintByCategory","_this","image","materialIcon","computePart","FootprintCategoryTransport","FootprintCategoryFood","FootprintCategoryHousing","FootprintCategoryEverydayThings","FootprintCategoryPublicServices","_FootprintByCategory","_inherits","_super","_createSuper","_this2","call","TRANSPORT","transportImage","_FootprintByCategory2","_super2","_this3","FOOD","foodImage","_FootprintByCategory3","_super3","_this4","HOUSING","housingImage","_FootprintByCategory4","_super4","_this5","EVERYDAY_THINGS","everydayThingsImage","_FootprintByCategory5","_super5","_this6","PUBLIC_SERVICES","publicServicesImage","useFootprints","appStore","store","_useContext","useContext","useMemo","totalAnnualFootprint","forTransport","forFood","forHousing","forEverydayThings","forPublicServices","Emissions","_useFootprints","ScrollView","contentContainerStyle","marginBottom","Objectives","ProfileCategoryCard","title","footprintCategory","onClick","Card","styles","card","subtitle","left","props","Avatar","right","label","borderWidth","paddingRight","Cover","resizeMode","uri","StyleSheet","Profile","_useProfile","transportFootprint","housingFootprint","foodFootprint","everydayThingsFootprint","publicServicesFootprint","useProfile","container","padding","gap","MilkTypes","listContentContainer","paddingLeft","rowContainer","columnContainer","divider","ColumnContainer","ListContentContainer","ListItemDivider","Divider","RowContainer","ListTitle","ListAccordion","List","NumericInput","_props$positive","_props$dense","_props$mode","positive","dense","min","undefined","TextInput","keyboardType","onChangeText","test","includes","onBlur","e","target","toString","convertStringToType","targetType","JSON","parse","Error","useUpdateForm","defaultValues","storedData","updateUsecase","_useForm","useForm","getValues","rest","_objectWithoutProperties","_excluded","handleUpdate","field","stringValue","updatedData","_defineProperty","DrinksSection","_useDrinks","storedDrinks","_useUpdateForm","stringify","chocolatePerWeek","coffeePerWeek","teaPerWeek","control","watch","setValue","disableMilkSelection","useDrinks","Controller","render","_ref$field","onChange","_ref2$field","_ref3$field","_ref4","_ref4$field","SegmentedButtons","density","onValueChange","buttons","disabled","_ref5","_ref5$field","_ref6","_ref6$field","_ref7","_ref7$field","MealsSection","_useMeals","storedMeals","storedBreakfast","milkAndCerealsBreakfast","useMeals","slice","_ref8","_ref8$field","_ref9","_ref9$field","WasteSection","_useWaste","storedWaste","newWasteBonuses","disableWasteBonuses","useWaste","RadioButton","Group","newValue","Checkbox","Item","labelVariant","status","FoodProfile","BoatSection","_useBoat","storedBoat","storedBoatUsage","getDefaultValues","reset","useBoat","Affix","CarSection","_useCar","storedCar","storedRegularUser","useCar","Icon","HelperText","alignSelf","OtherSection","PlaneSection","_usePlane","storedPlane","storedPlaneUsage","usePlane","PublicTransportSection","_usePublicTransport","storedPublicTransport","usePublicTransport","TwoWheelerSection","_useTwhoWheeler","storedTwoWheeler","storedTwoWheelerUsage","useTwhoWheeler","TransportProfile","HomeSection","_useHome","storedHome","useHome","EnergySection","_useEnergy","storedEnergy","newHeatingEnergies","showBioGas","showWoodType","useEnergy","filter","HolidayAccomodationLabels","LeisureSection","_useLeisure","storedLeisure","newHolidayAccomodations","disablePool","showCamping","showExchange","showHotel","showRentals","showYouthHostel","useLeisure","HousingProfile","ClothesLabels","ClothesSection","_useClothes","storedClothes","useClothes","PetsLabels","PetsSection","_usePets","storedPets","usePets","HouseholdAppliancesLabels","preservationOptions","HouseholdAppliancesSection","_useHouseholdApplianc","storedHouseholdAppliances","useHouseholdAppliances","option","FurnitureLabels","FurnitureSection","_useFurniture","storedFurniture","useFurniture","DigitalLabels","DigitalSection","_useDigital","storedDigital","useDigital","SportLabels","CulturalLabels","HobbiesSection","_useHobbies","storedHobbies","useHobbies","consumptionOptions","ConsumableProductsSection","_useConsumableProduct","storedConsumableProducts","useConsumableProducts","cigarettesConsumptionOptions","TobaccoSection","_useTobacco","storedTobacco","useTobacco","spendingLevels","OtherProductsSection","_useOtherProducts","storedOtherProducts","useOtherProducts","EverydayThingsProfile","Stack","createNativeStackNavigator","Tab","createBottomTabNavigator","AppNavigation","Navigator","initialRouteName","Screen","component","TabNavigator","options","headerShown","screenOptions","tabBarLabelPosition","tabBarStyle","paddingBottom","tabBarIcon","focused","Icons","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","resources","fr","i18n","initReactI18next","init","lng","interpolation","escapeValue","PERSISTENCE_KEY","plausible","Plausible","domain","apiHost","trackLocalhost","enableAutoPageviews","enableAutoOutboundTracking","content","maxWidth","registerRootComponent","isReady","setIsReady","_useState3","_useState4","initialState","setInitialState","restoreState","_asyncToGenerator","initialUrl","Linking","getInitialURL","savedStateString","getItem","apply","arguments","PaperProvider","theme","NavigationContainer","onStateChange","setItem","SafeAreaView","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","ns","def","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}