{"version":3,"file":"static/js/main.7a26c701.js","mappings":"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","sources":["AppTheme.ts","src/data/store/store.ts","src/view/screens/actions/Actions.tsx","src/view/screens/comparator/ComparatorForMobile.tsx","src/view/screens/comparator/ComparatorForWeb.tsx","src/view/screens/comparator/Comparator.tsx","src/view/screens/emissions/EmissionsDataTable.tsx","src/view/screens/emissions/EmissionsDistribution.tsx","src/view/screens/emissions/EmissionsEstimationButton.tsx","src/view/screens/emissions/EmissionsTitle.tsx","src/domain/models/constants.ts","src/domain/models/food/drinks/constants.ts","src/domain/models/food/drinks/Drinks.ts","src/domain/models/food/meals/constants.ts","src/domain/models/food/meals/types.ts","src/domain/models/food/meals/Meals.ts","src/domain/models/food/waste/Waste.ts","src/domain/models/food/waste/constants.ts","src/domain/models/food/Food.ts","src/domain/models/public-services/PublicServices.ts","src/domain/models/transport/boat/Boat.ts","src/domain/models/transport/boat/constants.ts","src/domain/models/transport/car/constants.ts","src/domain/models/transport/car/Car.ts","src/domain/models/transport/plane/constants.ts","src/domain/models/transport/plane/Plane.ts","src/domain/models/transport/public-transport/PublicTransport.ts","src/domain/models/transport/public-transport/constants.ts","src/domain/models/transport/two-wheeler/constants.ts","src/domain/models/transport/two-wheeler/TwoWheeler.ts","src/domain/models/transport/Transport.ts","src/data/repositories/EmissionsInMemoryRepository.ts","src/data/store/storeActions.ts","src/data/repositories/EmissionsStoreRepository.ts","src/domain/usecases/computeTotalAnnualFootprint.ts","src/domain/usecases/fetchFood.ts","src/domain/usecases/fetchPublicServices.ts","src/domain/usecases/fetchTransport.ts","src/domain/usecases/updateFood.ts","src/domain/usecases/updateTransport.ts","src/common/UsecasesContext.ts","src/domain/models/Categories.ts","src/view/view-models/Footprint.ts","src/view/view-models/useFootprints.ts","src/view/screens/emissions/Emissions.tsx","src/view/screens/objectives/Objectives.tsx","src/view/screens/profile/ProfileCategoryCard.tsx","src/view/screens/profile/Profile.tsx","src/view/screens/profile/useProfile.ts","src/domain/models/food/types.ts","src/view/screens/profile/components/styles.ts","src/view/screens/profile/components/ColumnContainer.tsx","src/view/screens/profile/components/ListContentContainer.tsx","src/view/screens/profile/components/ListItemDivider.tsx","src/view/screens/profile/components/ListTitle.tsx","src/view/screens/profile/components/RowContainer.tsx","src/types/utils.ts","src/view/screens/profile/utils/useUpdateForm.ts","src/view/components/forms/NumericInput.tsx","src/view/screens/profile/food/drinks/DrinksSection.tsx","src/view/screens/profile/food/drinks/useDrinks.tsx","src/view/screens/profile/food/meals/MealsSection.tsx","src/view/screens/profile/food/meals/useMeals.ts","src/view/screens/profile/food/waste/WasteSection.tsx","src/view/screens/profile/food/waste/useWaste.ts","src/view/screens/profile/food/Food.tsx","src/view/screens/profile/transport/boat/BoatSection.tsx","src/view/screens/profile/transport/boat/useBoat.ts","src/view/screens/profile/transport/car/CarSection.tsx","src/view/screens/profile/transport/car/useCar.ts","src/view/screens/profile/transport/other/OtherSection.tsx","src/view/screens/profile/transport/plane/PlaneSection.tsx","src/view/screens/profile/transport/plane/usePlane.ts","src/view/screens/profile/transport/public-transport/PublicTransportSection.tsx","src/view/screens/profile/transport/public-transport/usePublicTransport.ts","src/view/screens/profile/transport/two-wheeler/TwoWheelerSection.tsx","src/view/screens/profile/transport/two-wheeler/useTwoWheeler.ts","src/view/screens/profile/transport/Transport.tsx","src/common/AppNavigation.tsx","src/serviceWorkerRegistration.js","src/view/translations/i18n.js","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { DarkTheme as NavigationTheme } from \"@react-navigation/native\";\nimport merge from \"deepmerge\";\nimport { MD3DarkTheme } from \"react-native-paper\";\n\nconst MaterialTheme = {\n  ...MD3DarkTheme,\n  colors: {\n    ...MD3DarkTheme.colors,\n    primary: \"#59B158\",\n    onPrimary: \"#111\",\n    inversePrimary: \"#fff\",\n  },\n};\n\nexport const AppTheme = merge(NavigationTheme, MaterialTheme);\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport deepMerge from \"deepmerge\";\nimport { create } from \"zustand\";\nimport { createJSONStorage, devtools, persist } from \"zustand/middleware\";\n\nimport { Food } from \"@domain/models/food/Food\";\nimport { Transport } from \"@domain/models/transport/Transport\";\n\nexport type AppState = {\n  transport: Transport;\n  food: Food;\n};\n\nconst appStore = (): AppState => ({\n  transport: new Transport({}),\n  food: new Food({}),\n});\n\nconst middlewares = (f: any) =>\n  devtools(\n    persist<AppState>(f, {\n      name: \"app-storage\",\n      storage: createJSONStorage(() => AsyncStorage),\n      merge: (persistedState, currentState) =>\n        deepMerge(currentState, persistedState as AppState),\n    }),\n  );\n\nexport const useAppStore = create<\n  AppState,\n  [[\"zustand/devtools\", never], [\"zustand/persist\", unknown]]\n>(middlewares(appStore));\n","import { useTranslation } from \"react-i18next\";\nimport { Text } from \"react-native-paper\";\n\nexport const Actions = () => {\n  const { t } = useTranslation([\"common\"]);\n\n  return (\n    <Text style={{ textAlign: \"center\", marginTop: 10 }}>\n      {t(\"comingSoon\")}\n    </Text>\n  );\n};\n","import WebView from \"react-native-webview\";\n\nexport const ComparatorForMobile = () => {\n  return (\n    <WebView\n      originWhitelist={[\"*\"]}\n      source={{\n        html: `<iFrame src='<script id=\"datagir-impact-co2\" src=\"https://impactco2.fr/iframe.js\" data-type=\"convertisseur\" data-search=\"?theme=night\"></script>' />`,\n      }}\n    />\n  );\n};\n","import { useEffect, useRef, RefObject, useState } from \"react\";\nimport { View } from \"react-native\";\nimport { ActivityIndicator } from \"react-native-paper\";\n\nexport const ComparatorForWeb = () => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  const ademeComparator: RefObject<HTMLDivElement> | null = useRef(null);\n\n  useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.id = \"datagir-impact-co2\";\n    script.src = \"https://impactco2.fr/iframe.js\";\n    script.dataset.type = \"convertisseur\";\n    script.dataset.search = \"?theme=night\";\n    script.async = true;\n    script.onload = () => {\n      ademeComparator.current?.querySelector(\"div\")?.remove();\n      setTimeout(() => {\n        setIsLoading(false);\n        ademeComparator.current?.setAttribute(\"style\", \"visibility: visible\");\n      }, 500);\n    };\n    ademeComparator.current?.appendChild(script);\n  }, []);\n\n  return (\n    <>\n      {isLoading && (\n        <View\n          style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\n        >\n          <ActivityIndicator size=\"large\" />\n        </View>\n      )}\n      <div style={{ overflow: \"auto\" }}>\n        <div ref={ademeComparator} style={{ visibility: \"hidden\" }} />\n      </div>\n    </>\n  );\n};\n","import { Platform } from \"react-native\";\n\nimport { ComparatorForMobile } from \"@view/screens/comparator/ComparatorForMobile\";\nimport { ComparatorForWeb } from \"@view/screens/comparator/ComparatorForWeb\";\n\nexport const Comparator = () =>\n  Platform.OS === \"web\" ? <ComparatorForWeb /> : <ComparatorForMobile />;\n","import { useTranslation } from \"react-i18next\";\nimport { View } from \"react-native\";\nimport { DataTable, Text, useTheme } from \"react-native-paper\";\n\nimport { Footprints } from \"@view/view-models/Footprint\";\n\ntype Props = {\n  footprints: Footprints;\n};\n\nexport const EmissionsDataTable = ({ footprints }: Props) => {\n  const { t } = useTranslation([\"emissions\", \"common\"]);\n  const { colors } = useTheme();\n\n  return (\n    <DataTable>\n      <DataTable.Header>\n        <DataTable.Title>{t(\"category\")}</DataTable.Title>\n        <DataTable.Title numeric>{t(\"annualFootprint\")}</DataTable.Title>\n        <DataTable.Title numeric>{t(\"part\")}</DataTable.Title>\n      </DataTable.Header>\n\n      {Object.values(footprints)\n        .sort((a, b) => b.footprint - a.footprint)\n        .map((emissionsCategory) => (\n          <DataTable.Row key={emissionsCategory.category}>\n            <DataTable.Cell style={{ alignItems: \"center\" }}>\n              {t(`categories.${emissionsCategory.category}`)}\n            </DataTable.Cell>\n\n            <DataTable.Cell numeric>\n              {emissionsCategory.footprint} {t(\"common:footprintKg\")}\n            </DataTable.Cell>\n\n            <DataTable.Cell numeric>\n              <View\n                style={{\n                  width: 30,\n                  height: 30,\n                  borderRadius: 30 / 2,\n                  backgroundColor: emissionsCategory.color,\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Text style={{ color: colors.background, fontSize: 12 }}>\n                  {emissionsCategory.part}%\n                </Text>\n              </View>\n            </DataTable.Cell>\n          </DataTable.Row>\n        ))}\n    </DataTable>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport { useTheme } from \"react-native-paper\";\nimport { VictoryLabel, VictoryPie } from \"victory\";\n\nimport { Footprints } from \"@view/view-models/Footprint\";\n\nconst pieWidth = 250;\nconst pieHeight = 250;\n\ntype Props = {\n  footprints: Footprints;\n  totalFootprint: number;\n};\n\nexport const EmissionsDistribution = ({\n  footprints,\n  totalFootprint,\n}: Props) => {\n  const { t } = useTranslation(\"emissions\");\n  const { colors } = useTheme();\n  const footprintByCategories = Object.values(footprints);\n\n  return (\n    <svg viewBox={`0 0 ${pieWidth} ${pieHeight}`}>\n      <VictoryPie\n        colorScale={footprintByCategories.map(({ color }) => color)}\n        standalone={false}\n        width={pieWidth}\n        height={pieHeight}\n        radius={110}\n        innerRadius={60}\n        labelRadius={75}\n        style={{ labels: { fontSize: 17 } }}\n        data={footprintByCategories.map(({ icon, footprint }) => ({\n          x: icon,\n          y: footprint,\n        }))}\n      />\n      <VictoryLabel\n        textAnchor=\"middle\"\n        style={{ fontSize: 20, fill: colors.onBackground }}\n        x={pieWidth / 2}\n        y={pieHeight / 2}\n        text={`${(totalFootprint / 1000).toFixed(2)}\\ntCO2e/${t(\"year\")}`}\n      />\n    </svg>\n  );\n};\n","import { useNavigation } from \"@react-navigation/native\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button, useTheme } from \"react-native-paper\";\n\nimport { AppNavigationProp } from \"@common/AppNavigation\";\n\nexport const EmissionsEstimationButton = () => {\n  const { t } = useTranslation(\"emissions\");\n  const { colors } = useTheme();\n  const { navigate } = useNavigation<AppNavigationProp>();\n\n  return (\n    <Button\n      icon=\"grass\"\n      mode=\"contained\"\n      textColor=\"white\"\n      contentStyle={{ height: 45 }}\n      labelStyle={{ color: colors.onPrimary }}\n      onPress={() => navigate(\"Profile\")}\n    >\n      {t(\"estimate\")}\n    </Button>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport { Text } from \"react-native-paper\";\n\nexport const EmissionsTitle = () => {\n  const { t } = useTranslation(\"emissions\");\n\n  return (\n    <Text variant=\"titleLarge\" style={{ paddingTop: 10, textAlign: \"center\" }}>\n      {t(\"impactDistributionTitle\")}\n    </Text>\n  );\n};\n","export const weeksInYear = 52;\n\nexport const daysInYear = 365;\n","import { daysInYear } from \"@domain/models/constants\";\nimport { HotDrinksPerWeek } from \"@domain/models/food/drinks/Drinks\";\nimport { MilkType } from \"@domain/models/food/types\";\n\nexport const defaultHotDrinksPerWeek: HotDrinksPerWeek = {\n  coffee: 7,\n  tea: 0,\n  chocolate: 0,\n};\n\n// https://agribalyse.ademe.fr/app/aliments/18003#Caf%C3%A9,_moulu\nconst groundCoffeeFootprint = 10.09; // kgCO2eq/kg\n\n// we assume that a cup of coffee contains on average 12 grams of ground coffee\nconst defaultCupOfCoffeeQuantity = 0.012; // kg\n\nexport const cupOfCoffeeFootprint =\n  groundCoffeeFootprint * defaultCupOfCoffeeQuantity;\n\n// https://agribalyse.ademe.fr/app/aliments/18020#Th%C3%A9_infus%C3%A9,_non_sucr%C3%A9\nconst brewedTeaFootprint = 0.04;\n\n// https://agribalyse.ademe.fr/app/aliments/18020#Th%C3%A9_infus%C3%A9,_non_sucr%C3%A9\nconst brewedTeaFootprintPart = 0.25;\n\nconst cupOfTeaFootprintWithoutConsumption =\n  brewedTeaFootprint * (1 - brewedTeaFootprintPart);\n\nconst defaultCupOfTeaQuantity = 0.25; // kg\n\nexport const cupOfTeaFootprint =\n  cupOfTeaFootprintWithoutConsumption * defaultCupOfTeaQuantity;\n\n// https://agribalyse.ademe.fr/app/aliments/18100#Cacao,_non_sucr%C3%A9,_poudre_soluble\nconst cocoaFootprint = 27.06;\n\nconst defaultCocoaQuantityPerCup = 0.02; // kg\n\nconst defaultMilkQuantityPerCup = 0.2; // kg\n\nconst milkFootprint = (milkType: MilkType): number => {\n  switch (milkType) {\n    case \"cow\":\n      // https://agribalyse.ademe.fr/app/aliments/19042#Lait_demi-%C3%A9cr%C3%A9m%C3%A9,_pasteuris%C3%A9\n      return 1.32;\n    case \"soy\":\n      // https://agribalyse.ademe.fr/app/aliments/18900#Boisson_au_soja,_nature\n      return 0.44;\n    case \"oat\":\n      // https://agribalyse.ademe.fr/app/aliments/18905#Boisson_à_base_d'avoine,_nature\n      return 0.54;\n  }\n};\n\nexport const cupOfChocolateFootprint = (milkType: MilkType): number =>\n  cocoaFootprint * defaultCocoaQuantityPerCup +\n  milkFootprint(milkType) * defaultMilkQuantityPerCup;\n\n// https://agribalyse.ademe.fr/app/aliments/18430#Eau_embouteillée_de_source\nconst bottledWaterFootprint = 0.27;\n\nconst annualWaterConsumption = 1.5 * daysInYear;\n\nexport const bottledWaterAnnualFootprint =\n  annualWaterConsumption * bottledWaterFootprint;\n\n// https://agribalyse.ademe.fr/app/aliments/18037#Cola,_sucr%C3%A9,_avec_%C3%A9dulcorants\n// https://agribalyse.ademe.fr/app/aliments/2069#Jus_multifruit,_%C3%A0_base_de_concentr%C3%A9,_standard\n// https://agribalyse.ademe.fr/app/aliments/18058#Boisson_pr%C3%A9par%C3%A9e_%C3%A0_partir_de_sirop_%C3%A0_diluer_type_menthe,_fraise,_etc,_sucr%C3%A9,_dilu%C3%A9_dans_l'eau\nexport const sweetDrinkCoef = (0.51 + 0.91 + 0.1) / 3;\n\n// https://agribalyse.ademe.fr/app/aliments/5001#Bi%C3%A8re_%22coeur_de_march%C3%A9%22_(4-5%C2%B0_alcool)\n// https://agribalyse.ademe.fr/app/aliments/5215#Vin_blanc_sec\n// https://agribalyse.ademe.fr/app/aliments/1012#Cocktail_%C3%A0_base_de_rhum\nexport const alcoholDrinkCoef = (1.12 + 1.22 + 0.91) / 3;\n","import { weeksInYear } from \"@domain/models/constants\";\nimport { MilkType } from \"@domain/models/food/types\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\nimport {\n  alcoholDrinkCoef,\n  bottledWaterAnnualFootprint,\n  cupOfChocolateFootprint,\n  cupOfCoffeeFootprint,\n  cupOfTeaFootprint,\n  defaultHotDrinksPerWeek,\n  sweetDrinkCoef,\n} from \"./constants\";\n\nexport type HotDrink = \"coffee\" | \"tea\" | \"chocolate\";\nexport const HotDrinks: HotDrink[] = [\"coffee\", \"tea\", \"chocolate\"];\n\nexport type HotDrinksPerWeek = Record<HotDrink, number>;\n\ntype Props = {\n  hotDrinksPerWeek?: HotDrinksPerWeek;\n  bottledWater?: boolean;\n  sodaLitersPerWeek?: number;\n  alcoholLitersPerWeek?: number;\n  milkType?: MilkType;\n};\n\nexport class Drinks implements WithAnnualFootprint {\n  hotDrinksPerWeek: HotDrinksPerWeek;\n  bottledWater: boolean;\n  sodaLitersPerWeek: number;\n  alcoholLitersPerWeek: number;\n  milkType: MilkType;\n\n  constructor({\n    hotDrinksPerWeek,\n    bottledWater,\n    sodaLitersPerWeek,\n    alcoholLitersPerWeek,\n    milkType,\n  }: Props) {\n    this.hotDrinksPerWeek = hotDrinksPerWeek ?? defaultHotDrinksPerWeek;\n    this.bottledWater = bottledWater ?? true;\n    this.sodaLitersPerWeek = sodaLitersPerWeek ?? 0;\n    this.alcoholLitersPerWeek = alcoholLitersPerWeek ?? 0;\n    this.milkType = milkType ?? \"cow\";\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      this.hotDrinksAnnualFootprint + this.coldDrinksAnnualFootprint,\n    );\n  }\n\n  private get hotDrinksAnnualFootprint(): number {\n    return (\n      this.coffeeAnnualFootprint +\n      this.teaAnnualFootprint +\n      this.chocolateAnnualFootprint\n    );\n  }\n\n  private get coffeeAnnualFootprint(): number {\n    return this.hotDrinksPerWeek.coffee * weeksInYear * cupOfCoffeeFootprint;\n  }\n\n  private get teaAnnualFootprint(): number {\n    return this.hotDrinksPerWeek.tea * weeksInYear * cupOfTeaFootprint;\n  }\n\n  private get chocolateAnnualFootprint(): number {\n    return (\n      this.hotDrinksPerWeek.chocolate *\n      weeksInYear *\n      cupOfChocolateFootprint(this.milkType)\n    );\n  }\n\n  private get coldDrinksAnnualFootprint(): number {\n    return (\n      this.bottledWaterAnnualFootprint +\n      this.sodaAnnualFootprint +\n      this.alcoholAnnualFootprint\n    );\n  }\n\n  private get bottledWaterAnnualFootprint(): number {\n    if (!this.bottledWater) return 0;\n    return bottledWaterAnnualFootprint;\n  }\n\n  private get sodaAnnualFootprint(): number {\n    return this.sodaLitersPerWeek * weeksInYear * sweetDrinkCoef;\n  }\n\n  private get alcoholAnnualFootprint(): number {\n    return this.alcoholLitersPerWeek * weeksInYear * alcoholDrinkCoef;\n  }\n}\n","import { MilkType } from \"@domain/models/food/types\";\nimport {\n  Diet,\n  Frequency,\n  LunchesAndDinersPerWeek,\n} from \"@domain/models/food/meals/types\";\n\n// https://nosgestesclimat.fr/documentation/alimentation/plats\n// https://www.bilans-ges.ademe.fr/documentation/UPLOAD_DOC_FR/index.htm?repas.htm\nexport const lunchesAndDinersPerWeekByDiet = (\n  diet: Diet,\n): LunchesAndDinersPerWeek => {\n  switch (diet) {\n    case \"vegan\": {\n      return {\n        vegan: 14,\n        vegetarian: 0,\n        whiteMeat: 0,\n        redMeat: 0,\n        fattyFish: 0,\n        whiteFish: 0,\n      };\n    }\n    case \"vegetarian\": {\n      return {\n        vegan: 3,\n        vegetarian: 11,\n        whiteMeat: 0,\n        redMeat: 0,\n        fattyFish: 0,\n        whiteFish: 0,\n      };\n    }\n    case \"littleMeatConsumer\": {\n      return {\n        vegan: 1,\n        vegetarian: 7,\n        whiteMeat: 4,\n        redMeat: 0,\n        fattyFish: 1,\n        whiteFish: 1,\n      };\n    }\n    case \"regularMeatConsumer\": {\n      return {\n        vegan: 0,\n        vegetarian: 4,\n        whiteMeat: 6,\n        redMeat: 2,\n        fattyFish: 1,\n        whiteFish: 1,\n      };\n    }\n    case \"heavyMeatConsumer\": {\n      return {\n        vegan: 0,\n        vegetarian: 0,\n        whiteMeat: 6,\n        redMeat: 6,\n        fattyFish: 1,\n        whiteFish: 1,\n      };\n    }\n  }\n};\n\n// https://docs.google.com/spreadsheets/d/1SVYvBaaYDOUDcg5jX0eZFEColnWWIL8PCLMGrPR000o/edit#gid=1694091424\nexport const veganMealFootprint = 0.785;\n\n// https://docs.google.com/spreadsheets/d/1SVYvBaaYDOUDcg5jX0eZFEColnWWIL8PCLMGrPR000o/edit#gid=1694091424\nexport const vegetarianMealFootprint = 1.115;\n\n// https://docs.google.com/spreadsheets/d/1SVYvBaaYDOUDcg5jX0eZFEColnWWIL8PCLMGrPR000o/edit#gid=1200865486\nexport const whiteMeatMealFootprint = 2.098;\n\n// https://docs.google.com/spreadsheets/d/1SVYvBaaYDOUDcg5jX0eZFEColnWWIL8PCLMGrPR000o/edit#gid=1200865486\nexport const redMeatMealFootprint = 5.51;\n\n// https://docs.google.com/spreadsheets/d/1SVYvBaaYDOUDcg5jX0eZFEColnWWIL8PCLMGrPR000o/edit#gid=731092178\nexport const fishMealFootprint = 1.63;\n\n// https://docs.google.com/spreadsheets/d/1SVYvBaaYDOUDcg5jX0eZFEColnWWIL8PCLMGrPR000o/edit#gid=731092178\nexport const whiteFishMealFootprint = 2.368;\n\nexport const continentalBreakfastFootprint = 0.289;\n\nexport const milkAndCerealsBreakfastFootprint = (milkType: MilkType) => {\n  switch (milkType) {\n    case \"cow\": {\n      return 0.468;\n    }\n    case \"oat\": {\n      return 0.312;\n    }\n    case \"soy\": {\n      return 0.292;\n    }\n    default: {\n      return 0.468;\n    }\n  }\n};\n\nexport const britishBreakfastFootprint = 1.124;\n\nexport const veganBreakfastFootprint = 0.419;\n\nexport const localProductsFootprintReductionRate = (\n  frequency: Frequency,\n): number => {\n  switch (frequency) {\n    case \"sometimes\": {\n      return 0.33;\n    }\n    case \"often\": {\n      return 0.66;\n    }\n    case \"always\": {\n      return 1;\n    }\n    default: {\n      return 0;\n    }\n  }\n};\n\nexport const seasonalProductsPart = (frequency: Frequency): number => {\n  switch (frequency) {\n    case \"sometimes\": {\n      return 0.33;\n    }\n    case \"often\": {\n      return 0.66;\n    }\n    case \"always\": {\n      return 1;\n    }\n    default: {\n      return 0;\n    }\n  }\n};\n\n// https://github.com/datagir/nosgestesclimat/blob/master/data/alimentation/alimentation%20.%20de%20saison%20.%20ratio.ods\nexport const seasonalProductsRatio = 2.26;\n\n// https://github.com/datagir/nosgestesclimat/blob/master/data/alimentation/alimentation . de saison . pourcentage saisonable.ods\nexport const seasonalPercentage = 0.073;\n","export type MealType =\n  | \"vegetarian\"\n  | \"vegan\"\n  | \"whiteMeat\"\n  | \"redMeat\"\n  | \"whiteFish\"\n  | \"fattyFish\";\n\nexport const MealTypes: MealType[] = [\n  \"vegetarian\",\n  \"vegan\",\n  \"whiteMeat\",\n  \"redMeat\",\n  \"whiteFish\",\n  \"fattyFish\",\n];\n\nexport type BreakfastType =\n  | \"continental\"\n  | \"british\"\n  | \"milk & cereals\"\n  | \"vegan\"\n  | \"none\";\n\nexport const BreakfastTypes: BreakfastType[] = [\n  \"continental\",\n  \"british\",\n  \"milk & cereals\",\n  \"vegan\",\n  \"none\",\n];\n\nexport type Diet =\n  | \"vegetarian\"\n  | \"vegan\"\n  | \"littleMeatConsumer\"\n  | \"regularMeatConsumer\"\n  | \"heavyMeatConsumer\";\n\nexport const Diets: Diet[] = [\n  \"vegan\",\n  \"vegetarian\",\n  \"littleMeatConsumer\",\n  \"regularMeatConsumer\",\n  \"heavyMeatConsumer\",\n];\n\n// the total must be equal to 14 (2 meals per day * 7 days)\nexport type LunchesAndDinersPerWeek = Record<MealType, number>;\n\nexport type Frequency = \"never\" | \"sometimes\" | \"often\" | \"always\";\n\nexport const Frequencies: Frequency[] = [\n  \"never\",\n  \"sometimes\",\n  \"often\",\n  \"always\",\n];\n","import {\n  lunchesAndDinersPerWeekByDiet,\n  veganMealFootprint,\n  localProductsFootprintReductionRate,\n  vegetarianMealFootprint,\n  whiteMeatMealFootprint,\n  redMeatMealFootprint,\n  fishMealFootprint,\n  whiteFishMealFootprint,\n  continentalBreakfastFootprint,\n  britishBreakfastFootprint,\n  milkAndCerealsBreakfastFootprint,\n  veganBreakfastFootprint,\n  seasonalProductsPart,\n  seasonalProductsRatio,\n  seasonalPercentage,\n} from \"./constants\";\nimport { MilkType } from \"@domain/models/food/types\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\nimport { daysInYear, weeksInYear } from \"@domain/models/constants\";\nimport {\n  BreakfastType,\n  Diet,\n  Frequency,\n  LunchesAndDinersPerWeek,\n  MealTypes,\n  MealType,\n} from \"@domain/models/food/meals/types\";\n\ntype Props = {\n  breakfast?: BreakfastType;\n  milkType?: MilkType;\n  diet?: Diet;\n  localProducts?: Frequency;\n  seasonalProducts?: Frequency;\n};\n\nexport class Meals implements WithAnnualFootprint {\n  breakfast: BreakfastType;\n  milkType: MilkType;\n  diet: Diet;\n  lunchesAndDinersPerWeek: LunchesAndDinersPerWeek;\n  localProducts: Frequency;\n  seasonalProducts: Frequency;\n\n  constructor({\n    breakfast,\n    milkType,\n    diet,\n    localProducts,\n    seasonalProducts,\n  }: Props) {\n    this.breakfast = breakfast ?? \"continental\";\n    this.diet = diet ?? \"regularMeatConsumer\";\n    this.lunchesAndDinersPerWeek = lunchesAndDinersPerWeekByDiet(this.diet);\n    this.localProducts = localProducts ?? \"never\";\n    this.seasonalProducts = seasonalProducts ?? \"never\";\n    this.milkType = milkType ?? \"cow\";\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      this.lunchesAndDinersAnnualFootprint +\n        this.breakfastAnnualFootprint +\n        this.seasonalProductsBonus,\n    );\n  }\n\n  private get lunchesAndDinersAnnualFootprint(): number {\n    return this.lunchesAndDinersWeeklyFootprint * weeksInYear;\n  }\n\n  public get lunchesAndDinersWeeklyFootprint(): number {\n    let weeklyFootprint = 0;\n    for (const mealType of MealTypes) {\n      let mealFootprint = 0;\n      let mealFootprintReduction = 0;\n      if (mealType === \"vegan\") {\n        mealFootprint =\n          this.lunchesAndDinersPerWeek[mealType as MealType] *\n          veganMealFootprint;\n        mealFootprintReduction =\n          mealFootprint *\n          0.12 *\n          localProductsFootprintReductionRate(this.localProducts);\n      } else if (mealType === \"vegetarian\") {\n        mealFootprint =\n          this.lunchesAndDinersPerWeek[mealType as MealType] *\n          vegetarianMealFootprint;\n        mealFootprintReduction =\n          mealFootprint *\n          0.08 *\n          localProductsFootprintReductionRate(this.localProducts);\n      } else if (mealType === \"whiteMeat\") {\n        mealFootprint =\n          this.lunchesAndDinersPerWeek[mealType as MealType] *\n          whiteMeatMealFootprint;\n        mealFootprintReduction =\n          mealFootprint *\n          0.03 *\n          localProductsFootprintReductionRate(this.localProducts);\n      } else if (mealType === \"redMeat\") {\n        mealFootprint =\n          this.lunchesAndDinersPerWeek[mealType as MealType] *\n          redMeatMealFootprint;\n        mealFootprintReduction =\n          mealFootprint *\n          0.01 *\n          localProductsFootprintReductionRate(this.localProducts);\n      } else if (mealType === \"fattyFish\") {\n        mealFootprint =\n          this.lunchesAndDinersPerWeek[mealType as MealType] *\n          fishMealFootprint;\n        mealFootprintReduction =\n          mealFootprint *\n          0.05 *\n          localProductsFootprintReductionRate(this.localProducts);\n      } else if (mealType === \"whiteFish\") {\n        mealFootprint =\n          this.lunchesAndDinersPerWeek[mealType as MealType] *\n          whiteFishMealFootprint;\n        mealFootprintReduction =\n          mealFootprint *\n          0.06 *\n          localProductsFootprintReductionRate(this.localProducts);\n      }\n      weeklyFootprint += mealFootprint - mealFootprintReduction;\n    }\n    return Number(weeklyFootprint.toFixed(2));\n  }\n\n  private get breakfastAnnualFootprint(): number {\n    return this.breakfastFootprint * daysInYear;\n  }\n\n  public get breakfastFootprint(): number {\n    switch (this.breakfast) {\n      case \"continental\": {\n        return continentalBreakfastFootprint;\n      }\n      case \"british\": {\n        return britishBreakfastFootprint;\n      }\n      case \"milk & cereals\": {\n        return milkAndCerealsBreakfastFootprint(this.milkType ?? \"cow\");\n      }\n      case \"vegan\": {\n        return veganBreakfastFootprint;\n      }\n      case \"none\": {\n        return 0;\n      }\n      default: {\n        return 0;\n      }\n    }\n  }\n\n  private get seasonalProductsBonus(): number {\n    return this.seasonalFactor * this.seasonPart;\n  }\n\n  private get seasonalFactor(): number {\n    return (\n      (-1 * seasonalProductsPart(this.seasonalProducts)) / seasonalProductsRatio\n    );\n  }\n\n  private get seasonPart(): number {\n    return (\n      seasonalPercentage *\n      (this.breakfastAnnualFootprint + this.lunchesAndDinersAnnualFootprint)\n    );\n  }\n}\n","import {\n  wasteCompostingBonus,\n  householdWasteFootprint,\n  noFoodWasteBonus,\n  recyclingCenterFootprint,\n  separateCollectionFootprint,\n  stopAdvertisingStickerBonus,\n  zeroWasteFootprint,\n} from \"./constants\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\n\nexport type WasteQuantity = \"base\" | \"reduction\" | \"zero\";\n\nexport const WasteQuantities: WasteQuantity[] = [\"base\", \"reduction\", \"zero\"];\n\nexport type WasteBonus =\n  | \"wasteComposting\"\n  | \"noFoodWaste\"\n  | \"stopAdvertisingSticker\";\n\nexport const WasteBonuses: WasteBonus[] = [\n  \"wasteComposting\",\n  \"noFoodWaste\",\n  \"stopAdvertisingSticker\",\n];\n\ntype Props = {\n  quantity?: WasteQuantity;\n  wasteBonuses?: Record<WasteBonus, boolean>;\n};\n\nexport class Waste implements WithAnnualFootprint {\n  quantity: WasteQuantity;\n  wasteBonuses: Record<WasteBonus, boolean>;\n\n  constructor({ quantity, wasteBonuses }: Props) {\n    this.quantity = quantity ?? \"base\";\n    this.wasteBonuses = wasteBonuses ?? {\n      noFoodWaste: false,\n      stopAdvertisingSticker: false,\n      wasteComposting: false,\n    };\n  }\n\n  public get annualFootprint(): number {\n    if (this.quantity === \"zero\") return zeroWasteFootprint;\n    else return Math.round(this.wasteFootprint);\n  }\n\n  private get wasteFootprint(): number {\n    const defaultFootprint =\n      householdWasteFootprint +\n      separateCollectionFootprint +\n      recyclingCenterFootprint;\n\n    if (this.quantity === \"reduction\")\n      return defaultFootprint + this.wasteBonus;\n\n    return defaultFootprint;\n  }\n\n  private get wasteBonus(): number {\n    const { noFoodWaste, stopAdvertisingSticker, wasteComposting } =\n      this.wasteBonuses;\n    let footprintBonus = 0;\n    if (noFoodWaste) footprintBonus += noFoodWasteBonus;\n    if (stopAdvertisingSticker) footprintBonus += stopAdvertisingStickerBonus;\n    if (wasteComposting) footprintBonus += wasteCompostingBonus;\n    return footprintBonus;\n  }\n}\n","// https://nosgestesclimat.fr/documentation/alimentation/d%C3%A9chets/niveau-z%C3%A9ro-d%C3%A9chets\nexport const zeroWasteFootprint = 48;\n\n// https://nosgestesclimat.fr/documentation/alimentation/d%C3%A9chets/niveau-moyen\nexport const householdWasteFootprint = 96.02;\nexport const separateCollectionFootprint = 48.51;\nexport const recyclingCenterFootprint = 49.96;\n\n// https://nosgestesclimat.fr/documentation/alimentation/d%C3%A9chets/gestes/bonus-compostage-biod%C3%A9chets\nexport const wasteCompostingBonus = -11.01; // kgCO2e\n\n// https://nosgestesclimat.fr/documentation/alimentation/d%C3%A9chets/gestes/gaspillage-alimentaire\nexport const noFoodWasteBonus = -30; // kgCO2e\n\n// https://nosgestesclimat.fr/documentation/alimentation/d%C3%A9chets/gestes/stop-pub\nexport const stopAdvertisingStickerBonus = -12.95; // kgCO2e\n","import { Drinks } from \"@domain/models/food/drinks/Drinks\";\nimport { Meals } from \"@domain/models/food/meals/Meals\";\nimport { Waste } from \"@domain/models/food/waste/Waste\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\n\ntype Props = {\n  meals?: Meals;\n  drinks?: Drinks;\n  waste?: Waste;\n};\n\nexport class Food implements WithAnnualFootprint {\n  meals: Meals;\n  drinks: Drinks;\n  waste: Waste;\n\n  constructor({ meals, drinks, waste }: Props) {\n    this.meals = new Meals(meals ?? {});\n    this.drinks = new Drinks(drinks ?? {});\n    this.waste = new Waste(waste ?? {});\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      this.meals.annualFootprint +\n        this.drinks.annualFootprint +\n        this.waste.annualFootprint,\n    );\n  }\n}\n","export class PublicServices {\n  // https://github.com/datagir/nosgestesclimat/issues/1583\n  public get annualFootprint(): number {\n    return 1500;\n  }\n}\n","import { averageFootprintPerKm, averageSpeed } from \"./constants\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\n\ntype Props = {\n  usage?: boolean;\n  hoursPerYear?: number;\n};\n\nexport class Boat implements WithAnnualFootprint {\n  usage: boolean;\n  hoursPerYear: number;\n\n  constructor({ usage = false, hoursPerYear = 0 }: Props) {\n    this.usage = usage;\n    this.hoursPerYear = hoursPerYear;\n  }\n\n  public resetValues() {\n    this.usage = false;\n    this.hoursPerYear = 0;\n  }\n\n  public get annualFootprint(): number {\n    if (!this.usage) return 0;\n    return Math.round(this.hoursPerYear * averageSpeed * averageFootprintPerKm);\n  }\n}\n","// https://futur.eco/ferry\n\n// https://www.greenferries.org/ships/mega-express-four-9086590/\nexport const averageSpeed = 33; // km/h\n\n// https://nosgestesclimat.fr/documentation/futureco%E2%80%91data/transport/ferry/empreinte-par-km-volume\nexport const averageFootprintPerKm = 0.3; // kgCO2e/km/passager\n","import { CarSize, CarEngine, FuelType } from \"@domain/models/transport/car/Car\";\nimport { g45 } from \"@domain/models/transport/constants\";\n\nexport const defaultSize: CarSize = \"medium\";\n\nexport const defaultEngine: CarEngine = \"thermal\";\n\nexport const defaultFuelType: FuelType = \"gasoline\";\n\nexport const defaultYears = 5;\n\nexport const defaultAveragePassengers = 1.2;\n\n// l / 100km\n// https://librairie.ademe.fr/mobilite-et-transport/3273-elaboration-selon-les-principes-des-acv-des-bilans-energetiques-des-emissions-de-gaz-a-effet-de-serre-et-des-autres-impacts-environnementaux.html\nexport const defaultAverageFuelConsumption: Record<CarSize, number> = {\n  small: 5,\n  medium: 6,\n  vul: 6,\n  sedan: 7,\n  suv: 8,\n};\n\n// https://bilans-ges.ademe.fr/fr/basecarbone/donnees-consulter/liste-element?recherche=diesel\nexport const defaultAverageFootPrintPerLiter: Record<FuelType, number> = {\n  diesel: 3.1,\n  gasoline: 2.7,\n  biofuels: 1.11,\n};\n\n// https://www.statistiques.developpement-durable.gouv.fr/bilan-annuel-des-transports-en-2019-0 (p.3)\nexport const averageCarKmPerYear = 12200;\n\n// https://librairie.ademe.fr/cadic/7353/enquete-autopartage-2022-rapport.pdf (p.80)\nexport const sharedCarKmPerYear = 15130;\n\n// https://librairie.ademe.fr/mobilite-et-transport/1267-bilan-transversal-de-l-impact-de-l-electrification-par-segment.html\nexport const defaultCarLifetime = 10; // years\n\n// https://www.insee.fr/fr/statistiques/2045167#tableau-figure1_radio1\nconst vehiclesInCirculation = 37880000 + 5977000;\n\n// https://www.citepa.org/fr/secten/\nexport const fluorinatedGasEmissions = 1374000000; // kgCO2e\n\n// https://nosgestesclimat.fr/documentation/empreinte-branche/G45?lang=fr\nexport const g45VehicleMaintenancePart = 0.07;\n\nexport const thermalMaintenanceFootprint =\n  (g45 * 1000000 * g45VehicleMaintenancePart) /\n  vehiclesInCirculation /\n  averageCarKmPerYear;\n\nexport const airConditionerFootprint =\n  fluorinatedGasEmissions / vehiclesInCirculation / averageCarKmPerYear;\n\nexport const electricSmallCarFootprint = 0.0159;\nexport const electricMediumCarFootprint = 0.0198;\nexport const electricCarFootprint = 0.0273;\n\n// https://github.com/betagouv/ecolab-data/files/5945898/vehicule_electrique_rapport.pdf\nexport const thermalCarManufacturingFootprint: Record<CarSize, number> = {\n  small: 6700,\n  medium: 6700,\n  vul: 7600,\n  sedan: 7600,\n  suv: 7600,\n};\n\n// https://github.com/betagouv/ecolab-data/files/5945898/vehicule_electrique_rapport.pdf\nexport const hybridCarManufacturingFootprint: Record<CarSize, number> = {\n  small: 9600,\n  medium: 9600,\n  vul: 6900,\n  sedan: 6900,\n  suv: 6900,\n};\n\n// https://github.com/betagouv/ecolab-data/files/5945898/vehicule_electrique_rapport.pdf\nexport const electricCarManufacturingFootprint: Record<CarSize, number> = {\n  small: 10200,\n  medium: 10200,\n  vul: 20200,\n  sedan: 20200,\n  suv: 20200,\n};\n","/**\n * footprint = kgCO2e or kgC02e/km\n */\n\nimport {\n  airConditionerFootprint,\n  averageCarKmPerYear,\n  defaultAverageFootPrintPerLiter,\n  defaultAverageFuelConsumption,\n  defaultEngine,\n  defaultFuelType,\n  defaultSize,\n  electricCarFootprint,\n  electricCarManufacturingFootprint,\n  electricMediumCarFootprint,\n  electricSmallCarFootprint,\n  hybridCarManufacturingFootprint,\n  defaultCarLifetime,\n  sharedCarKmPerYear,\n  thermalCarManufacturingFootprint,\n  thermalMaintenanceFootprint,\n  defaultYears,\n  defaultAveragePassengers,\n} from \"./constants\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\n\nexport type CarSize = \"small\" | \"medium\" | \"vul\" | \"sedan\" | \"suv\";\nexport const carSizes: CarSize[] = [\"small\", \"medium\", \"vul\", \"sedan\", \"suv\"];\n\nexport type CarEngine = \"thermal\" | \"hybrid\" | \"electric\";\nexport const carEngines: CarEngine[] = [\"thermal\", \"hybrid\", \"electric\"];\n\nexport type FuelType = \"diesel\" | \"gasoline\" | \"biofuels\";\nexport const fuelTypes: FuelType[] = [\"diesel\", \"gasoline\", \"biofuels\"];\n\ntype Props = {\n  regularUser?: boolean;\n  kmPerYear?: number;\n  size?: CarSize;\n  engine?: CarEngine;\n  fuelType?: FuelType;\n  age?: number;\n  averageFuelConsumption?: number;\n  averagePassengers?: number;\n};\n\nexport class Car implements WithAnnualFootprint {\n  regularUser: boolean;\n  kmPerYear: number;\n  size: CarSize;\n  engine: CarEngine;\n  fuelType: FuelType;\n  age: number;\n  lifetime = defaultCarLifetime;\n  averageFuelConsumption;\n  averagePassengers;\n\n  constructor({\n    regularUser = true,\n    kmPerYear = averageCarKmPerYear,\n    age = defaultYears,\n    size = defaultSize,\n    engine = defaultEngine,\n    fuelType = defaultFuelType,\n    averageFuelConsumption = defaultAverageFuelConsumption.medium, // l/100km\n    averagePassengers = defaultAveragePassengers,\n  }: Props) {\n    this.regularUser = regularUser;\n    this.kmPerYear = kmPerYear;\n    this.size = size;\n    this.engine = engine;\n    this.fuelType = fuelType;\n    this.age = age;\n    this.averageFuelConsumption = averageFuelConsumption;\n    this.averagePassengers = averagePassengers;\n  }\n\n  public initValuesForNonRegularUser() {\n    this.size = defaultSize;\n    this.engine = defaultEngine;\n    this.fuelType = defaultFuelType;\n    this.averageFuelConsumption = defaultAverageFuelConsumption[this.size];\n  }\n\n  public get annualFootprint(): number {\n    if (this.kmPerYear === 0) return 0;\n    if (this.regularUser) return Math.floor(this.regularUserFootprint);\n    return Math.floor(this.nonRegularUserFootprint);\n  }\n\n  private get regularUserFootprint(): number {\n    return (\n      (this.carUseFootprint + this.amortizedManufacturingFootprint) /\n      this.averagePassengers\n    );\n  }\n\n  private get nonRegularUserFootprint(): number {\n    return (\n      ((this.manufacturingFootprint / this.lifetime) * this.rentalFactor +\n        this.carUseFootprint) /\n      this.averagePassengers\n    );\n  }\n\n  private get carUseFootprint(): number {\n    return this.kmPerYear * (this.footprintPerKm + this.footprintBasePerKm);\n  }\n\n  // http://www2.ademe.fr/servlet/KBaseShow?catid=13655\n  private get footprintPerKm(): number {\n    if (this.engine === \"electric\") {\n      if (this.size === \"small\") return electricSmallCarFootprint;\n      if (this.size === \"medium\") return electricMediumCarFootprint;\n      return electricCarFootprint;\n    }\n\n    const thermalCarFootprint =\n      (this.averageFuelConsumption / 100) *\n      defaultAverageFootPrintPerLiter[this.fuelType];\n\n    if (this.engine === \"hybrid\") return thermalCarFootprint * 0.85;\n\n    return thermalCarFootprint;\n  }\n\n  private get footprintBasePerKm(): number {\n    return this.weightedMaintenanceFootprint + this.airConditionerFootprint;\n  }\n\n  // https://izi-by-edf.fr/blog/voiture-hybride-entretien/\n  private get weightedMaintenanceFootprint(): number {\n    if (this.engine === \"hybrid\") return thermalMaintenanceFootprint * 0.9;\n    if (this.engine === \"electric\") return thermalMaintenanceFootprint * 0.75;\n    return thermalMaintenanceFootprint;\n  }\n\n  private get airConditionerFootprint(): number {\n    return airConditionerFootprint;\n  }\n\n  private get amortizedManufacturingFootprint(): number {\n    return this.manufacturingFootprint * this.amortization;\n  }\n\n  private get manufacturingFootprint(): number {\n    if (this.engine === \"hybrid\")\n      return hybridCarManufacturingFootprint[this.size];\n    if (this.engine === \"electric\")\n      return electricCarManufacturingFootprint[this.size];\n    return thermalCarManufacturingFootprint[this.size];\n  }\n\n  private get amortization(): number {\n    if (this.age < 10) return 1 / defaultCarLifetime;\n    return 0;\n  }\n\n  private get rentalFactor(): number {\n    return this.kmPerYear / sharedCarKmPerYear;\n  }\n}\n","import { haulFlight } from \"@domain/models/transport/plane/Plane\";\n\nexport const defaultAverageSpeed: Record<haulFlight, number> = {\n  // we take Paris-Toulouse as a reference flight, in km/h\n  short: 600 / 1.3,\n  // we take Paris-Alger as a reference flight, in km/h\n  medium: 1350 / 2.5,\n  // http://www.abm.fr/voyager-en-avion-le-guide-du-passager/en-complement/distances-et-durees-de-vol.html\n  long: 5800 / 8.5,\n};\n\nexport const defaultAverageFootprintPerKm: Record<haulFlight, number> = {\n  // cf footprint \"Avion passagers - Court courrier, 2018 - AVEC trainées\"\n  short: 0.258,\n  // cf footprint \"Avion passagers - Moyen courrier, 2018 - AVEC trainées\"\n  medium: 0.187,\n  // cf footprint \"Avion passagers - Long courrier, 2018 - AVEC trainées\"\n  long: 0.152,\n};\n","import { defaultAverageFootprintPerKm, defaultAverageSpeed } from \"./constants\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\n\nexport type haulFlight = \"short\" | \"medium\" | \"long\";\n\ntype Props = {\n  usage?: boolean;\n  hoursPerYearInShortHaul?: number;\n  hoursPerYearInMediumHaul?: number;\n  hoursPerYearInLongHaul?: number;\n};\n\nexport class Plane implements WithAnnualFootprint {\n  usage: boolean;\n  hoursPerYearInShortHaul: number;\n  hoursPerYearInMediumHaul: number;\n  hoursPerYearInLongHaul: number;\n\n  constructor({\n    usage = false,\n    hoursPerYearInShortHaul = 0,\n    hoursPerYearInMediumHaul = 0,\n    hoursPerYearInLongHaul = 0,\n  }: Props) {\n    this.usage = usage;\n    this.hoursPerYearInShortHaul = hoursPerYearInShortHaul;\n    this.hoursPerYearInMediumHaul = hoursPerYearInMediumHaul;\n    this.hoursPerYearInLongHaul = hoursPerYearInLongHaul;\n  }\n\n  public resetValues() {\n    this.usage = false;\n    this.hoursPerYearInShortHaul = 0;\n    this.hoursPerYearInMediumHaul = 0;\n    this.hoursPerYearInLongHaul = 0;\n  }\n\n  public get annualFootprint(): number {\n    if (!this.usage) return 0;\n\n    const shortHaulFootprint =\n      this.hoursPerYearInShortHaul *\n      defaultAverageSpeed[\"short\"] *\n      defaultAverageFootprintPerKm[\"short\"];\n\n    const mediumHaulFootprint =\n      this.hoursPerYearInMediumHaul *\n      defaultAverageSpeed[\"medium\"] *\n      defaultAverageFootprintPerKm[\"medium\"];\n\n    const longHaulFootprint =\n      this.hoursPerYearInLongHaul *\n      defaultAverageSpeed[\"long\"] *\n      defaultAverageFootprintPerKm[\"long\"];\n\n    return Math.round(\n      shortHaulFootprint + mediumHaulFootprint + longHaulFootprint,\n    );\n  }\n}\n","import {\n  averageTrainFootprintPerKm,\n  averageBusFootprintPerHour,\n  defaultHoursPerYearInTrain,\n  averageMetroFootprintPerHour,\n} from \"./constants\";\nimport { weeksInYear } from \"@domain/models/constants\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\n\ntype Props = {\n  hoursPerYearInTrain?: number;\n  hoursPerWeekInMetro?: number;\n  hoursPerWeekInBus?: number;\n};\n\nexport class PublicTransport implements WithAnnualFootprint {\n  hoursPerYearInTrain: number;\n  hoursPerWeekInMetro: number;\n  hoursPerWeekInBus: number;\n\n  constructor({\n    hoursPerYearInTrain = defaultHoursPerYearInTrain,\n    hoursPerWeekInMetro = 0,\n    hoursPerWeekInBus = 0,\n  }: Props) {\n    this.hoursPerYearInTrain = hoursPerYearInTrain;\n    this.hoursPerWeekInMetro = hoursPerWeekInMetro;\n    this.hoursPerWeekInBus = hoursPerWeekInBus;\n  }\n\n  private get trainAnnualFootprint(): number {\n    return this.hoursPerYearInTrain * averageTrainFootprintPerKm;\n  }\n\n  private get metroWeekFootprint(): number {\n    return (\n      this.hoursPerWeekInMetro * averageMetroFootprintPerHour * weeksInYear\n    );\n  }\n\n  private get busWeekFootprint(): number {\n    return this.hoursPerWeekInBus * averageBusFootprintPerHour * weeksInYear;\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      this.trainAnnualFootprint +\n        this.metroWeekFootprint +\n        this.busWeekFootprint,\n    );\n  }\n}\n","// (TER + TGV) / 2. Cf Base Carbone 04/04/2022 (SNCF)\nexport const averageTrainFootprintPerKm = (0.0296 + 0.00236) / 2;\n\nexport const defaultHoursPerYearInTrain = 1000;\n\n// cf Base Carbone 04/04/2022 (SNCF)\nconst metroFootprintPerKm = 0.00329;\n\n//http://transports.blog.lemonde.fr/2013/03/11/les-petits-secrets-de-la-ratp-reveles-au-public/\nconst metroAverageSpeed = 25; // km/h\n\nexport const averageMetroFootprintPerHour =\n  metroFootprintPerKm * metroAverageSpeed;\n\n// cf Base Carbone 04/04/2022 (SNCF)\nconst busFootprintPerKm = 0.113;\n\n// https://www.lemonde.fr/blog/transports/2013/03/11/les-petits-secrets-de-la-ratp-reveles-au-public/\nconst busAverageSpeed = 12; // km/h\n\nexport const averageBusFootprintPerHour = busFootprintPerKm * busAverageSpeed;\n","import { g45 } from \"@domain/models/transport/constants\";\nimport { TwoWheelerType } from \"@domain/models/transport/two-wheeler/TwoWheeler\";\n\nexport const defaultTwoWheelerType: TwoWheelerType = \"thermalScooter\";\n\n// cf ADEME - HBEFA (2020)\nexport const twoWheelerDefaultFootprint: Record<TwoWheelerType, number> = {\n  thermalScooter: 0.0763,\n  electricScooter: 0.03,\n  motorbikeLT250: 0.0763,\n  motorbikeGT250: 0.191,\n};\n\n// https://nosgestesclimat.fr/documentation/empreinte-branche/G45?lang=fr\nconst g45VehicleMaintenancePart = 0.07;\nconst g45VehicleBusinessPart = 0.69;\nconst g45MotorbikePart = 0.02;\n\n// https://www.onisr.securite-routiere.gouv.fr/etudes-et-recherches/vehicules/parc-des-vehicules/le-parc-deux-roues-motorises-des-menages\nconst twoWheelerInCirculation = 2700000;\n\n// https://www.statistiques.developpement-durable.gouv.fr/bilan-annuel-des-transports-en-2019-0 (G1-1)\nconst averageTwoWheelerKmPerYear = 3000;\n\nexport const thermalMaintenanceFootprint =\n  (g45 * 1000000 * g45MotorbikePart * g45VehicleMaintenancePart) /\n  (g45VehicleBusinessPart + g45VehicleMaintenancePart) /\n  twoWheelerInCirculation /\n  averageTwoWheelerKmPerYear;\n","import {\n  defaultTwoWheelerType,\n  thermalMaintenanceFootprint,\n  twoWheelerDefaultFootprint,\n} from \"./constants\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\n\nexport type TwoWheelerType =\n  | \"thermalScooter\"\n  | \"electricScooter\"\n  | \"motorbikeLT250\"\n  | \"motorbikeGT250\";\n\nexport const TwoWheelerTypes: TwoWheelerType[] = [\n  \"thermalScooter\",\n  \"electricScooter\",\n  \"motorbikeLT250\",\n  \"motorbikeGT250\",\n];\n\ntype Props = {\n  usage?: boolean;\n  type?: TwoWheelerType;\n  kmPerYear?: number;\n};\n\nexport class TwoWheeler implements WithAnnualFootprint {\n  usage: boolean;\n  type: TwoWheelerType;\n  kmPerYear: number;\n\n  constructor({\n    usage = false,\n    type = defaultTwoWheelerType,\n    kmPerYear = 0,\n  }: Props) {\n    this.usage = usage;\n    this.type = type;\n    this.kmPerYear = kmPerYear;\n  }\n\n  public resetValues() {\n    this.usage = false;\n    this.type = defaultTwoWheelerType;\n    this.kmPerYear = 0;\n  }\n\n  public get annualFootprint(): number {\n    if (!this.usage || this.kmPerYear === 0) return 0;\n    return Math.floor(\n      (this.footprintPerKm + this.weightedMaintenanceFootprint) *\n        this.kmPerYear,\n    );\n  }\n\n  private get footprintPerKm(): number {\n    return twoWheelerDefaultFootprint[this.type];\n  }\n\n  private get weightedMaintenanceFootprint(): number {\n    const maintenanceFootprint = this.maintenanceFootprint;\n    if (this.type === \"electricScooter\") return maintenanceFootprint * 0.75;\n    return maintenanceFootprint;\n  }\n\n  private get maintenanceFootprint(): number {\n    return thermalMaintenanceFootprint;\n  }\n}\n","import { Boat } from \"@domain/models/transport/boat/Boat\";\nimport { Car } from \"@domain/models/transport/car/Car\";\nimport { Plane } from \"@domain/models/transport/plane/Plane\";\nimport { PublicTransport } from \"@domain/models/transport/public-transport/PublicTransport\";\nimport { TwoWheeler } from \"@domain/models/transport/two-wheeler/TwoWheeler\";\nimport { WithAnnualFootprint } from \"@domain/models/types\";\n\ntype Props = {\n  car?: Car;\n  twoWheeler?: TwoWheeler;\n  plane?: Plane;\n  boat?: Boat;\n  publicTransport?: PublicTransport;\n};\n\nexport class Transport implements WithAnnualFootprint {\n  car: Car;\n  twoWheeler: TwoWheeler;\n  plane: Plane;\n  boat: Boat;\n  publicTransport: PublicTransport;\n\n  constructor({ car, twoWheeler, plane, boat, publicTransport }: Props) {\n    this.car = new Car(car ?? {});\n    this.twoWheeler = new TwoWheeler(twoWheeler ?? {});\n    this.plane = new Plane(plane ?? {});\n    this.boat = new Boat(boat ?? {});\n    this.publicTransport = new PublicTransport(publicTransport ?? {});\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      this.car.annualFootprint +\n        this.twoWheeler.annualFootprint +\n        this.plane.annualFootprint +\n        this.boat.annualFootprint +\n        this.publicTransport.annualFootprint,\n    );\n  }\n}\n","import { Food } from \"@domain/models/food/Food\";\nimport { PublicServices } from \"@domain/models/public-services/PublicServices\";\nimport { Transport } from \"@domain/models/transport/Transport\";\nimport { EmissionsRepository } from \"@domain/repositories/EmissionsRepository\";\n\nexport class EmissionsInMemoryRepository implements EmissionsRepository {\n  private transport: Transport = new Transport({});\n  private food: Food = new Food({});\n  private publicServices: PublicServices = new PublicServices();\n\n  fetchTransport(): Transport {\n    return this.transport;\n  }\n\n  updateTransport(transport: Transport): void {\n    this.transport = new Transport(transport);\n  }\n\n  fetchFood(): Food {\n    return this.food;\n  }\n\n  updateFood(food: Food): void {\n    this.food = new Food(food);\n  }\n\n  fetchPublicServices(): PublicServices {\n    return this.publicServices;\n  }\n\n  injectFakeTransport(transport: Transport): void {\n    this.transport = new Transport(transport);\n  }\n\n  injectFakeFood(food: Food): void {\n    this.food = new Food(food);\n  }\n}\n","import { useAppStore } from \"@data/store/store\";\nimport { Food } from \"@domain/models/food/Food\";\nimport { Transport } from \"@domain/models/transport/Transport\";\n\nexport const appStoreActions = {\n  getTransport: () => useAppStore.getState().transport,\n\n  setTransport: (transport: Transport) =>\n    useAppStore.setState((state) => ({ ...state, transport })),\n\n  getFood: () => useAppStore.getState().food,\n\n  setFood: (food: Food) =>\n    useAppStore.setState((state) => ({ ...state, food })),\n};\n","import { Food } from \"@domain/models/food/Food\";\nimport { PublicServices } from \"@domain/models/public-services/PublicServices\";\nimport { Transport } from \"@domain/models/transport/Transport\";\nimport { EmissionsRepository } from \"@domain/repositories/EmissionsRepository\";\nimport { appStoreActions } from \"@data/store/storeActions\";\n\nexport class EmissionsStoreRepository implements EmissionsRepository {\n  fetchTransport(): Transport {\n    const storedTransport = appStoreActions.getTransport();\n    const transport = new Transport({\n      car: storedTransport.car,\n      twoWheeler: storedTransport.twoWheeler,\n      plane: storedTransport.plane,\n      boat: storedTransport.boat,\n      publicTransport: storedTransport.publicTransport,\n      // TODO : ajouter les autres catégories\n    });\n    return transport;\n  }\n\n  updateTransport(transport: Transport): void {\n    return appStoreActions.setTransport(transport);\n  }\n\n  fetchFood(): Food {\n    const storedFood = appStoreActions.getFood();\n    const food = new Food({\n      meals: storedFood.meals,\n      drinks: storedFood.drinks,\n      waste: storedFood.waste,\n    });\n    return food;\n  }\n\n  updateFood(food: Food): void {\n    return appStoreActions.setFood(food);\n  }\n\n  fetchPublicServices(): PublicServices {\n    const publicServices = new PublicServices();\n    return publicServices;\n  }\n}\n","import { EmissionsRepository } from \"@domain/repositories/EmissionsRepository\";\n\nexport const createUseComputeTotalAnnualFootprint = (\n  emissionsRepository: EmissionsRepository,\n) =>\n  function useComputeTotalAnnualFootprint() {\n    const computeTotalAnnualFootprint = (): number => {\n      const transport = emissionsRepository.fetchTransport();\n      const food = emissionsRepository.fetchFood();\n      const publicServices = emissionsRepository.fetchPublicServices();\n\n      // TODO : ajouter les autres catégories\n\n      return (\n        transport.annualFootprint +\n        food.annualFootprint +\n        publicServices.annualFootprint\n      );\n    };\n\n    return { computeTotalAnnualFootprint };\n  };\n","import { Food } from \"@domain/models/food/Food\";\nimport { EmissionsRepository } from \"@domain/repositories/EmissionsRepository\";\n\nexport const createUseFetchFood = (emissionsRepository: EmissionsRepository) =>\n  function useFetchFood() {\n    const fetchFood = (): Food => {\n      return emissionsRepository.fetchFood();\n    };\n\n    return { fetchFood };\n  };\n","import { PublicServices } from \"@domain/models/public-services/PublicServices\";\nimport { EmissionsRepository } from \"@domain/repositories/EmissionsRepository\";\n\nexport const createUseFetchPublicServices = (\n  emissionsRepository: EmissionsRepository,\n) =>\n  function useFetchPublicServices() {\n    const fetchPublicServices = (): PublicServices => {\n      return emissionsRepository.fetchPublicServices();\n    };\n\n    return { fetchPublicServices };\n  };\n","import { Transport } from \"@domain/models/transport/Transport\";\nimport { EmissionsRepository } from \"@domain/repositories/EmissionsRepository\";\n\nexport const createUseFetchTransport = (\n  emissionsRepository: EmissionsRepository,\n) =>\n  function useFetchTransport() {\n    const fetchTransport = (): Transport => {\n      return emissionsRepository.fetchTransport();\n    };\n\n    return { fetchTransport };\n  };\n","import { Drinks } from \"@domain/models/food/drinks/Drinks\";\nimport { Meals } from \"@domain/models/food/meals/Meals\";\nimport { Waste } from \"@domain/models/food/waste/Waste\";\nimport { EmissionsRepository } from \"@domain/repositories/EmissionsRepository\";\n\nexport const createUseUpdateFood = (emissionsRepository: EmissionsRepository) =>\n  function useUpdateFood() {\n    const updateMeals = (values: Meals) => {\n      const newMeals = new Meals(values);\n\n      const newFood = emissionsRepository.fetchFood();\n      newFood.meals = newMeals;\n\n      emissionsRepository.updateFood(newFood);\n    };\n\n    const updateDrinks = (values: Drinks) => {\n      const newDrinks = new Drinks(values);\n\n      const newFood = emissionsRepository.fetchFood();\n      newFood.drinks = newDrinks;\n\n      emissionsRepository.updateFood(newFood);\n    };\n\n    const updateWaste = (values: Waste) => {\n      const newWaste = new Waste(values);\n\n      const newFood = emissionsRepository.fetchFood();\n      newFood.waste = newWaste;\n\n      emissionsRepository.updateFood(newFood);\n    };\n\n    return {\n      updateMeals,\n      updateDrinks,\n      updateWaste,\n    };\n  };\n","import { Boat } from \"@domain/models/transport/boat/Boat\";\nimport { Car } from \"@domain/models/transport/car/Car\";\nimport { Plane } from \"@domain/models/transport/plane/Plane\";\nimport { PublicTransport } from \"@domain/models/transport/public-transport/PublicTransport\";\nimport { TwoWheeler } from \"@domain/models/transport/two-wheeler/TwoWheeler\";\nimport { EmissionsRepository } from \"@domain/repositories/EmissionsRepository\";\n\nexport const createUseUpdateTransport = (\n  emissionsRepository: EmissionsRepository,\n) =>\n  function useUpdateTransport() {\n    const updateCar = (values: Car) => {\n      const newCar = new Car(values);\n      if (!newCar.regularUser) newCar.initValuesForNonRegularUser();\n\n      const newTransport = emissionsRepository.fetchTransport();\n      newTransport.car = newCar;\n\n      emissionsRepository.updateTransport(newTransport);\n    };\n\n    const updateTwoWheeler = (values: TwoWheeler) => {\n      const newTwoWheeler = new TwoWheeler(values);\n      if (!newTwoWheeler.usage) newTwoWheeler.resetValues();\n\n      const newTransport = emissionsRepository.fetchTransport();\n      newTransport.twoWheeler = newTwoWheeler;\n\n      emissionsRepository.updateTransport(newTransport);\n    };\n\n    const updatePlane = (values: Plane) => {\n      const newPlane = new Plane(values);\n      if (!newPlane.usage) newPlane.resetValues();\n\n      const newTransport = emissionsRepository.fetchTransport();\n      newTransport.plane = newPlane;\n\n      emissionsRepository.updateTransport(newTransport);\n    };\n\n    const updateBoat = (values: Boat) => {\n      const newBoat = new Boat(values);\n      if (!newBoat.usage) newBoat.resetValues();\n\n      const newTransport = emissionsRepository.fetchTransport();\n      newTransport.boat = newBoat;\n\n      emissionsRepository.updateTransport(newTransport);\n    };\n\n    const updatePublicTransport = (values: PublicTransport) => {\n      const newPublicTransport = new PublicTransport(values);\n\n      const newTransport = emissionsRepository.fetchTransport();\n      newTransport.publicTransport = newPublicTransport;\n\n      emissionsRepository.updateTransport(newTransport);\n    };\n\n    return {\n      updateCar,\n      updateTwoWheeler,\n      updatePlane,\n      updateBoat,\n      updatePublicTransport,\n    };\n  };\n","import { createContext } from \"react\";\n\nimport { EmissionsInMemoryRepository } from \"@data/repositories/EmissionsInMemoryRepository\";\nimport { EmissionsStoreRepository } from \"@data/repositories/EmissionsStoreRepository\";\nimport { EmissionsRepository } from \"@domain/repositories/EmissionsRepository\";\nimport { createUseComputeTotalAnnualFootprint } from \"@domain/usecases/computeTotalAnnualFootprint\";\nimport { createUseFetchFood } from \"@domain/usecases/fetchFood\";\nimport { createUseFetchPublicServices } from \"@domain/usecases/fetchPublicServices\";\nimport { createUseFetchTransport } from \"@domain/usecases/fetchTransport\";\nimport { createUseUpdateFood } from \"@domain/usecases/updateFood\";\nimport { createUseUpdateTransport } from \"@domain/usecases/updateTransport\";\n\nconst isTestMode = process.env.NODE_ENV === \"test\";\n\ninterface Repositories {\n  emissionsRepository: EmissionsRepository;\n}\n\nconst initRealRepositories = () => ({\n  emissionsRepository: new EmissionsStoreRepository(),\n});\n\nexport const initFakeRepositories = () => ({\n  emissionsRepository: new EmissionsInMemoryRepository(),\n});\n\nconst repositories: Repositories = isTestMode\n  ? initFakeRepositories()\n  : initRealRepositories();\n\nconst initUsecases = (repositories: Repositories) => {\n  const { emissionsRepository } = repositories;\n\n  return {\n    useFetchTransport: createUseFetchTransport(emissionsRepository),\n    useUpdateTransport: createUseUpdateTransport(emissionsRepository),\n    useFetchFood: createUseFetchFood(emissionsRepository),\n    useUpdateFood: createUseUpdateFood(emissionsRepository),\n    useComputeTotalAnnualFootprint:\n      createUseComputeTotalAnnualFootprint(emissionsRepository),\n    useFetchPublicServices: createUseFetchPublicServices(emissionsRepository),\n  };\n};\n\nconst usecases = initUsecases(repositories);\n\nconst UsecasesContext = createContext(usecases);\n\nexport type { Repositories };\nexport { UsecasesContext };\n","export enum FootprintCategories {\n  TRANSPORT = \"transport\",\n  HOUSING = \"housing\",\n  FOOD = \"food\",\n  GOODS = \"goods\",\n  PUBLIC_SERVICES = \"publicServices\",\n}\n","import { IconSource } from \"react-native-paper/lib/typescript/components/Icon\";\n\nimport foodImage from \"@assets/images/food.svg\";\nimport goodsImage from \"@assets/images/goods.svg\";\nimport housingImage from \"@assets/images/house.svg\";\nimport publicServicesImage from \"@assets/images/public_services.svg\";\nimport transportImage from \"@assets/images/transport.svg\";\nimport { FootprintCategories } from \"@domain/models/Categories\";\n\nexport class FootprintByCategory {\n  public color: string = \"\";\n  public icon: string = \"\";\n  public part: number;\n  public image: string = \"\";\n  public materialIcon: IconSource = \"\";\n\n  protected constructor(\n    public category: FootprintCategories,\n    public footprint: number,\n    totalFootprint: number,\n  ) {\n    this.part = this.computePart(totalFootprint);\n  }\n\n  static forTransport(\n    footprint: number,\n    totalFootprint: number,\n  ): FootprintByCategory {\n    return new FootprintCategoryTransport(footprint, totalFootprint);\n  }\n\n  static forFood(\n    footprint: number,\n    totalFootprint: number,\n  ): FootprintByCategory {\n    return new FootprintCategoryFood(footprint, totalFootprint);\n  }\n\n  static forHousing(\n    footprint: number,\n    totalFootprint: number,\n  ): FootprintByCategory {\n    return new FootprintCategoryHousing(footprint, totalFootprint);\n  }\n\n  static forGoods(\n    footprint: number,\n    totalFootprint: number,\n  ): FootprintByCategory {\n    return new FootprintCategoryGoods(footprint, totalFootprint);\n  }\n\n  static forPublicServices(\n    footprint: number,\n    totalFootprint: number,\n  ): FootprintByCategory {\n    return new FootprintCategoryPublicServices(footprint, totalFootprint);\n  }\n\n  private computePart = (totalFootprint: number) =>\n    totalFootprint === 0\n      ? 0\n      : Math.floor((this.footprint / totalFootprint) * 100);\n}\n\nclass FootprintCategoryTransport extends FootprintByCategory {\n  constructor(footprint: number, totalFootprint: number) {\n    super(FootprintCategories.TRANSPORT, footprint, totalFootprint);\n    this.color = \"sandybrown\";\n    this.icon = \"🚗\";\n    this.materialIcon = \"car\";\n    this.image = transportImage;\n  }\n}\n\nclass FootprintCategoryFood extends FootprintByCategory {\n  constructor(footprint: number, totalFootprint: number) {\n    super(FootprintCategories.FOOD, footprint, totalFootprint);\n    this.color = \"plum\";\n    this.icon = \"🍲\";\n    this.materialIcon = \"food\";\n    this.image = foodImage;\n  }\n}\n\nclass FootprintCategoryHousing extends FootprintByCategory {\n  constructor(footprint: number, totalFootprint: number) {\n    super(FootprintCategories.HOUSING, footprint, totalFootprint);\n    this.color = \"cadetblue\";\n    this.icon = \"🏠\";\n    this.materialIcon = \"home\";\n    this.image = housingImage;\n  }\n}\n\nclass FootprintCategoryGoods extends FootprintByCategory {\n  constructor(footprint: number, totalFootprint: number) {\n    super(FootprintCategories.GOODS, footprint, totalFootprint);\n    this.color = \"khaki\";\n    this.icon = \"🛍️\";\n    this.materialIcon = \"package\";\n    this.image = goodsImage;\n  }\n}\n\nclass FootprintCategoryPublicServices extends FootprintByCategory {\n  constructor(footprint: number, totalFootprint: number) {\n    super(FootprintCategories.PUBLIC_SERVICES, footprint, totalFootprint);\n    this.color = \"mediumslateblue\";\n    this.icon = \"🏛\";\n    this.materialIcon = \"bank\";\n    this.image = publicServicesImage;\n  }\n}\n\nexport type Footprints = Record<FootprintCategories, FootprintByCategory>;\n","import { useContext, useMemo } from \"react\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { Footprints, FootprintByCategory } from \"@view/view-models/Footprint\";\n\nexport const useFootprints = () => {\n  const appStore = useAppStore((store) => store);\n\n  const {\n    useFetchTransport,\n    useFetchFood,\n    useFetchPublicServices,\n    useComputeTotalAnnualFootprint,\n  } = useContext(UsecasesContext);\n\n  const { computeTotalAnnualFootprint } = useComputeTotalAnnualFootprint();\n  const { fetchTransport } = useFetchTransport();\n  const { fetchFood } = useFetchFood();\n  const { fetchPublicServices } = useFetchPublicServices();\n\n  const transport = useMemo(() => fetchTransport(), [appStore]);\n  const food = useMemo(() => fetchFood(), [appStore]);\n  const publicServices = useMemo(() => fetchPublicServices(), [appStore]);\n  const totalAnnualFootprint = useMemo(\n    () => computeTotalAnnualFootprint(),\n    [appStore],\n  );\n\n  const footprints: Footprints = {\n    transport: FootprintByCategory.forTransport(\n      transport.annualFootprint,\n      totalAnnualFootprint,\n    ),\n    food: FootprintByCategory.forFood(\n      food.annualFootprint,\n      totalAnnualFootprint,\n    ),\n    goods: FootprintByCategory.forGoods(\n      transport.annualFootprint,\n      totalAnnualFootprint,\n    ),\n    housing: FootprintByCategory.forHousing(\n      transport.annualFootprint,\n      totalAnnualFootprint,\n    ),\n    publicServices: FootprintByCategory.forPublicServices(\n      publicServices.annualFootprint,\n      totalAnnualFootprint,\n    ),\n  };\n\n  return { footprints, totalAnnualFootprint };\n};\n","import { ScrollView, View } from \"react-native\";\n\nimport { EmissionsDataTable } from \"@view/screens/emissions/EmissionsDataTable\";\nimport { EmissionsDistribution } from \"@view/screens/emissions/EmissionsDistribution\";\nimport { EmissionsEstimationButton } from \"@view/screens/emissions/EmissionsEstimationButton\";\nimport { EmissionsTitle } from \"@view/screens/emissions/EmissionsTitle\";\nimport { useFootprints } from \"@view/view-models/useFootprints\";\n\nexport const Emissions = () => {\n  const { footprints, totalAnnualFootprint } = useFootprints();\n\n  return (\n    <ScrollView\n      contentContainerStyle={{ justifyContent: \"center\", alignItems: \"center\" }}\n    >\n      <View>\n        <EmissionsTitle />\n      </View>\n\n      <View style={{ width: 300 }}>\n        <EmissionsDistribution\n          footprints={footprints}\n          totalFootprint={totalAnnualFootprint}\n        />\n      </View>\n\n      {/* <View style={{ width: \"90%\" }}>\n        <EmissionsGoal />\n      </View> */}\n\n      <View style={{ width: \"90%\" }}>\n        <EmissionsDataTable footprints={footprints} />\n      </View>\n\n      <View style={{ width: \"90%\", marginTop: 20, marginBottom: 20 }}>\n        <EmissionsEstimationButton />\n      </View>\n    </ScrollView>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport { Text } from \"react-native-paper\";\n\nexport const Objectives = () => {\n  const { t } = useTranslation([\"common\"]);\n\n  return (\n    <Text style={{ textAlign: \"center\", marginTop: 10 }}>\n      {t(\"comingSoon\")}\n    </Text>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport { StyleSheet } from \"react-native\";\nimport { Avatar, Card } from \"react-native-paper\";\nimport { IconSource } from \"react-native-paper/lib/typescript/components/Icon\";\n\nimport { FootprintByCategory } from \"@view/view-models/Footprint\";\n\ntype Props = {\n  title: string;\n  footprintCategory: FootprintByCategory;\n  icon: IconSource;\n  onClick: () => void;\n};\n\nexport const ProfileCategoryCard = ({\n  title,\n  footprintCategory,\n  icon,\n  onClick,\n}: Props) => {\n  const { t } = useTranslation(\"common\");\n\n  const { image, footprint, color, part } = footprintCategory;\n\n  return (\n    <Card style={styles.card} onPress={onClick}>\n      <Card.Title\n        title={title}\n        subtitle={`${footprint} ${t(\"footprintKgPerYear\")}`}\n        left={(props: any) => (\n          <Avatar.Icon\n            {...props}\n            icon={icon}\n            style={{ backgroundColor: color }}\n          />\n        )}\n        right={(props: any) => (\n          <Avatar.Text\n            {...props}\n            label={`${part} %`}\n            color={color}\n            style={{\n              backgroundColor: null,\n              borderWidth: 2,\n              borderColor: color,\n              width: 40,\n              height: 40,\n            }}\n          />\n        )}\n        style={{ paddingRight: 16 }}\n      />\n      <Card.Cover\n        resizeMode=\"contain\"\n        source={{ uri: image }}\n        style={styles.image}\n      />\n    </Card>\n  );\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    width: \"100%\",\n  },\n  image: {\n    height: 150,\n  },\n});\n","import { useNavigation } from \"@react-navigation/native\";\nimport { useTranslation } from \"react-i18next\";\nimport { View, StyleSheet, ScrollView } from \"react-native\";\n\nimport { AppNavigationProp } from \"@common/AppNavigation\";\nimport { ProfileCategoryCard } from \"@view/screens/profile/ProfileCategoryCard\";\nimport { useProfile } from \"./useProfile\";\n\nexport const Profile = () => {\n  const { t } = useTranslation(\"common\");\n\n  const { navigate } = useNavigation<AppNavigationProp>();\n\n  const {\n    transportFootprint,\n    housingFootprint,\n    foodFootprint,\n    goodsFootprint,\n    publicServicesFootprint,\n  } = useProfile();\n\n  return (\n    <ScrollView>\n      <View style={styles.container}>\n        <ProfileCategoryCard\n          title={t(\"transport\")}\n          icon={transportFootprint.materialIcon}\n          footprintCategory={transportFootprint}\n          onClick={() => navigate(\"TransportProfile\")}\n        />\n        <ProfileCategoryCard\n          title={t(\"housing\")}\n          icon={housingFootprint.materialIcon}\n          footprintCategory={housingFootprint}\n          onClick={() => navigate(\"Profile\")}\n        />\n        <ProfileCategoryCard\n          title={t(\"food\")}\n          icon={foodFootprint.materialIcon}\n          footprintCategory={foodFootprint}\n          onClick={() => navigate(\"FoodProfile\")}\n        />\n        <ProfileCategoryCard\n          title={t(\"goods\")}\n          icon={goodsFootprint.materialIcon}\n          footprintCategory={goodsFootprint}\n          onClick={() => navigate(\"Profile\")}\n        />\n        <ProfileCategoryCard\n          title={t(\"publicServices\")}\n          icon={publicServicesFootprint.materialIcon}\n          footprintCategory={publicServicesFootprint}\n          onClick={() => navigate(\"Profile\")}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: 10,\n    gap: 10,\n  },\n});\n","import { FootprintCategories } from \"@domain/models/Categories\";\nimport { useFootprints } from \"@view/view-models/useFootprints\";\n\nexport const useProfile = () => {\n  const { footprints } = useFootprints();\n\n  return {\n    transportFootprint: footprints[FootprintCategories.TRANSPORT],\n    housingFootprint: footprints[FootprintCategories.HOUSING],\n    foodFootprint: footprints[FootprintCategories.FOOD],\n    goodsFootprint: footprints[FootprintCategories.GOODS],\n    publicServicesFootprint: footprints[FootprintCategories.PUBLIC_SERVICES],\n  };\n};\n","export type MilkType = \"cow\" | \"soy\" | \"oat\";\n\nexport const MilkTypes: MilkType[] = [\"cow\", \"soy\", \"oat\"];\n","import { StyleSheet } from \"react-native\";\n\nexport const styles = StyleSheet.create({\n  listContentContainer: {\n    padding: 15,\n    paddingLeft: 15, // needed to force the left padding\n  },\n  rowContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    gap: 10,\n  },\n  columnContainer: {\n    flexDirection: \"column\",\n    gap: 10,\n  },\n  divider: {\n    marginTop: 10,\n    marginBottom: 10,\n  },\n});\n","import { PropsWithChildren } from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { styles } from \"./styles\";\n\nexport const ColumnContainer = ({\n  children,\n  style,\n}: PropsWithChildren & { style?: ViewStyle }) => {\n  const { columnContainer } = styles;\n  return <View style={{ ...columnContainer, ...style }}>{children}</View>;\n};\n","import { PropsWithChildren } from \"react\";\nimport { View } from \"react-native\";\n\nimport { styles } from \"./styles\";\n\nexport const ListContentContainer = ({ children }: PropsWithChildren) => {\n  const { listContentContainer } = styles;\n  return <View style={listContentContainer}>{children}</View>;\n};\n","import { Divider } from \"react-native-paper\";\n\nimport { styles } from \"./styles\";\n\nexport const ListItemDivider = () => {\n  const { divider } = styles;\n  return <Divider style={divider} />;\n};\n","import { View } from \"react-native\";\nimport { Text } from \"react-native-paper\";\n\ntype Props = {\n  title: string;\n  subtitle?: string;\n};\n\nexport const ListTitle = ({ title, subtitle }: Props) => {\n  return (\n    <View style={{ flexDirection: \"column\" }}>\n      <Text variant={subtitle ? \"titleSmall\" : \"titleMedium\"}>{title}</Text>\n      {subtitle && <Text variant=\"bodySmall\">{subtitle}</Text>}\n    </View>\n  );\n};\n","import { PropsWithChildren } from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { styles } from \"./styles\";\n\nexport const RowContainer = ({\n  children,\n  style,\n}: PropsWithChildren & { style?: ViewStyle }) => {\n  const { rowContainer } = styles;\n  return <View style={{ ...rowContainer, ...style }}>{children}</View>;\n};\n","export type StringifyProperties<T> = {\n  [K in keyof T]: string;\n};\n\nexport const convertStringToType = (\n  value: string,\n  targetType: unknown,\n): any => {\n  if (targetType === \"string\") {\n    return value;\n  } else if (targetType === \"number\") {\n    return Number(value);\n  } else if (targetType === \"boolean\") {\n    return value === \"true\";\n  } else if (targetType === \"object\") {\n    return JSON.parse(value);\n  }\n\n  throw new Error(\"Unsupported targetType\");\n};\n","import { DefaultValues, FieldValues, useForm } from \"react-hook-form\";\n\nimport { WithAnnualFootprint } from \"@domain/models/types\";\nimport { convertStringToType } from \"@srctypes/utils\";\n\nexport const useUpdateForm = <\n  T extends WithAnnualFootprint,\n  K extends FieldValues,\n>(\n  defaultValues: DefaultValues<K>,\n  storedData: T,\n  updateUsecase: (data: T) => void,\n) => {\n  const { getValues, ...rest } = useForm<K>({ defaultValues });\n\n  const handleUpdate = (field: any) => {\n    const stringValue = getValues(field);\n    const targetType = typeof storedData[field as keyof T];\n    if (targetType === \"undefined\") return;\n    const value = convertStringToType(stringValue, targetType);\n    const updatedData = { ...storedData, [field]: value };\n    updateUsecase(updatedData);\n  };\n\n  return { handleUpdate, getValues, ...rest };\n};\n","import { TextInput, TextInputProps } from \"react-native-paper\";\n\ntype Props = TextInputProps & { positive?: boolean };\n\nexport const NumericInput = (props: Props) => {\n  const positive = props.positive ?? true;\n  const dense = props.dense ?? true;\n  const mode = props.mode ?? \"outlined\";\n\n  return (\n    <TextInput\n      {...props}\n      keyboardType=\"numeric\"\n      dense={dense}\n      mode={mode}\n      onChangeText={(text) => {\n        if (!props.onChangeText) return;\n        const isNumber = /^\\d*\\.?\\d*$/.test(text);\n        if (!isNumber) return;\n        if (positive && text.includes(\"-\")) return;\n        props.onChangeText(text);\n      }}\n      onBlur={(e) => {\n        if (props.onChangeText && e.target.value === \"\")\n          props.onChangeText(\"0\");\n        if (!props.onBlur) return;\n        props.onBlur(e);\n      }}\n    />\n  );\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { List, SegmentedButtons, Text } from \"react-native-paper\";\n\nimport { MilkTypes } from \"@domain/models/food/types\";\nimport { ColumnContainer } from \"@view/screens/profile/components/ColumnContainer\";\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport { ListItemDivider } from \"@view/screens/profile/components/ListItemDivider\";\nimport { ListTitle } from \"@view/screens/profile/components/ListTitle\";\nimport { RowContainer } from \"@view/screens/profile/components/RowContainer\";\nimport { FormValues, useDrinks } from \"./useDrinks\";\nimport { NumericInput } from \"@view/components/forms/NumericInput\";\n\nexport const DrinksSection = () => {\n  const { t } = useTranslation([\"food\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, annualFootprint, disableMilkSelection } =\n    useDrinks();\n\n  return (\n    <List.Accordion\n      title={\n        <ListTitle\n          title={t(\"emissions:food.drinks\")}\n          subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n        />\n      }\n      left={(props) => <List.Icon {...props} icon=\"water\" />}\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ textAlign: \"center\" }}>\n            {t(\"drinks.hotDrinksPerWeek\")}\n          </Text>\n        </RowContainer>\n        <RowContainer style={{ marginTop: 10 }}>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"drinks.coffeePerWeek\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"coffeePerWeek\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"coffeePerWeek\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n        <RowContainer style={{ marginTop: 10 }}>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"drinks.teaPerWeek\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"teaPerWeek\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"teaPerWeek\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n        <RowContainer style={{ marginTop: 10 }}>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"drinks.chocolatePerWeek\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"chocolatePerWeek\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"chocolatePerWeek\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n        <ColumnContainer style={{ marginTop: 10 }}>\n          <Text variant=\"labelLarge\">{t(\"milk.type\")}</Text>\n          <Controller<FormValues>\n            name=\"milkType\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"milkType\");\n                }}\n                buttons={MilkTypes.map((type) => ({\n                  value: type,\n                  label: t(`milk.types.${type}`),\n                  disabled: disableMilkSelection,\n                }))}\n              />\n            )}\n          />\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\">{t(\"drinks.bottledWater\")}</Text>\n          <Controller<FormValues>\n            name=\"bottledWater\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"bottledWater\");\n                }}\n                buttons={[\n                  { value: \"true\", label: t(\"common:yes\") },\n                  { value: \"false\", label: t(\"common:no\") },\n                ]}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"drinks.sodaLitersPerWeek\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"sodaLitersPerWeek\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"sodaLitersPerWeek\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"drinks.alcoholLitersPerWeek\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"alcoholLitersPerWeek\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"alcoholLitersPerWeek\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </List.Accordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { Drinks } from \"@domain/models/food/drinks/Drinks\";\nimport { StringifyProperties } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\n\nexport type FormValues = Omit<\n  StringifyProperties<\n    Drinks & {\n      chocolatePerWeek: number;\n      coffeePerWeek: number;\n      teaPerWeek: number;\n    }\n  >,\n  \"annualFootprint\"\n>;\n\nexport const useDrinks = () => {\n  const storedDrinks = useAppStore((store) => store.food.drinks);\n  const annualFootprint = new Drinks(storedDrinks).annualFootprint;\n\n  const { useUpdateFood } = useContext(UsecasesContext);\n  const { updateDrinks } = useUpdateFood();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    hotDrinksPerWeek: JSON.stringify(storedDrinks.hotDrinksPerWeek),\n    chocolatePerWeek: storedDrinks.hotDrinksPerWeek.chocolate.toString(),\n    coffeePerWeek: storedDrinks.hotDrinksPerWeek.coffee.toString(),\n    teaPerWeek: storedDrinks.hotDrinksPerWeek.tea.toString(),\n    milkType: storedDrinks.milkType,\n    alcoholLitersPerWeek: storedDrinks.alcoholLitersPerWeek.toString(),\n    sodaLitersPerWeek: storedDrinks.sodaLitersPerWeek.toString(),\n    bottledWater: storedDrinks.bottledWater.toString(),\n  });\n\n  const { handleUpdate, control, watch, setValue } = useUpdateForm<\n    Drinks,\n    FormValues\n  >(getDefaultValues(), storedDrinks, updateDrinks);\n\n  const chocolatePerWeek = watch(\"chocolatePerWeek\");\n  const coffeePerWeek = watch(\"coffeePerWeek\");\n  const teaPerWeek = watch(\"teaPerWeek\");\n\n  useEffect(() => {\n    setValue(\n      \"hotDrinksPerWeek\",\n      JSON.stringify({\n        chocolate: Number(chocolatePerWeek) || 0,\n        coffee: Number(coffeePerWeek) || 0,\n        tea: Number(teaPerWeek) || 0,\n      }),\n    );\n    handleUpdate(\"hotDrinksPerWeek\");\n  }, [chocolatePerWeek, coffeePerWeek, teaPerWeek]);\n\n  const disableMilkSelection = chocolatePerWeek === \"0\" || !chocolatePerWeek;\n\n  return { annualFootprint, control, handleUpdate, disableMilkSelection };\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { View } from \"react-native\";\nimport { List, SegmentedButtons, Text } from \"react-native-paper\";\n\nimport { FormValues, useMeals } from \"./useMeals\";\nimport {\n  BreakfastTypes,\n  Diets,\n  Frequencies,\n} from \"@domain/models/food/meals/types\";\nimport { MilkTypes } from \"@domain/models/food/types\";\nimport { ColumnContainer } from \"@view/screens/profile/components/ColumnContainer\";\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport { ListItemDivider } from \"@view/screens/profile/components/ListItemDivider\";\nimport { ListTitle } from \"@view/screens/profile/components/ListTitle\";\n\nexport const MealsSection = () => {\n  const { t } = useTranslation([\"food\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, milkAndCerealsBreakfast, annualFootprint } =\n    useMeals();\n\n  return (\n    <List.Accordion\n      title={\n        <ListTitle\n          title={t(\"emissions:food.meals\")}\n          subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n        />\n      }\n      left={(props) => <List.Icon {...props} icon=\"food\" />}\n    >\n      <ListContentContainer>\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"breakfast.type\")}</Text>\n          <View>\n            <Controller<FormValues>\n              name=\"breakfast\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"breakfast\");\n                  }}\n                  buttons={BreakfastTypes.slice(0, 3).map((type) => ({\n                    value: type,\n                    label: t(`breakfast.types.${type}`),\n                  }))}\n                />\n              )}\n            />\n            <Controller<FormValues>\n              name=\"breakfast\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"breakfast\");\n                  }}\n                  buttons={BreakfastTypes.slice(3, 5).map((type) => ({\n                    value: type,\n                    label: t(`breakfast.types.${type}`),\n                  }))}\n                />\n              )}\n            />\n          </View>\n          <Text variant=\"labelLarge\">{t(\"milk.type\")}</Text>\n          <Controller<FormValues>\n            name=\"milkType\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"milkType\");\n                }}\n                buttons={MilkTypes.map((type) => ({\n                  value: type,\n                  label: t(`milk.types.${type}`),\n                  disabled: !milkAndCerealsBreakfast,\n                }))}\n              />\n            )}\n          />\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"diet.type\")}</Text>\n          <View>\n            <Controller<FormValues>\n              name=\"diet\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"diet\");\n                  }}\n                  buttons={Diets.slice(0, 3).map((type) => ({\n                    value: type,\n                    label: t(`diet.types.${type}`),\n                  }))}\n                />\n              )}\n            />\n            <Controller<FormValues>\n              name=\"diet\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"diet\");\n                  }}\n                  buttons={Diets.slice(3, 5).map((type) => ({\n                    value: type,\n                    label: t(`diet.types.${type}`),\n                  }))}\n                />\n              )}\n            />\n          </View>\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"localProducts\")}</Text>\n          <View>\n            <Controller<FormValues>\n              name=\"localProducts\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"localProducts\");\n                  }}\n                  buttons={Frequencies.slice(0, 2).map((frequency) => ({\n                    value: frequency,\n                    label: t(`frequencies.${frequency}`),\n                  }))}\n                />\n              )}\n            />\n            <Controller<FormValues>\n              name=\"localProducts\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"localProducts\");\n                  }}\n                  buttons={Frequencies.slice(2, 4).map((frequency) => ({\n                    value: frequency,\n                    label: t(`frequencies.${frequency}`),\n                  }))}\n                />\n              )}\n            />\n          </View>\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"seasonalProducts\")}</Text>\n          <View>\n            <Controller<FormValues>\n              name=\"seasonalProducts\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"seasonalProducts\");\n                  }}\n                  buttons={Frequencies.slice(0, 2).map((frequency) => ({\n                    value: frequency,\n                    label: t(`frequencies.${frequency}`),\n                  }))}\n                />\n              )}\n            />\n            <Controller<FormValues>\n              name=\"seasonalProducts\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"seasonalProducts\");\n                  }}\n                  buttons={Frequencies.slice(2, 4).map((frequency) => ({\n                    value: frequency,\n                    label: t(`frequencies.${frequency}`),\n                  }))}\n                />\n              )}\n            />\n          </View>\n        </ColumnContainer>\n      </ListContentContainer>\n    </List.Accordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { Meals } from \"@domain/models/food/meals/Meals\";\nimport { BreakfastType } from \"@domain/models/food/meals/types\";\nimport { StringifyProperties } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\n\nexport type FormValues = Omit<StringifyProperties<Meals>, \"annualFootprint\">;\n\nexport const useMeals = () => {\n  const storedMeals = useAppStore((store) => store.food.meals);\n  const storedBreakfast = storedMeals.breakfast;\n  const annualFootprint = new Meals(storedMeals).annualFootprint;\n\n  const { useUpdateFood } = useContext(UsecasesContext);\n  const { updateMeals } = useUpdateFood();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    breakfast: storedMeals.breakfast,\n    milkType: storedMeals.milkType,\n    diet: storedMeals.diet,\n    localProducts: storedMeals.localProducts,\n    seasonalProducts: storedMeals.seasonalProducts,\n  });\n\n  const { handleUpdate, control, watch, setValue } = useUpdateForm<\n    Meals,\n    FormValues\n  >(getDefaultValues(), storedMeals, updateMeals);\n\n  useEffect(() => {\n    if (storedBreakfast !== \"milk & cereals\") {\n      setValue(\"milkType\", \"cow\");\n      handleUpdate(\"milkType\");\n    }\n  }, [storedBreakfast]);\n\n  const milkAndCerealsBreakfast =\n    (watch(\"breakfast\") as BreakfastType) === \"milk & cereals\";\n\n  return { annualFootprint, milkAndCerealsBreakfast, control, handleUpdate };\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { View } from \"react-native\";\nimport { Checkbox, List, RadioButton, Text } from \"react-native-paper\";\n\nimport { WasteQuantity } from \"@domain/models/food/waste/Waste\";\nimport { ColumnContainer } from \"@view/screens/profile/components/ColumnContainer\";\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport { ListItemDivider } from \"@view/screens/profile/components/ListItemDivider\";\nimport { ListTitle } from \"@view/screens/profile/components/ListTitle\";\nimport { FormValues, useWaste } from \"./useWaste\";\n\nexport const WasteSection = () => {\n  const { t } = useTranslation([\"food\", \"emissions\", \"common\"]);\n  const {\n    control,\n    handleUpdate,\n    annualFootprint,\n    setValue,\n    disableWasteBonuses,\n  } = useWaste();\n\n  return (\n    <List.Accordion\n      title={\n        <ListTitle\n          title={t(\"emissions:food.waste\")}\n          subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n        />\n      }\n      left={(props) => <List.Icon {...props} icon=\"recycle\" />}\n    >\n      <ListContentContainer>\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"waste.quantity\")}</Text>\n          <Controller<FormValues>\n            name=\"quantity\"\n            control={control}\n            render={({ field: { value } }) => (\n              <RadioButton.Group\n                value={value}\n                onValueChange={(newValue) => {\n                  setValue(\"quantity\", newValue);\n                  handleUpdate(\"quantity\");\n                }}\n              >\n                <View\n                  style={{ flexDirection: \"row\", alignItems: \"center\", gap: 5 }}\n                >\n                  <RadioButton value={\"base\" as WasteQuantity} />\n                  <Text>{t(\"waste.quantities.base\")}</Text>\n                </View>\n                <View\n                  style={{ flexDirection: \"row\", alignItems: \"center\", gap: 5 }}\n                >\n                  <RadioButton value={\"reduction\" as WasteQuantity} />\n                  <Text>{t(\"waste.quantities.reduction\")}</Text>\n                </View>\n                <View\n                  style={{ flexDirection: \"row\", alignItems: \"center\", gap: 5 }}\n                >\n                  <RadioButton value={\"zero\" as WasteQuantity} />\n                  <Text>{t(\"waste.quantities.zero\")}</Text>\n                </View>\n              </RadioButton.Group>\n            )}\n          />\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer style={{ gap: 0 }}>\n          <Text variant=\"labelLarge\" style={{ marginBottom: 5 }}>\n            {t(\"waste.bonus\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"wasteComposting\"\n            control={control}\n            render={({ field: { value } }) => (\n              <Checkbox.Item\n                style={{ height: 40 }}\n                disabled={disableWasteBonuses}\n                labelVariant=\"labelLarge\"\n                label={t(\"waste.bonuses.wasteComposting\")}\n                status={value === \"true\" ? \"checked\" : \"unchecked\"}\n                onPress={() => {\n                  setValue(\n                    \"wasteComposting\",\n                    value === \"true\" ? \"false\" : \"true\",\n                  );\n                  handleUpdate(\"wasteComposting\");\n                }}\n              />\n            )}\n          />\n          <Controller<FormValues>\n            name=\"noFoodWaste\"\n            control={control}\n            render={({ field: { value } }) => (\n              <Checkbox.Item\n                style={{ height: 40 }}\n                disabled={disableWasteBonuses}\n                labelVariant=\"labelLarge\"\n                label={t(\"waste.bonuses.noFoodWaste\")}\n                status={value === \"true\" ? \"checked\" : \"unchecked\"}\n                onPress={() => {\n                  setValue(\"noFoodWaste\", value === \"true\" ? \"false\" : \"true\");\n                  handleUpdate(\"noFoodWaste\");\n                }}\n              />\n            )}\n          />\n          <Controller<FormValues>\n            name=\"stopAdvertisingSticker\"\n            control={control}\n            render={({ field: { value } }) => (\n              <Checkbox.Item\n                style={{ height: 40 }}\n                disabled={disableWasteBonuses}\n                labelVariant=\"labelLarge\"\n                label={t(\"waste.bonuses.stopAdvertisingSticker\")}\n                status={value === \"true\" ? \"checked\" : \"unchecked\"}\n                onPress={() => {\n                  setValue(\n                    \"stopAdvertisingSticker\",\n                    value === \"true\" ? \"false\" : \"true\",\n                  );\n                  handleUpdate(\"stopAdvertisingSticker\");\n                }}\n              />\n            )}\n          />\n        </ColumnContainer>\n      </ListContentContainer>\n    </List.Accordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { Waste } from \"@domain/models/food/waste/Waste\";\nimport { StringifyProperties, convertStringToType } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\n\nexport type FormValues = Omit<\n  StringifyProperties<\n    Waste & {\n      noFoodWaste: boolean;\n      stopAdvertisingSticker: boolean;\n      wasteComposting: boolean;\n    }\n  >,\n  \"annualFootprint\"\n>;\n\nexport const useWaste = () => {\n  const storedWaste = useAppStore((store) => store.food.waste);\n  const annualFootprint = new Waste(storedWaste).annualFootprint;\n\n  const { useUpdateFood } = useContext(UsecasesContext);\n  const { updateWaste } = useUpdateFood();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    quantity: storedWaste.quantity,\n    wasteBonuses: JSON.stringify(storedWaste.wasteBonuses),\n    noFoodWaste: storedWaste.wasteBonuses.noFoodWaste.toString(),\n    wasteComposting: storedWaste.wasteBonuses.wasteComposting.toString(),\n    stopAdvertisingSticker:\n      storedWaste.wasteBonuses.stopAdvertisingSticker.toString(),\n  });\n\n  const { handleUpdate, control, watch, setValue } = useUpdateForm<\n    Waste,\n    FormValues\n  >(getDefaultValues(), storedWaste, updateWaste);\n\n  const noFoodWaste = watch(\"noFoodWaste\");\n  const stopAdvertisingSticker = watch(\"stopAdvertisingSticker\");\n  const wasteComposting = watch(\"wasteComposting\");\n\n  useEffect(() => {\n    const newWasteBonuses = JSON.stringify({\n      noFoodWaste: convertStringToType(noFoodWaste, \"boolean\"),\n      wasteComposting: convertStringToType(wasteComposting, \"boolean\"),\n      stopAdvertisingSticker: convertStringToType(\n        stopAdvertisingSticker,\n        \"boolean\",\n      ),\n    });\n    setValue(\"wasteBonuses\", newWasteBonuses);\n    handleUpdate(\"wasteBonuses\");\n  }, [noFoodWaste, stopAdvertisingSticker, wasteComposting]);\n\n  const disableWasteBonuses = storedWaste.quantity !== \"reduction\";\n\n  return {\n    annualFootprint,\n    control,\n    handleUpdate,\n    setValue,\n    disableWasteBonuses,\n  };\n};\n","import { ScrollView } from \"react-native\";\nimport { Divider, List } from \"react-native-paper\";\n\nimport { DrinksSection } from \"@view/screens/profile/food/drinks/DrinksSection\";\nimport { MealsSection } from \"@view/screens/profile/food/meals/MealsSection\";\nimport { WasteSection } from \"@view/screens/profile/food/waste/WasteSection\";\n\nexport const FoodProfile = () => {\n  return (\n    <ScrollView>\n      <List.Section>\n        <MealsSection />\n        <Divider />\n        <DrinksSection />\n        <Divider />\n        <WasteSection />\n      </List.Section>\n    </ScrollView>\n  );\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { List, SegmentedButtons, Text, TextInput } from \"react-native-paper\";\n\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport { ListItemDivider } from \"@view/screens/profile/components/ListItemDivider\";\nimport { ListTitle } from \"@view/screens/profile/components/ListTitle\";\nimport { RowContainer } from \"@view/screens/profile/components/RowContainer\";\nimport { FormValues, useBoat } from \"./useBoat\";\nimport { NumericInput } from \"@view/components/forms/NumericInput\";\n\nexport const BoatSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, usage, annualFootprint } = useBoat();\n\n  return (\n    <List.Accordion\n      title={\n        <ListTitle\n          title={t(\"emissions:transport.boat\")}\n          subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n        />\n      }\n      left={(props) => <List.Icon {...props} icon=\"ferry\" />}\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\">{t(\"boat.usage\")}</Text>\n          <Controller<FormValues>\n            name=\"usage\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"usage\");\n                }}\n                buttons={[\n                  { value: \"true\", label: t(\"common:yes\") },\n                  { value: \"false\", label: t(\"common:no\") },\n                ]}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2 }}>\n            {t(\"boat.hoursPerYear\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerYear\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerYear\")}\n                onChangeText={onChange}\n                value={value}\n                disabled={!usage}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </List.Accordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { Boat } from \"@domain/models/transport/boat/Boat\";\nimport { StringifyProperties } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\n\nexport type FormValues = Omit<StringifyProperties<Boat>, \"annualFootprint\">;\n\nexport const useBoat = () => {\n  const storedBoat = useAppStore((store) => store.transport.boat);\n  const storedBoatUsage = storedBoat.usage;\n  const annualFootprint = new Boat(storedBoat).annualFootprint;\n\n  const { useUpdateTransport } = useContext(UsecasesContext);\n  const { updateBoat } = useUpdateTransport();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    usage: storedBoat.usage.toString(),\n    hoursPerYear: storedBoat.hoursPerYear.toString(),\n  });\n\n  const { handleUpdate, control, watch, reset } = useUpdateForm<\n    Boat,\n    FormValues\n  >(getDefaultValues(), storedBoat, updateBoat);\n\n  useEffect(() => {\n    if (!storedBoatUsage) reset(getDefaultValues());\n  }, [storedBoatUsage]);\n\n  const usage = watch(\"usage\") === \"true\";\n\n  return { control, handleUpdate, usage, annualFootprint };\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { View } from \"react-native\";\nimport {\n  List,\n  TextInput,\n  Text,\n  SegmentedButtons,\n  HelperText,\n  Icon,\n} from \"react-native-paper\";\n\nimport {\n  carEngines,\n  carSizes,\n  fuelTypes,\n} from \"@domain/models/transport/car/Car\";\nimport { ColumnContainer } from \"@view/screens/profile/components/ColumnContainer\";\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport { ListItemDivider } from \"@view/screens/profile/components/ListItemDivider\";\nimport { ListTitle } from \"@view/screens/profile/components/ListTitle\";\nimport { RowContainer } from \"@view/screens/profile/components/RowContainer\";\nimport { FormValues, useCar } from \"./useCar\";\nimport { NumericInput } from \"@view/components/forms/NumericInput\";\n\nexport const CarSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, regularUser, annualFootprint } = useCar();\n\n  return (\n    <List.Accordion\n      title={\n        <ListTitle\n          title={t(\"emissions:transport.car\")}\n          subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n        />\n      }\n      left={(props) => <List.Icon {...props} icon=\"car\" />}\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 1.5 }}>\n            {t(\"car.kmPerYear\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"kmPerYear\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                right={<TextInput.Affix text=\"km\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"kmPerYear\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <RowContainer>\n            <Text variant=\"labelLarge\">{t(\"car.regularUser\")}</Text>\n            <Controller<FormValues>\n              name=\"regularUser\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"regularUser\");\n                  }}\n                  buttons={[\n                    { value: \"true\", label: t(\"common:yes\") },\n                    { value: \"false\", label: t(\"common:no\") },\n                  ]}\n                />\n              )}\n            />\n          </RowContainer>\n          {!regularUser && (\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <Icon source=\"information\" size={15} />\n              <HelperText\n                type=\"info\"\n                style={{ alignSelf: \"flex-start\", marginTop: 2 }}\n              >\n                {t(\"car.nonRegularUserHelperText\")}\n              </HelperText>\n            </View>\n          )}\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"car.size\")}</Text>\n          <View>\n            <Controller<FormValues>\n              name=\"size\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"size\");\n                  }}\n                  buttons={carSizes.slice(0, 3).map((size) => ({\n                    value: size,\n                    label: t(`car.sizes.${size}`),\n                    disabled: !regularUser,\n                  }))}\n                />\n              )}\n            />\n            <Controller<FormValues>\n              name=\"size\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"size\");\n                  }}\n                  buttons={carSizes.slice(3, 5).map((size) => ({\n                    value: size,\n                    label: t(`car.sizes.${size}`),\n                    disabled: !regularUser,\n                  }))}\n                />\n              )}\n            />\n          </View>\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"car.engine\")}</Text>\n          <Controller<FormValues>\n            name=\"engine\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"engine\");\n                }}\n                buttons={carEngines.map((engine) => ({\n                  value: engine,\n                  label: t(`car.engines.${engine}`),\n                  disabled: !regularUser,\n                }))}\n              />\n            )}\n          />\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"car.fuelType\")}</Text>\n          <Controller<FormValues>\n            name=\"fuelType\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"fuelType\");\n                }}\n                buttons={fuelTypes.map((fuelType) => ({\n                  value: fuelType,\n                  label: t(`car.fuelTypes.${fuelType}`),\n                  disabled: !regularUser,\n                }))}\n              />\n            )}\n          />\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2 }}>\n            {t(\"car.averageFuelConsumption\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"averageFuelConsumption\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                disabled={!regularUser}\n                right={<TextInput.Affix />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"averageFuelConsumption\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2 }}>\n            {t(\"car.age\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"age\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                right={<TextInput.Affix />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"age\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2 }}>\n            {t(\"car.averagePassengers\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"averagePassengers\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                right={<TextInput.Affix />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"averagePassengers\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </List.Accordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { Car } from \"@domain/models/transport/car/Car\";\nimport { StringifyProperties } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\n\nexport type FormValues = Omit<StringifyProperties<Car>, \"annualFootprint\">;\n\nexport const useCar = () => {\n  const storedCar = useAppStore((store) => store.transport.car);\n  const storedRegularUser = storedCar.regularUser;\n  const annualFootprint = new Car(storedCar).annualFootprint;\n\n  const { useUpdateTransport } = useContext(UsecasesContext);\n  const { updateCar } = useUpdateTransport();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    kmPerYear: storedCar.kmPerYear.toString(),\n    regularUser: storedCar.regularUser.toString(),\n    size: storedCar.size.toString(),\n    engine: storedCar.engine.toString(),\n    fuelType: storedCar.fuelType.toString(),\n    age: storedCar.age.toString(),\n    averagePassengers: storedCar.averagePassengers.toString(),\n    averageFuelConsumption: storedCar.averageFuelConsumption.toString(),\n  });\n\n  const { handleUpdate, control, watch, reset } = useUpdateForm<\n    Car,\n    FormValues\n  >(getDefaultValues(), storedCar, updateCar);\n\n  useEffect(() => {\n    if (!storedRegularUser) reset(getDefaultValues());\n  }, [storedRegularUser]);\n\n  const regularUser = watch(\"regularUser\") === \"true\";\n\n  return { control, handleUpdate, regularUser, annualFootprint };\n};\n","import { useTranslation } from \"react-i18next\";\nimport { List, Text } from \"react-native-paper\";\n\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\n\nexport const OtherSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n\n  return (\n    <List.Accordion\n      title={t(\"emissions:transport.other\")}\n      left={(props) => <List.Icon {...props} icon=\"bike\" />}\n    >\n      <ListContentContainer>\n        <Text>{t(\"common:comingSoon\")}</Text>\n      </ListContentContainer>\n    </List.Accordion>\n  );\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { List, SegmentedButtons, Text, TextInput } from \"react-native-paper\";\n\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport { ListItemDivider } from \"@view/screens/profile/components/ListItemDivider\";\nimport { ListTitle } from \"@view/screens/profile/components/ListTitle\";\nimport { RowContainer } from \"@view/screens/profile/components/RowContainer\";\nimport { FormValues, usePlane } from \"./usePlane\";\nimport { NumericInput } from \"@view/components/forms/NumericInput\";\n\nexport const PlaneSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, usage, annualFootprint } = usePlane();\n\n  return (\n    <List.Accordion\n      title={\n        <ListTitle\n          title={t(\"emissions:transport.plane\")}\n          subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n        />\n      }\n      left={(props) => <List.Icon {...props} icon=\"airplane\" />}\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\">{t(\"plane.usage\")}</Text>\n          <Controller<FormValues>\n            name=\"usage\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"usage\");\n                }}\n                buttons={[\n                  { value: \"true\", label: t(\"common:yes\") },\n                  { value: \"false\", label: t(\"common:no\") },\n                ]}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2 }}>\n            {t(\"plane.hoursPerYearInShortHaul\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerYearInShortHaul\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerYearInShortHaul\")}\n                onChangeText={onChange}\n                value={value}\n                disabled={!usage}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2 }}>\n            {t(\"plane.hoursPerYearInMediumHaul\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerYearInMediumHaul\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerYearInMediumHaul\")}\n                onChangeText={onChange}\n                value={value}\n                disabled={!usage}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2 }}>\n            {t(\"plane.hoursPerYearInLongHaul\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerYearInLongHaul\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerYearInLongHaul\")}\n                onChangeText={onChange}\n                value={value}\n                disabled={!usage}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </List.Accordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { Plane } from \"@domain/models/transport/plane/Plane\";\nimport { StringifyProperties } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\n\nexport type FormValues = Omit<StringifyProperties<Plane>, \"annualFootprint\">;\n\nexport const usePlane = () => {\n  const storedPlane = useAppStore((store) => store.transport.plane);\n  const storedPlaneUsage = storedPlane.usage;\n  const annualFootprint = new Plane(storedPlane).annualFootprint;\n\n  const { useUpdateTransport } = useContext(UsecasesContext);\n  const { updatePlane } = useUpdateTransport();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    usage: storedPlane.usage.toString(),\n    hoursPerYearInShortHaul: storedPlane.hoursPerYearInShortHaul.toString(),\n    hoursPerYearInMediumHaul: storedPlane.hoursPerYearInMediumHaul.toString(),\n    hoursPerYearInLongHaul: storedPlane.hoursPerYearInLongHaul.toString(),\n  });\n\n  const { handleUpdate, control, watch, reset } = useUpdateForm<\n    Plane,\n    FormValues\n  >(getDefaultValues(), storedPlane, updatePlane);\n\n  useEffect(() => {\n    if (!storedPlaneUsage) reset(getDefaultValues());\n  }, [storedPlaneUsage]);\n\n  const usage = watch(\"usage\") === \"true\";\n\n  return { control, handleUpdate, usage, annualFootprint };\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { List, Text, TextInput } from \"react-native-paper\";\n\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport { ListItemDivider } from \"@view/screens/profile/components/ListItemDivider\";\nimport { ListTitle } from \"@view/screens/profile/components/ListTitle\";\nimport { RowContainer } from \"@view/screens/profile/components/RowContainer\";\nimport { FormValues, usePublicTransport } from \"./usePublicTransport\";\nimport { NumericInput } from \"@view/components/forms/NumericInput\";\n\nexport const PublicTransportSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, annualFootprint } = usePublicTransport();\n\n  return (\n    <List.Accordion\n      title={\n        <ListTitle\n          title={t(\"emissions:transport.public\")}\n          subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n        />\n      }\n      left={(props) => <List.Icon {...props} icon=\"train\" />}\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"public.hoursPerYearInTrain\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerYearInTrain\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerYearInTrain\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"public.hoursPerWeekInBus\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerWeekInBus\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerWeekInBus\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"public.hoursPerWeekInMetro\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerWeekInMetro\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerWeekInMetro\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </List.Accordion>\n  );\n};\n","import { useContext } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { PublicTransport } from \"@domain/models/transport/public-transport/PublicTransport\";\nimport { StringifyProperties } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\n\nexport type FormValues = Omit<\n  StringifyProperties<PublicTransport>,\n  \"annualFootprint\"\n>;\n\nexport const usePublicTransport = () => {\n  const storedPublicTransport = useAppStore(\n    (store) => store.transport.publicTransport,\n  );\n  const annualFootprint = new PublicTransport(storedPublicTransport)\n    .annualFootprint;\n\n  const { useUpdateTransport } = useContext(UsecasesContext);\n  const { updatePublicTransport } = useUpdateTransport();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    hoursPerYearInTrain: storedPublicTransport.hoursPerYearInTrain.toString(),\n    hoursPerWeekInBus: storedPublicTransport.hoursPerWeekInBus.toString(),\n    hoursPerWeekInMetro: storedPublicTransport.hoursPerWeekInMetro.toString(),\n  });\n\n  const { handleUpdate, control } = useUpdateForm<PublicTransport, FormValues>(\n    getDefaultValues(),\n    storedPublicTransport,\n    updatePublicTransport,\n  );\n\n  return { control, handleUpdate, annualFootprint };\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { View } from \"react-native\";\nimport { List, SegmentedButtons, Text, TextInput } from \"react-native-paper\";\n\nimport { TwoWheelerTypes } from \"@domain/models/transport/two-wheeler/TwoWheeler\";\nimport { ColumnContainer } from \"@view/screens/profile/components/ColumnContainer\";\nimport { ListContentContainer } from \"@view/screens/profile/components/ListContentContainer\";\nimport { ListItemDivider } from \"@view/screens/profile/components/ListItemDivider\";\nimport { ListTitle } from \"@view/screens/profile/components/ListTitle\";\nimport { RowContainer } from \"@view/screens/profile/components/RowContainer\";\nimport { FormValues, useTwhoWheeler } from \"./useTwoWheeler\";\nimport { NumericInput } from \"@view/components/forms/NumericInput\";\n\nexport const TwoWheelerSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, usage, annualFootprint } = useTwhoWheeler();\n\n  return (\n    <List.Accordion\n      title={\n        <ListTitle\n          title={t(\"emissions:transport.twoWheeler\")}\n          subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n        />\n      }\n      left={(props) => <List.Icon {...props} icon=\"motorbike\" />}\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\">{t(\"twoWheeler.usage\")}</Text>\n          <Controller<FormValues>\n            name=\"usage\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"usage\");\n                }}\n                buttons={[\n                  { value: \"true\", label: t(\"common:yes\") },\n                  { value: \"false\", label: t(\"common:no\") },\n                ]}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"twoWheeler.type\")}</Text>\n          <View>\n            <Controller<FormValues>\n              name=\"type\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"type\");\n                  }}\n                  buttons={TwoWheelerTypes.slice(0, 2).map((type) => ({\n                    value: type,\n                    label: t(`twoWheeler.types.${type}`),\n                    disabled: !usage,\n                  }))}\n                />\n              )}\n            />\n            <Controller<FormValues>\n              name=\"type\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"type\");\n                  }}\n                  buttons={TwoWheelerTypes.slice(2, 4).map((type) => ({\n                    value: type,\n                    label: t(`twoWheeler.types.${type}`),\n                    disabled: !usage,\n                  }))}\n                />\n              )}\n            />\n          </View>\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 1.5 }}>\n            {t(\"car.kmPerYear\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"kmPerYear\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <NumericInput\n                right={<TextInput.Affix text=\"km\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"kmPerYear\")}\n                onChangeText={onChange}\n                value={value}\n                disabled={!usage}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </List.Accordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"@common/UsecasesContext\";\nimport { useAppStore } from \"@data/store/store\";\nimport { TwoWheeler } from \"@domain/models/transport/two-wheeler/TwoWheeler\";\nimport { StringifyProperties } from \"@srctypes/utils\";\nimport { useUpdateForm } from \"@view/screens/profile/utils/useUpdateForm\";\n\nexport type FormValues = Omit<\n  StringifyProperties<TwoWheeler>,\n  \"annualFootprint\"\n>;\n\nexport const useTwhoWheeler = () => {\n  const storedTwoWheeler = useAppStore((store) => store.transport.twoWheeler);\n  const storedTwoWheelerUsage = storedTwoWheeler.usage;\n  const annualFootprint = new TwoWheeler(storedTwoWheeler).annualFootprint;\n\n  const { useUpdateTransport } = useContext(UsecasesContext);\n  const { updateTwoWheeler } = useUpdateTransport();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    kmPerYear: storedTwoWheeler.kmPerYear.toString(),\n    type: storedTwoWheeler.type.toString(),\n    usage: storedTwoWheeler.usage.toString(),\n  });\n\n  const { handleUpdate, control, watch, reset } = useUpdateForm<\n    TwoWheeler,\n    FormValues\n  >(getDefaultValues(), storedTwoWheeler, updateTwoWheeler);\n\n  useEffect(() => {\n    if (!storedTwoWheelerUsage) reset(getDefaultValues());\n  }, [storedTwoWheelerUsage]);\n\n  const usage = watch(\"usage\") === \"true\";\n\n  return { control, handleUpdate, usage, annualFootprint };\n};\n","import { ScrollView } from \"react-native\";\nimport { Divider, List } from \"react-native-paper\";\n\nimport { BoatSection } from \"@view/screens/profile/transport/boat/BoatSection\";\nimport { CarSection } from \"@view/screens/profile/transport/car/CarSection\";\nimport { OtherSection } from \"@view/screens/profile/transport/other/OtherSection\";\nimport { PlaneSection } from \"@view/screens/profile/transport/plane/PlaneSection\";\nimport { PublicTransportSection } from \"@view/screens/profile/transport/public-transport/PublicTransportSection\";\nimport { TwoWheelerSection } from \"@view/screens/profile/transport/two-wheeler/TwoWheelerSection\";\n\nexport const TransportProfile = () => {\n  return (\n    <ScrollView>\n      <List.Section>\n        <CarSection />\n        <Divider />\n        <TwoWheelerSection />\n        <Divider />\n        <PlaneSection />\n        <Divider />\n        <BoatSection />\n        <Divider />\n        <PublicTransportSection />\n        <Divider />\n        <OtherSection />\n      </List.Section>\n    </ScrollView>\n  );\n};\n","import Icons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport {\n  NativeStackNavigationProp,\n  createNativeStackNavigator,\n} from \"@react-navigation/native-stack\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { Actions } from \"@view/screens/actions/Actions\";\nimport { Comparator } from \"@view/screens/comparator/Comparator\";\nimport { Emissions } from \"@view/screens/emissions/Emissions\";\nimport { Objectives } from \"@view/screens/objectives/Objectives\";\nimport { Profile } from \"@view/screens/profile/Profile\";\nimport { FoodProfile } from \"@view/screens/profile/food/Food\";\nimport { TransportProfile } from \"@view/screens/profile/transport/Transport\";\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\ntype RootStackParamList = {\n  Home: undefined;\n  Profile: undefined;\n  TransportProfile: undefined;\n  FoodProfile: undefined;\n};\n\nexport type AppNavigationProp = NativeStackNavigationProp<RootStackParamList>;\n\nconst iconSize = 24;\n\nexport const AppNavigation = () => {\n  const { t } = useTranslation(\"common\");\n\n  return (\n    <Stack.Navigator initialRouteName=\"Home\">\n      <Stack.Screen\n        name=\"Home\"\n        component={TabNavigator}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen\n        name=\"Profile\"\n        component={Profile}\n        options={{ title: t(\"screens.Profile\") }}\n      />\n      <Stack.Screen\n        name=\"TransportProfile\"\n        component={TransportProfile}\n        options={{ title: t(\"screens.Transport\") }}\n      />\n      <Stack.Screen\n        name=\"FoodProfile\"\n        component={FoodProfile}\n        options={{ title: t(\"screens.Food\") }}\n      />\n    </Stack.Navigator>\n  );\n};\n\nconst TabNavigator = () => {\n  const { t } = useTranslation(\"common\");\n\n  return (\n    <Tab.Navigator\n      initialRouteName=\"Emissions\"\n      screenOptions={{\n        tabBarLabelPosition: \"below-icon\",\n        tabBarStyle: { height: 50, paddingBottom: 5 },\n        headerShown: false,\n      }}\n    >\n      <Tab.Screen\n        name=\"Emissions\"\n        component={Emissions}\n        options={{\n          title: t(\"screens.Emissions\"),\n          tabBarIcon: ({ focused, color }) => {\n            return (\n              <Icons\n                name={focused ? \"home\" : \"home-outline\"}\n                size={iconSize}\n                color={color}\n              />\n            );\n          },\n        }}\n      />\n      <Tab.Screen\n        name=\"Actions\"\n        component={Actions}\n        options={{\n          title: t(\"screens.Actions\"),\n          tabBarIcon: ({ focused, color }) => {\n            return (\n              <Icons\n                name={focused ? \"check-circle\" : \"check-circle-outline\"}\n                size={iconSize}\n                color={color}\n              />\n            );\n          },\n        }}\n      />\n      <Tab.Screen\n        name=\"Objectifs\"\n        component={Objectives}\n        options={{\n          title: t(\"screens.Objectives\"),\n          tabBarIcon: ({ focused, color }) => {\n            return (\n              <Icons\n                name={focused ? \"medal\" : \"medal-outline\"}\n                size={iconSize}\n                color={color}\n              />\n            );\n          },\n        }}\n      />\n      <Tab.Screen\n        name=\"Comparateur\"\n        component={Comparator}\n        options={{\n          title: t(\"screens.Comparator\"),\n          tabBarIcon: ({ color }) => {\n            return (\n              <Icons name=\"compare-horizontal\" size={iconSize} color={color} />\n            );\n          },\n        }}\n      />\n    </Tab.Navigator>\n  );\n};\n","/* eslint-disable no-undef */\n/* eslint-disable prettier/prettier */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  const isEnvProduction = process.env.NODE_ENV === \"production\";\n  if (isEnvProduction && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport * as fr from \"./fr\";\n\nconst resources = { fr };\n\ni18n.use(initReactI18next).init({\n  resources,\n  lng: \"fr\",\n  interpolation: {\n    escapeValue: false, // react already safes from xss\n  },\n});\n\nexport default i18n;\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { registerRootComponent } from \"expo\";\nimport { useEffect, useState } from \"react\";\nimport {\n  Linking,\n  Platform,\n  SafeAreaView,\n  StyleSheet,\n  View,\n} from \"react-native\";\nimport { ActivityIndicator, PaperProvider } from \"react-native-paper\";\n\nimport { AppTheme } from \"./AppTheme\";\nimport { AppNavigation } from \"@common/AppNavigation\";\nimport * as serviceWorkerRegistration from \"./src/serviceWorkerRegistration\";\n\nimport \"./src/view/translations/i18n\";\n\nconst PERSISTENCE_KEY = \"NAVIGATION_STATE_V1\";\n\nconst App = () => {\n  const [isReady, setIsReady] = useState(!__DEV__);\n  const [initialState, setInitialState] = useState();\n\n  useEffect(() => {\n    const restoreState = async () => {\n      try {\n        const initialUrl = await Linking.getInitialURL();\n        if (__DEV__ || (Platform.OS !== \"web\" && initialUrl == null)) {\n          // Only restore state if there's no deep link and we're not on web\n          const savedStateString = await AsyncStorage.getItem(PERSISTENCE_KEY);\n          const state = savedStateString\n            ? JSON.parse(savedStateString)\n            : undefined;\n          if (state !== undefined) setInitialState(state);\n        }\n      } finally {\n        setIsReady(true);\n      }\n    };\n\n    if (!isReady) restoreState();\n  }, [isReady]);\n\n  if (!isReady) return <ActivityIndicator />;\n\n  return (\n    <PaperProvider theme={AppTheme}>\n      <NavigationContainer\n        theme={AppTheme}\n        initialState={initialState}\n        onStateChange={(state) =>\n          AsyncStorage.setItem(PERSISTENCE_KEY, JSON.stringify(state))\n        }\n      >\n        <SafeAreaView style={styles.container}>\n          <View style={styles.content}>\n            <AppNavigation />\n          </View>\n        </SafeAreaView>\n      </NavigationContainer>\n    </PaperProvider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n  },\n  content: {\n    flex: 1,\n    width: \"100%\",\n    maxWidth: 550,\n  },\n});\n\nexport default registerRootComponent(App);\n\nserviceWorkerRegistration.register();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/impact/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [358], () => (__webpack_require__(1559)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["f","MaterialTheme","_objectSpread","MD3DarkTheme","colors","primary","onPrimary","inversePrimary","AppTheme","merge","NavigationTheme","Actions","t","useTranslation","_jsx","Text","style","textAlign","marginTop","children","ComparatorForMobile","WebView","originWhitelist","source","html","ComparatorForWeb","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","ademeComparator","useRef","useEffect","_ademeComparator$curr4","script","document","createElement","id","src","dataset","type","search","async","onload","_ademeComparator$curr","_ademeComparator$curr2","current","querySelector","remove","setTimeout","_ademeComparator$curr3","setAttribute","appendChild","_jsxs","_Fragment","View","flex","justifyContent","alignItems","ActivityIndicator","size","overflow","ref","visibility","Comparator","Platform","OS","EmissionsDataTable","_ref","footprints","useTheme","DataTable","Header","Title","numeric","Object","values","sort","a","b","footprint","map","emissionsCategory","Row","Cell","category","width","height","borderRadius","backgroundColor","color","flexDirection","background","fontSize","part","EmissionsDistribution","totalFootprint","footprintByCategories","viewBox","VictoryPie","colorScale","_ref2","standalone","radius","innerRadius","labelRadius","labels","data","_ref3","x","icon","y","VictoryLabel","textAnchor","fill","onBackground","pieWidth","pieHeight","text","toFixed","EmissionsEstimationButton","navigate","useNavigation","Button","mode","textColor","contentStyle","labelStyle","onPress","EmissionsTitle","variant","paddingTop","weeksInYear","defaultHotDrinksPerWeek","coffee","tea","chocolate","Drinks","hotDrinksPerWeek","bottledWater","sodaLitersPerWeek","alcoholLitersPerWeek","milkType","_classCallCheck","this","_createClass","key","get","Math","round","hotDrinksAnnualFootprint","coldDrinksAnnualFootprint","coffeeAnnualFootprint","teaAnnualFootprint","chocolateAnnualFootprint","groundCoffeeFootprint","cupOfTeaFootprintWithoutConsumption","cocoaFootprint","milkFootprint","bottledWaterAnnualFootprint","sodaAnnualFootprint","alcoholAnnualFootprint","annualWaterConsumption","localProductsFootprintReductionRate","frequency","MealTypes","BreakfastTypes","Diets","Frequencies","Meals","breakfast","diet","localProducts","seasonalProducts","lunchesAndDinersPerWeek","vegan","vegetarian","whiteMeat","redMeat","fattyFish","whiteFish","lunchesAndDinersPerWeekByDiet","lunchesAndDinersAnnualFootprint","breakfastAnnualFootprint","seasonalProductsBonus","lunchesAndDinersWeeklyFootprint","weeklyFootprint","mealType","mealFootprint","mealFootprintReduction","Number","breakfastFootprint","_this$milkType","milkAndCerealsBreakfastFootprint","seasonalFactor","seasonPart","seasonalProductsPart","Waste","quantity","wasteBonuses","noFoodWaste","stopAdvertisingSticker","wasteComposting","wasteFootprint","defaultFootprint","householdWasteFootprint","wasteBonus","_this$wasteBonuses","footprintBonus","Food","meals","drinks","waste","annualFootprint","PublicServices","Boat","_ref$usage","usage","_ref$hoursPerYear","hoursPerYear","value","defaultSize","defaultEngine","defaultFuelType","defaultAverageFuelConsumption","small","medium","vul","sedan","suv","defaultAverageFootPrintPerLiter","diesel","gasoline","biofuels","averageCarKmPerYear","thermalMaintenanceFootprint","g45","thermalCarManufacturingFootprint","hybridCarManufacturingFootprint","electricCarManufacturingFootprint","carSizes","carEngines","fuelTypes","Car","_ref$regularUser","regularUser","_ref$kmPerYear","kmPerYear","_ref$age","age","_ref$size","_ref$engine","engine","_ref$fuelType","fuelType","_ref$averageFuelConsu","averageFuelConsumption","_ref$averagePassenger","averagePassengers","lifetime","floor","regularUserFootprint","nonRegularUserFootprint","carUseFootprint","amortizedManufacturingFootprint","manufacturingFootprint","rentalFactor","footprintPerKm","footprintBasePerKm","thermalCarFootprint","weightedMaintenanceFootprint","airConditionerFootprint","fluorinatedGasEmissions","amortization","defaultAverageSpeed","defaultAverageFootprintPerKm","Plane","_ref$hoursPerYearInSh","hoursPerYearInShortHaul","_ref$hoursPerYearInMe","hoursPerYearInMediumHaul","_ref$hoursPerYearInLo","hoursPerYearInLongHaul","shortHaulFootprint","mediumHaulFootprint","longHaulFootprint","PublicTransport","_ref$hoursPerYearInTr","hoursPerYearInTrain","_ref$hoursPerWeekInMe","hoursPerWeekInMetro","_ref$hoursPerWeekInBu","hoursPerWeekInBus","metroFootprintPerKm","busFootprintPerKm","trainAnnualFootprint","metroWeekFootprint","busWeekFootprint","defaultTwoWheelerType","twoWheelerDefaultFootprint","thermalScooter","electricScooter","motorbikeLT250","motorbikeGT250","TwoWheelerTypes","TwoWheeler","_ref$type","maintenanceFootprint","Transport","car","twoWheeler","plane","boat","publicTransport","EmissionsInMemoryRepository","transport","food","publicServices","useAppStore","create","devtools","persist","name","storage","createJSONStorage","AsyncStorage","persistedState","currentState","deepMerge","appStoreActions","getState","setState","state","EmissionsStoreRepository","storedTransport","storedFood","createUseComputeTotalAnnualFootprint","emissionsRepository","computeTotalAnnualFootprint","fetchTransport","fetchFood","fetchPublicServices","createUseFetchFood","createUseFetchPublicServices","createUseFetchTransport","createUseUpdateFood","updateMeals","newMeals","newFood","updateFood","updateDrinks","newDrinks","updateWaste","newWaste","createUseUpdateTransport","updateCar","newCar","initValuesForNonRegularUser","newTransport","updateTransport","updateTwoWheeler","newTwoWheeler","resetValues","updatePlane","newPlane","updateBoat","newBoat","updatePublicTransport","newPublicTransport","usecases","repositories","useFetchTransport","useUpdateTransport","useFetchFood","useUpdateFood","useComputeTotalAnnualFootprint","useFetchPublicServices","initUsecases","UsecasesContext","createContext","FootprintCategories","FootprintByCategory","_this","image","materialIcon","computePart","FootprintCategoryTransport","FootprintCategoryFood","FootprintCategoryHousing","FootprintCategoryGoods","FootprintCategoryPublicServices","_FootprintByCategory","_inherits","_super","_createSuper","_this2","call","TRANSPORT","transportImage","_FootprintByCategory2","_super2","_this3","FOOD","foodImage","_FootprintByCategory3","_super3","_this4","HOUSING","housingImage","_FootprintByCategory4","_super4","_this5","GOODS","goodsImage","_FootprintByCategory5","_super5","_this6","PUBLIC_SERVICES","publicServicesImage","useFootprints","appStore","store","_useContext","useContext","useMemo","totalAnnualFootprint","forTransport","forFood","goods","forGoods","housing","forHousing","forPublicServices","Emissions","_useFootprints","ScrollView","contentContainerStyle","marginBottom","Objectives","ProfileCategoryCard","title","footprintCategory","onClick","Card","styles","card","subtitle","left","props","Avatar","right","label","borderWidth","borderColor","paddingRight","Cover","resizeMode","uri","StyleSheet","Profile","_useProfile","transportFootprint","housingFootprint","foodFootprint","goodsFootprint","publicServicesFootprint","useProfile","container","padding","gap","MilkTypes","listContentContainer","paddingLeft","rowContainer","columnContainer","divider","ColumnContainer","ListContentContainer","ListItemDivider","Divider","ListTitle","RowContainer","convertStringToType","targetType","JSON","parse","Error","useUpdateForm","defaultValues","storedData","updateUsecase","_useForm","useForm","getValues","rest","_objectWithoutProperties","_excluded","handleUpdate","field","stringValue","updatedData","_defineProperty","NumericInput","_props$positive","_props$dense","_props$mode","positive","dense","TextInput","keyboardType","onChangeText","test","includes","onBlur","e","target","DrinksSection","_useDrinks","storedDrinks","_useUpdateForm","stringify","chocolatePerWeek","toString","coffeePerWeek","teaPerWeek","control","watch","setValue","disableMilkSelection","useDrinks","List","Controller","render","_ref$field","onChange","_ref2$field","_ref3$field","_ref4","_ref4$field","SegmentedButtons","density","onValueChange","buttons","disabled","_ref5","_ref5$field","_ref6","_ref6$field","_ref7","_ref7$field","MealsSection","_useMeals","storedMeals","storedBreakfast","milkAndCerealsBreakfast","useMeals","slice","_ref8","_ref8$field","_ref9","_ref9$field","WasteSection","_useWaste","storedWaste","newWasteBonuses","disableWasteBonuses","useWaste","RadioButton","Group","newValue","Checkbox","Item","labelVariant","status","FoodProfile","BoatSection","_useBoat","storedBoat","storedBoatUsage","getDefaultValues","reset","useBoat","Affix","CarSection","_useCar","storedCar","storedRegularUser","useCar","Icon","HelperText","alignSelf","OtherSection","PlaneSection","_usePlane","storedPlane","storedPlaneUsage","usePlane","PublicTransportSection","_usePublicTransport","storedPublicTransport","usePublicTransport","TwoWheelerSection","_useTwhoWheeler","storedTwoWheeler","storedTwoWheelerUsage","useTwhoWheeler","TransportProfile","Stack","createNativeStackNavigator","Tab","createBottomTabNavigator","AppNavigation","Navigator","initialRouteName","Screen","component","TabNavigator","options","headerShown","screenOptions","tabBarLabelPosition","tabBarStyle","paddingBottom","tabBarIcon","focused","Icons","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","resources","fr","i18n","initReactI18next","init","lng","interpolation","escapeValue","PERSISTENCE_KEY","content","maxWidth","registerRootComponent","isReady","setIsReady","_useState3","_useState4","initialState","setInitialState","restoreState","_asyncToGenerator","initialUrl","Linking","getInitialURL","savedStateString","getItem","undefined","apply","arguments","PaperProvider","theme","NavigationContainer","onStateChange","setItem","SafeAreaView","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","ns","def","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}