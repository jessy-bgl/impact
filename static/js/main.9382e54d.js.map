{"version":3,"file":"static/js/main.9382e54d.js","mappings":"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","sources":["AppTheme.ts","src/view/screens/emissions/EmissionsDataTable.tsx","src/view/screens/emissions/EmissionsDistribution.tsx","src/view/screens/emissions/EmissionsEstimationButton.tsx","src/view/screens/emissions/EmissionsTitle.tsx","src/domain/models/Categories.ts","src/data/store/store.ts","src/view/view-models/Footprint.ts","src/domain/models/public-services/PublicServices.ts","src/domain/models/transport/boat/Boat.ts","src/domain/models/transport/boat/constants.ts","src/domain/models/transport/car/constants.ts","src/domain/models/transport/car/Car.ts","src/domain/models/transport/plane/constants.ts","src/domain/models/transport/plane/Plane.ts","src/domain/models/transport/public-transport/PublicTransport.ts","src/domain/models/transport/public-transport/constants.ts","src/domain/models/transport/two-wheeler/constants.ts","src/domain/models/transport/two-wheeler/TwoWheeler.ts","src/domain/models/transport/Transport.ts","src/data/repositories/EmissionsInMemoryRepository.ts","src/data/store/storeActions.ts","src/data/repositories/EmissionsStoreRepository.ts","src/domain/usecases/computeTotalAnnualFootprint.ts","src/domain/usecases/fetchPublicServices.ts","src/domain/usecases/fetchTransport.ts","src/domain/usecases/updateTransport.ts","src/common/UsecasesContext.ts","src/view/view-models/useFootprints.ts","src/view/screens/emissions/Emissions.tsx","src/view/screens/profile/ProfileCategoryCard.tsx","src/view/screens/profile/Profile.tsx","src/view/screens/profile/useProfile.ts","src/view/screens/profile/utils/useUpdateForm.ts","src/types/utils.ts","src/view/screens/profile/components/styles.ts","src/view/screens/profile/components/ListContentContainer.tsx","src/view/screens/profile/components/ListItemDivider.tsx","src/view/screens/profile/components/ListTitle.tsx","src/view/screens/profile/components/RowContainer.tsx","src/view/screens/profile/transport/boat/BoatSection.tsx","src/view/screens/profile/transport/boat/useBoat.ts","src/view/screens/profile/components/ColumnContainer.tsx","src/view/screens/profile/transport/car/CarSection.tsx","src/view/screens/profile/transport/car/useCar.ts","src/view/screens/profile/transport/other/OtherSection.tsx","src/view/screens/profile/transport/plane/PlaneSection.tsx","src/view/screens/profile/transport/plane/usePlane.ts","src/view/screens/profile/transport/public-transport/PublicTransportSection.tsx","src/view/screens/profile/transport/public-transport/usePublicTransport.ts","src/view/screens/profile/transport/two-wheeler/TwoWheelerSection.tsx","src/view/screens/profile/transport/two-wheeler/useTwoWheeler.ts","src/view/screens/profile/transport/Transport.tsx","src/common/AppNavigation.tsx","src/serviceWorkerRegistration.js","src/view/traductions/i18n.js","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { DarkTheme as NavigationTheme } from \"@react-navigation/native\";\nimport merge from \"deepmerge\";\nimport { MD3DarkTheme } from \"react-native-paper\";\n\nconst MaterialTheme = {\n  ...MD3DarkTheme,\n  colors: {\n    ...MD3DarkTheme.colors,\n    primary: \"#59B158\",\n    onPrimary: \"#111\",\n    inversePrimary: \"#fff\",\n  },\n};\n\nexport const AppTheme = merge(NavigationTheme, MaterialTheme);\n","import { useTranslation } from \"react-i18next\";\nimport { View } from \"react-native\";\nimport { DataTable, Text, useTheme } from \"react-native-paper\";\n\nimport { Footprints } from \"../../view-models/Footprint\";\n\ntype Props = {\n  footprints: Footprints;\n};\n\nexport const EmissionsDataTable = ({ footprints }: Props) => {\n  const { t } = useTranslation([\"emissions\", \"common\"]);\n  const { colors } = useTheme();\n\n  return (\n    <DataTable>\n      <DataTable.Header>\n        <DataTable.Title>{t(\"category\")}</DataTable.Title>\n        <DataTable.Title numeric>{t(\"annualFootprint\")}</DataTable.Title>\n        <DataTable.Title numeric>{t(\"part\")}</DataTable.Title>\n      </DataTable.Header>\n\n      {Object.values(footprints)\n        .sort((a, b) => b.footprint - a.footprint)\n        .map((emissionsCategory) => (\n          <DataTable.Row key={emissionsCategory.category}>\n            <DataTable.Cell style={{ alignItems: \"center\" }}>\n              {t(`categories.${emissionsCategory.category}`)}\n            </DataTable.Cell>\n\n            <DataTable.Cell numeric>\n              {emissionsCategory.footprint} {t(\"common:footprintKg\")}\n            </DataTable.Cell>\n\n            <DataTable.Cell numeric>\n              <View\n                style={{\n                  width: 30,\n                  height: 30,\n                  borderRadius: 30 / 2,\n                  backgroundColor: emissionsCategory.color,\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Text style={{ color: colors.background, fontSize: 12 }}>\n                  {emissionsCategory.part}%\n                </Text>\n              </View>\n            </DataTable.Cell>\n          </DataTable.Row>\n        ))}\n    </DataTable>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport { useTheme } from \"react-native-paper\";\nimport { VictoryLabel, VictoryPie } from \"victory\";\n\nimport { Footprints } from \"../../view-models/Footprint\";\n\nconst pieWidth = 250;\nconst pieHeight = 250;\n\ntype Props = {\n  footprints: Footprints;\n  totalFootprint: number;\n};\n\nexport const EmissionsDistribution = ({\n  footprints,\n  totalFootprint,\n}: Props) => {\n  const { t } = useTranslation(\"emissions\");\n  const { colors } = useTheme();\n  const footprintByCategories = Object.values(footprints);\n\n  return (\n    <svg viewBox={`0 0 ${pieWidth} ${pieHeight}`}>\n      <VictoryPie\n        colorScale={footprintByCategories.map(({ color }) => color)}\n        standalone={false}\n        width={pieWidth}\n        height={pieHeight}\n        radius={110}\n        innerRadius={60}\n        labelRadius={75}\n        style={{ labels: { fontSize: 17 } }}\n        data={footprintByCategories.map(({ icon, footprint }) => ({\n          x: icon,\n          y: footprint,\n        }))}\n      />\n      <VictoryLabel\n        textAnchor=\"middle\"\n        style={{ fontSize: 20, fill: colors.onBackground }}\n        x={pieWidth / 2}\n        y={pieHeight / 2}\n        text={`${(totalFootprint / 1000).toFixed(2)}\\ntCO2/${t(\"year\")}`}\n      />\n    </svg>\n  );\n};\n","import { useNavigation } from \"@react-navigation/native\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button, useTheme } from \"react-native-paper\";\n\nimport { AppNavigationProp } from \"../../../common/AppNavigation\";\n\nexport const EmissionsEstimationButton = () => {\n  const { t } = useTranslation(\"emissions\");\n  const { colors } = useTheme();\n  const { navigate } = useNavigation<AppNavigationProp>();\n\n  return (\n    <Button\n      icon=\"grass\"\n      mode=\"contained\"\n      textColor=\"white\"\n      contentStyle={{ height: 45 }}\n      labelStyle={{ color: colors.onPrimary }}\n      onPress={() => navigate(\"Profile\")}\n    >\n      {t(\"estimate\")}\n    </Button>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport { Text } from \"react-native-paper\";\n\nexport const EmissionsTitle = () => {\n  const { t } = useTranslation(\"emissions\");\n\n  return (\n    <Text variant=\"titleLarge\" style={{ paddingTop: 10, textAlign: \"center\" }}>\n      {t(\"impactDistributionTitle\")}\n    </Text>\n  );\n};\n","export enum FootprintCategories {\n  TRANSPORT = \"transport\",\n  HOUSING = \"housing\",\n  FOOD = \"food\",\n  GOODS = \"goods\",\n  PUBLIC_SERVICES = \"publicServices\",\n}\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport deepMerge from \"deepmerge\";\nimport { create } from \"zustand\";\nimport { createJSONStorage, devtools, persist } from \"zustand/middleware\";\n\nimport { Transport } from \"../../domain/models/transport/Transport\";\n\nexport type AppState = {\n  transport: Transport;\n};\n\nconst appStore = (): AppState => ({\n  transport: new Transport({}),\n});\n\nconst middlewares = (f: any) =>\n  devtools(\n    persist<AppState>(f, {\n      name: \"app-storage\",\n      storage: createJSONStorage(() => AsyncStorage),\n      merge: (persistedState, currentState) =>\n        deepMerge(currentState, persistedState as AppState),\n    }),\n  );\n\nexport const useAppStore = create<\n  AppState,\n  [[\"zustand/devtools\", never], [\"zustand/persist\", unknown]]\n>(middlewares(appStore));\n","import { IconSource } from \"react-native-paper/lib/typescript/components/Icon\";\n\nimport foodImage from \"../../../assets/images/food.svg\";\nimport goodsImage from \"../../../assets/images/goods.svg\";\nimport housingImage from \"../../../assets/images/house.svg\";\nimport publicServicesImage from \"../../../assets/images/public_services.svg\";\nimport transportImage from \"../../../assets/images/transport.svg\";\nimport { FootprintCategories } from \"../../domain/models/Categories\";\n\nexport class FootprintByCategory {\n  public color: string = \"\";\n  public icon: string = \"\";\n  public part: number;\n  public image: string = \"\";\n  public materialIcon: IconSource;\n\n  constructor(\n    public category: FootprintCategories,\n    public footprint: number,\n    totalFootprint: number,\n  ) {\n    this.part = this.computePart(totalFootprint);\n    switch (category) {\n      case FootprintCategories.TRANSPORT: {\n        this.color = \"sandybrown\";\n        this.icon = \"🚗\";\n        this.materialIcon = \"car\";\n        this.image = transportImage;\n        break;\n      }\n      case FootprintCategories.FOOD: {\n        this.color = \"plum\";\n        this.icon = \"🍲\";\n        this.materialIcon = \"food\";\n        this.image = foodImage;\n        break;\n      }\n      case FootprintCategories.HOUSING: {\n        this.color = \"cadetblue\";\n        this.icon = \"🏠\";\n        this.materialIcon = \"home\";\n        this.image = housingImage;\n        break;\n      }\n      case FootprintCategories.GOODS: {\n        this.color = \"khaki\";\n        this.icon = \"🛍️\";\n        this.materialIcon = \"package\";\n        this.image = goodsImage;\n        break;\n      }\n      case FootprintCategories.PUBLIC_SERVICES: {\n        this.color = \"mediumslateblue\";\n        this.icon = \"🏛\";\n        this.materialIcon = \"bank\";\n        this.image = publicServicesImage;\n        break;\n      }\n    }\n  }\n\n  private computePart = (totalFootprint: number) =>\n    totalFootprint === 0\n      ? 0\n      : Math.floor((this.footprint / totalFootprint) * 100);\n}\n\nexport type Footprints = Record<FootprintCategories, FootprintByCategory>;\n","export class PublicServices {\n  // https://github.com/datagir/nosgestesclimat/issues/1583\n  public get annualFootprint(): number {\n    return 1500;\n  }\n}\n","import { averageFootprintPerKm, averageSpeed } from \"./constants\";\nimport { WithAnnualFootprint } from \"../types\";\n\ntype Props = {\n  usage?: boolean;\n  hoursPerYear?: number;\n};\n\nexport class Boat implements WithAnnualFootprint {\n  usage: boolean;\n  hoursPerYear: number;\n\n  constructor({ usage = false, hoursPerYear = 0 }: Props) {\n    this.usage = usage;\n    this.hoursPerYear = hoursPerYear;\n  }\n\n  public resetValues() {\n    this.usage = false;\n    this.hoursPerYear = 0;\n  }\n\n  public get annualFootprint(): number {\n    if (!this.usage) return 0;\n    return Math.round(this.hoursPerYear * averageSpeed * averageFootprintPerKm);\n  }\n}\n","// https://futur.eco/ferry\n\n// https://www.greenferries.org/ships/mega-express-four-9086590/\nexport const averageSpeed = 33; // km/h\n\n// https://nosgestesclimat.fr/documentation/futureco%E2%80%91data/transport/ferry/empreinte-par-km-volume\nexport const averageFootprintPerKm = 0.3; // kgCO2e/km/passager\n","import { CarEngine, CarSize, FuelType } from \"./Car\";\nimport { g45 } from \"../constants\";\n\nexport const defaultSize: CarSize = \"medium\";\n\nexport const defaultEngine: CarEngine = \"thermal\";\n\nexport const defaultFuelType: FuelType = \"gasoline\";\n\nexport const defaultYears = 5;\n\nexport const defaultAveragePassengers = 1.2;\n\n// l / 100km\n// https://librairie.ademe.fr/mobilite-et-transport/3273-elaboration-selon-les-principes-des-acv-des-bilans-energetiques-des-emissions-de-gaz-a-effet-de-serre-et-des-autres-impacts-environnementaux.html\nexport const defaultAverageFuelConsumption: Record<CarSize, number> = {\n  small: 5,\n  medium: 6,\n  vul: 6,\n  sedan: 7,\n  suv: 8,\n};\n\n// https://bilans-ges.ademe.fr/fr/basecarbone/donnees-consulter/liste-element?recherche=diesel\nexport const defaultAverageFootPrintPerLiter: Record<FuelType, number> = {\n  diesel: 3.1,\n  gasoline: 2.7,\n  biofuels: 1.11,\n};\n\n// https://www.statistiques.developpement-durable.gouv.fr/bilan-annuel-des-transports-en-2019-0 (p.3)\nexport const averageCarKmPerYear = 12200;\n\n// https://librairie.ademe.fr/cadic/7353/enquete-autopartage-2022-rapport.pdf (p.80)\nexport const sharedCarKmPerYear = 15130;\n\n// https://librairie.ademe.fr/mobilite-et-transport/1267-bilan-transversal-de-l-impact-de-l-electrification-par-segment.html\nexport const defaultCarLifetime = 10; // years\n\n// https://www.insee.fr/fr/statistiques/2045167#tableau-figure1_radio1\nconst vehiclesInCirculation = 37880000 + 5977000;\n\n// https://www.citepa.org/fr/secten/\nexport const fluorinatedGasEmissions = 1374000000; // kgCO2e\n\n// https://nosgestesclimat.fr/documentation/empreinte-branche/G45?lang=fr\nexport const g45VehicleMaintenancePart = 0.07;\n\nexport const thermalMaintenanceFootprint =\n  (g45 * 1000000 * g45VehicleMaintenancePart) /\n  vehiclesInCirculation /\n  averageCarKmPerYear;\n\nexport const airConditionerFootprint =\n  fluorinatedGasEmissions / vehiclesInCirculation / averageCarKmPerYear;\n\nexport const electricSmallCarFootprint = 0.0159;\nexport const electricMediumCarFootprint = 0.0198;\nexport const electricCarFootprint = 0.0273;\n\n// https://github.com/betagouv/ecolab-data/files/5945898/vehicule_electrique_rapport.pdf\nexport const thermalCarManufacturingFootprint: Record<CarSize, number> = {\n  small: 6700,\n  medium: 6700,\n  vul: 7600,\n  sedan: 7600,\n  suv: 7600,\n};\n\n// https://github.com/betagouv/ecolab-data/files/5945898/vehicule_electrique_rapport.pdf\nexport const hybridCarManufacturingFootprint: Record<CarSize, number> = {\n  small: 9600,\n  medium: 9600,\n  vul: 6900,\n  sedan: 6900,\n  suv: 6900,\n};\n\n// https://github.com/betagouv/ecolab-data/files/5945898/vehicule_electrique_rapport.pdf\nexport const electricCarManufacturingFootprint: Record<CarSize, number> = {\n  small: 10200,\n  medium: 10200,\n  vul: 20200,\n  sedan: 20200,\n  suv: 20200,\n};\n","/**\n * footprint = kgCO2e or kgC02e/km\n */\n\nimport {\n  airConditionerFootprint,\n  averageCarKmPerYear,\n  defaultAverageFootPrintPerLiter,\n  defaultAverageFuelConsumption,\n  defaultEngine,\n  defaultFuelType,\n  defaultSize,\n  electricCarFootprint,\n  electricCarManufacturingFootprint,\n  electricMediumCarFootprint,\n  electricSmallCarFootprint,\n  hybridCarManufacturingFootprint,\n  defaultCarLifetime,\n  sharedCarKmPerYear,\n  thermalCarManufacturingFootprint,\n  thermalMaintenanceFootprint,\n  defaultYears,\n  defaultAveragePassengers,\n} from \"./constants\";\nimport { WithAnnualFootprint } from \"../types\";\n\nexport type CarSize = \"small\" | \"medium\" | \"vul\" | \"sedan\" | \"suv\";\nexport const carSizes: CarSize[] = [\"small\", \"medium\", \"vul\", \"sedan\", \"suv\"];\n\nexport type CarEngine = \"thermal\" | \"hybrid\" | \"electric\";\nexport const carEngines: CarEngine[] = [\"thermal\", \"hybrid\", \"electric\"];\n\nexport type FuelType = \"diesel\" | \"gasoline\" | \"biofuels\";\nexport const fuelTypes: FuelType[] = [\"diesel\", \"gasoline\", \"biofuels\"];\n\ntype Props = {\n  regularUser?: boolean;\n  kmPerYear?: number;\n  size?: CarSize;\n  engine?: CarEngine;\n  fuelType?: FuelType;\n  age?: number;\n  averageFuelConsumption?: number;\n  averagePassengers?: number;\n};\n\nexport class Car implements WithAnnualFootprint {\n  regularUser: boolean;\n  kmPerYear: number;\n  size: CarSize;\n  engine: CarEngine;\n  fuelType: FuelType;\n  age: number;\n  lifetime = defaultCarLifetime;\n  averageFuelConsumption;\n  averagePassengers;\n\n  constructor({\n    regularUser = true,\n    kmPerYear = averageCarKmPerYear,\n    age = defaultYears,\n    size = defaultSize,\n    engine = defaultEngine,\n    fuelType = defaultFuelType,\n    averageFuelConsumption = defaultAverageFuelConsumption.medium, // l/100km\n    averagePassengers = defaultAveragePassengers,\n  }: Props) {\n    this.regularUser = regularUser;\n    this.kmPerYear = kmPerYear;\n    this.size = size;\n    this.engine = engine;\n    this.fuelType = fuelType;\n    this.age = age;\n    this.averageFuelConsumption = averageFuelConsumption;\n    this.averagePassengers = averagePassengers;\n  }\n\n  public initValuesForNonRegularUser() {\n    this.size = defaultSize;\n    this.engine = defaultEngine;\n    this.fuelType = defaultFuelType;\n    this.averageFuelConsumption = defaultAverageFuelConsumption[this.size];\n  }\n\n  public get annualFootprint(): number {\n    if (this.kmPerYear === 0) return 0;\n    if (this.regularUser) return Math.floor(this.regularUserFootprint);\n    return Math.floor(this.nonRegularUserFootprint);\n  }\n\n  private get regularUserFootprint(): number {\n    return (\n      (this.carUseFootprint + this.amortizedManufacturingFootprint) /\n      this.averagePassengers\n    );\n  }\n\n  private get nonRegularUserFootprint(): number {\n    return (\n      ((this.manufacturingFootprint / this.lifetime) * this.rentalFactor +\n        this.carUseFootprint) /\n      this.averagePassengers\n    );\n  }\n\n  private get carUseFootprint(): number {\n    return this.kmPerYear * (this.footprintPerKm + this.footprintBasePerKm);\n  }\n\n  // http://www2.ademe.fr/servlet/KBaseShow?catid=13655\n  private get footprintPerKm(): number {\n    if (this.engine === \"electric\") {\n      if (this.size === \"small\") return electricSmallCarFootprint;\n      if (this.size === \"medium\") return electricMediumCarFootprint;\n      return electricCarFootprint;\n    }\n\n    const thermalCarFootprint =\n      (this.averageFuelConsumption / 100) *\n      defaultAverageFootPrintPerLiter[this.fuelType];\n\n    if (this.engine === \"hybrid\") return thermalCarFootprint * 0.85;\n\n    return thermalCarFootprint;\n  }\n\n  private get footprintBasePerKm(): number {\n    return this.weightedMaintenanceFootprint + this.airConditionerFootprint;\n  }\n\n  // https://izi-by-edf.fr/blog/voiture-hybride-entretien/\n  private get weightedMaintenanceFootprint(): number {\n    if (this.engine === \"hybrid\") return thermalMaintenanceFootprint * 0.9;\n    if (this.engine === \"electric\") return thermalMaintenanceFootprint * 0.75;\n    return thermalMaintenanceFootprint;\n  }\n\n  private get airConditionerFootprint(): number {\n    return airConditionerFootprint;\n  }\n\n  private get amortizedManufacturingFootprint(): number {\n    return this.manufacturingFootprint * this.amortization;\n  }\n\n  private get manufacturingFootprint(): number {\n    if (this.engine === \"hybrid\")\n      return hybridCarManufacturingFootprint[this.size];\n    if (this.engine === \"electric\")\n      return electricCarManufacturingFootprint[this.size];\n    return thermalCarManufacturingFootprint[this.size];\n  }\n\n  private get amortization(): number {\n    if (this.age < 10) return 1 / defaultCarLifetime;\n    return 0;\n  }\n\n  private get rentalFactor(): number {\n    return this.kmPerYear / sharedCarKmPerYear;\n  }\n}\n","import { haulFlight } from \"./Plane\";\n\nexport const defaultAverageSpeed: Record<haulFlight, number> = {\n  // we take Paris-Toulouse as a reference flight, in km/h\n  short: 600 / 1.3,\n  // we take Paris-Alger as a reference flight, in km/h\n  medium: 1350 / 2.5,\n  // http://www.abm.fr/voyager-en-avion-le-guide-du-passager/en-complement/distances-et-durees-de-vol.html\n  long: 5800 / 8.5,\n};\n\nexport const defaultAverageFootprintPerKm: Record<haulFlight, number> = {\n  // cf footprint \"Avion passagers - Court courrier, 2018 - AVEC trainées\"\n  short: 0.258,\n  // cf footprint \"Avion passagers - Moyen courrier, 2018 - AVEC trainées\"\n  medium: 0.187,\n  // cf footprint \"Avion passagers - Long courrier, 2018 - AVEC trainées\"\n  long: 0.152,\n};\n","import { defaultAverageFootprintPerKm, defaultAverageSpeed } from \"./constants\";\nimport { WithAnnualFootprint } from \"../types\";\n\nexport type haulFlight = \"short\" | \"medium\" | \"long\";\n\ntype Props = {\n  usage?: boolean;\n  hoursPerYearInShortHaul?: number;\n  hoursPerYearInMediumHaul?: number;\n  hoursPerYearInLongHaul?: number;\n};\n\nexport class Plane implements WithAnnualFootprint {\n  usage: boolean;\n  hoursPerYearInShortHaul: number;\n  hoursPerYearInMediumHaul: number;\n  hoursPerYearInLongHaul: number;\n\n  constructor({\n    usage = false,\n    hoursPerYearInShortHaul = 0,\n    hoursPerYearInMediumHaul = 0,\n    hoursPerYearInLongHaul = 0,\n  }: Props) {\n    this.usage = usage;\n    this.hoursPerYearInShortHaul = hoursPerYearInShortHaul;\n    this.hoursPerYearInMediumHaul = hoursPerYearInMediumHaul;\n    this.hoursPerYearInLongHaul = hoursPerYearInLongHaul;\n  }\n\n  public resetValues() {\n    this.usage = false;\n    this.hoursPerYearInShortHaul = 0;\n    this.hoursPerYearInMediumHaul = 0;\n    this.hoursPerYearInLongHaul = 0;\n  }\n\n  public get annualFootprint(): number {\n    if (!this.usage) return 0;\n\n    const shortHaulFootprint =\n      this.hoursPerYearInShortHaul *\n      defaultAverageSpeed[\"short\"] *\n      defaultAverageFootprintPerKm[\"short\"];\n\n    const mediumHaulFootprint =\n      this.hoursPerYearInMediumHaul *\n      defaultAverageSpeed[\"medium\"] *\n      defaultAverageFootprintPerKm[\"medium\"];\n\n    const longHaulFootprint =\n      this.hoursPerYearInLongHaul *\n      defaultAverageSpeed[\"long\"] *\n      defaultAverageFootprintPerKm[\"long\"];\n\n    return Math.round(\n      shortHaulFootprint + mediumHaulFootprint + longHaulFootprint,\n    );\n  }\n}\n","import {\n  averageTrainFootprintPerKm,\n  averageBusFootprintPerHour,\n  defaultHoursPerYearInTrain,\n  averageMetroFootprintPerHour,\n  weeksInYear,\n} from \"./constants\";\nimport { WithAnnualFootprint } from \"../types\";\n\ntype Props = {\n  hoursPerYearInTrain?: number;\n  hoursPerWeekInMetro?: number;\n  hoursPerWeekInBus?: number;\n};\n\nexport class PublicTransport implements WithAnnualFootprint {\n  hoursPerYearInTrain: number;\n  hoursPerWeekInMetro: number;\n  hoursPerWeekInBus: number;\n\n  constructor({\n    hoursPerYearInTrain = defaultHoursPerYearInTrain,\n    hoursPerWeekInMetro = 0,\n    hoursPerWeekInBus = 0,\n  }: Props) {\n    this.hoursPerYearInTrain = hoursPerYearInTrain;\n    this.hoursPerWeekInMetro = hoursPerWeekInMetro;\n    this.hoursPerWeekInBus = hoursPerWeekInBus;\n  }\n\n  private get trainAnnualFootprint(): number {\n    return this.hoursPerYearInTrain * averageTrainFootprintPerKm;\n  }\n\n  private get metroWeekFootprint(): number {\n    return (\n      this.hoursPerWeekInMetro * averageMetroFootprintPerHour * weeksInYear\n    );\n  }\n\n  private get busWeekFootprint(): number {\n    return this.hoursPerWeekInBus * averageBusFootprintPerHour * weeksInYear;\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      this.trainAnnualFootprint +\n        this.metroWeekFootprint +\n        this.busWeekFootprint,\n    );\n  }\n}\n","// (TER + TGV) / 2. Cf Base Carbone 04/04/2022 (SNCF)\nexport const averageTrainFootprintPerKm = (0.0296 + 0.00236) / 2;\n\nexport const defaultHoursPerYearInTrain = 1000;\n\nexport const weeksInYear = 52;\n\n// cf Base Carbone 04/04/2022 (SNCF)\nconst metroFootprintPerKm = 0.00329;\n\n//http://transports.blog.lemonde.fr/2013/03/11/les-petits-secrets-de-la-ratp-reveles-au-public/\nconst metroAverageSpeed = 25; // km/h\n\nexport const averageMetroFootprintPerHour =\n  metroFootprintPerKm * metroAverageSpeed;\n\n// cf Base Carbone 04/04/2022 (SNCF)\nconst busFootprintPerKm = 0.113;\n\n// https://www.lemonde.fr/blog/transports/2013/03/11/les-petits-secrets-de-la-ratp-reveles-au-public/\nconst busAverageSpeed = 12; // km/h\n\nexport const averageBusFootprintPerHour = busFootprintPerKm * busAverageSpeed;\n","import { TwoWheelerType } from \"./TwoWheeler\";\nimport { g45 } from \"../constants\";\n\nexport const defaultTwoWheelerType: TwoWheelerType = \"thermalScooter\";\n\n// cf ADEME - HBEFA (2020)\nexport const twoWheelerDefaultFootprint: Record<TwoWheelerType, number> = {\n  thermalScooter: 0.0763,\n  electricScooter: 0.03,\n  motorbikeLT250: 0.0763,\n  motorbikeGT250: 0.191,\n};\n\n// https://nosgestesclimat.fr/documentation/empreinte-branche/G45?lang=fr\nconst g45VehicleMaintenancePart = 0.07;\nconst g45VehicleBusinessPart = 0.69;\nconst g45MotorbikePart = 0.02;\n\n// https://www.onisr.securite-routiere.gouv.fr/etudes-et-recherches/vehicules/parc-des-vehicules/le-parc-deux-roues-motorises-des-menages\nconst twoWheelerInCirculation = 2700000;\n\n// https://www.statistiques.developpement-durable.gouv.fr/bilan-annuel-des-transports-en-2019-0 (G1-1)\nconst averageTwoWheelerKmPerYear = 3000;\n\nexport const thermalMaintenanceFootprint =\n  (g45 * 1000000 * g45MotorbikePart * g45VehicleMaintenancePart) /\n  (g45VehicleBusinessPart + g45VehicleMaintenancePart) /\n  twoWheelerInCirculation /\n  averageTwoWheelerKmPerYear;\n","import {\n  defaultTwoWheelerType,\n  thermalMaintenanceFootprint,\n  twoWheelerDefaultFootprint,\n} from \"./constants\";\nimport { WithAnnualFootprint } from \"../types\";\n\nexport type TwoWheelerType =\n  | \"thermalScooter\"\n  | \"electricScooter\"\n  | \"motorbikeLT250\"\n  | \"motorbikeGT250\";\n\nexport const TwoWheelerTypes: TwoWheelerType[] = [\n  \"thermalScooter\",\n  \"electricScooter\",\n  \"motorbikeLT250\",\n  \"motorbikeGT250\",\n];\n\ntype Props = {\n  usage?: boolean;\n  type?: TwoWheelerType;\n  kmPerYear?: number;\n};\n\nexport class TwoWheeler implements WithAnnualFootprint {\n  usage: boolean;\n  type: TwoWheelerType;\n  kmPerYear: number;\n\n  constructor({\n    usage = false,\n    type = defaultTwoWheelerType,\n    kmPerYear = 0,\n  }: Props) {\n    this.usage = usage;\n    this.type = type;\n    this.kmPerYear = kmPerYear;\n  }\n\n  public resetValues() {\n    this.usage = false;\n    this.type = defaultTwoWheelerType;\n    this.kmPerYear = 0;\n  }\n\n  public get annualFootprint(): number {\n    if (!this.usage || this.kmPerYear === 0) return 0;\n    return Math.floor(\n      (this.footprintPerKm + this.weightedMaintenanceFootprint) *\n        this.kmPerYear,\n    );\n  }\n\n  private get footprintPerKm(): number {\n    return twoWheelerDefaultFootprint[this.type];\n  }\n\n  private get weightedMaintenanceFootprint(): number {\n    const maintenanceFootprint = this.maintenanceFootprint;\n    if (this.type === \"electricScooter\") return maintenanceFootprint * 0.75;\n    return maintenanceFootprint;\n  }\n\n  private get maintenanceFootprint(): number {\n    return thermalMaintenanceFootprint;\n  }\n}\n","import { Boat } from \"./boat/Boat\";\nimport { Car } from \"./car/Car\";\nimport { Plane } from \"./plane/Plane\";\nimport { PublicTransport } from \"./public-transport/PublicTransport\";\nimport { TwoWheeler } from \"./two-wheeler/TwoWheeler\";\n\n// TODO : ajouter les autres categories\n\nexport enum TransportCategories {\n  CAR = \"car\",\n  TWO_WHEELER = \"two-wheeler\",\n  PLANE = \"plane\",\n  PUBLIC_TRANSPORT = \"public-transport\",\n}\n\ntype Props = {\n  car?: Car;\n  twoWheeler?: TwoWheeler;\n  plane?: Plane;\n  boat?: Boat;\n  publicTransport?: PublicTransport;\n};\n\nexport class Transport {\n  car: Car;\n  twoWheeler: TwoWheeler;\n  plane: Plane;\n  boat: Boat;\n  publicTransport: PublicTransport;\n\n  constructor({ car, twoWheeler, plane, boat, publicTransport }: Props) {\n    this.car = new Car(car ?? {});\n    this.twoWheeler = new TwoWheeler(twoWheeler ?? {});\n    this.plane = new Plane(plane ?? {});\n    this.boat = new Boat(boat ?? {});\n    this.publicTransport = new PublicTransport(publicTransport ?? {});\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      this.car.annualFootprint +\n        this.twoWheeler.annualFootprint +\n        this.plane.annualFootprint +\n        this.boat.annualFootprint +\n        this.publicTransport.annualFootprint,\n    );\n  }\n}\n","import { PublicServices } from \"../../domain/models/public-services/PublicServices\";\nimport { Transport } from \"../../domain/models/transport/Transport\";\nimport { EmissionsRepository } from \"../../domain/repositories/EmissionsRepository\";\n\nexport class EmissionsInMemoryRepository implements EmissionsRepository {\n  private transport: Transport = new Transport({});\n  private publicServices: PublicServices = new PublicServices();\n\n  fetchTransport(): Transport {\n    return this.transport;\n  }\n\n  updateTransport(transport: Transport): void {\n    this.transport = new Transport(transport);\n  }\n\n  fetchPublicServices(): PublicServices {\n    return this.publicServices;\n  }\n\n  injectFakeTransport(transport: Transport): void {\n    this.transport = new Transport(transport);\n  }\n}\n","import { useAppStore } from \"./store\";\nimport { Transport } from \"../../domain/models/transport/Transport\";\n\nexport const appStoreActions = {\n  getTransport: () => useAppStore.getState().transport,\n\n  setTransport: (transport: Transport) =>\n    useAppStore.setState((state) => ({ ...state, transport })),\n};\n","import { PublicServices } from \"../../domain/models/public-services/PublicServices\";\nimport { Transport } from \"../../domain/models/transport/Transport\";\nimport { EmissionsRepository } from \"../../domain/repositories/EmissionsRepository\";\nimport { appStoreActions } from \"../store/storeActions\";\n\nexport class EmissionsStoreRepository implements EmissionsRepository {\n  fetchTransport(): Transport {\n    const storedTransport = appStoreActions.getTransport();\n    const transport = new Transport({\n      car: storedTransport.car,\n      twoWheeler: storedTransport.twoWheeler,\n      plane: storedTransport.plane,\n      boat: storedTransport.boat,\n      publicTransport: storedTransport.publicTransport,\n      // TODO : ajouter les autres catégories\n    });\n    return transport;\n  }\n\n  updateTransport(transport: Transport): void {\n    return appStoreActions.setTransport(transport);\n  }\n\n  fetchPublicServices(): PublicServices {\n    const publicServices = new PublicServices();\n    return publicServices;\n  }\n}\n","import { EmissionsRepository } from \"../repositories/EmissionsRepository\";\n\nexport const createUseComputeTotalAnnualFootprint = (\n  emissionsRepository: EmissionsRepository,\n) =>\n  function useComputeTotalAnnualFootprint() {\n    const computeTotalAnnualFootprint = (): number => {\n      const transport = emissionsRepository.fetchTransport();\n      const publicServices = emissionsRepository.fetchPublicServices();\n\n      // TODO : ajouter les autres catégories\n\n      return transport.annualFootprint + publicServices.annualFootprint;\n    };\n\n    return { computeTotalAnnualFootprint };\n  };\n","import { PublicServices } from \"../models/public-services/PublicServices\";\nimport { EmissionsRepository } from \"../repositories/EmissionsRepository\";\n\nexport const createUseFetchPublicServices = (\n  emissionsRepository: EmissionsRepository,\n) =>\n  function useFetchPublicServices() {\n    const fetchPublicServices = (): PublicServices => {\n      return emissionsRepository.fetchPublicServices();\n    };\n\n    return { fetchPublicServices };\n  };\n","import { Transport } from \"../models/transport/Transport\";\nimport { EmissionsRepository } from \"../repositories/EmissionsRepository\";\n\nexport const createUseFetchTransport = (\n  emissionsRepository: EmissionsRepository,\n) =>\n  function useFetchTransport() {\n    const fetchTransport = (): Transport => {\n      return emissionsRepository.fetchTransport();\n    };\n\n    return { fetchTransport };\n  };\n","import { Boat } from \"../models/transport/boat/Boat\";\nimport { Car } from \"../models/transport/car/Car\";\nimport { Plane } from \"../models/transport/plane/Plane\";\nimport { PublicTransport } from \"../models/transport/public-transport/PublicTransport\";\nimport { TwoWheeler } from \"../models/transport/two-wheeler/TwoWheeler\";\nimport { EmissionsRepository } from \"../repositories/EmissionsRepository\";\n\nexport const createUseUpdateTransport = (\n  emissionsRepository: EmissionsRepository,\n) =>\n  function useUpdateTransport() {\n    const updateCar = (values: Car) => {\n      const newCar = new Car(values);\n      if (!newCar.regularUser) newCar.initValuesForNonRegularUser();\n\n      const newTransport = emissionsRepository.fetchTransport();\n      newTransport.car = newCar;\n\n      emissionsRepository.updateTransport(newTransport);\n    };\n\n    const updateTwoWheeler = (values: TwoWheeler) => {\n      const newTwoWheeler = new TwoWheeler(values);\n      if (!newTwoWheeler.usage) newTwoWheeler.resetValues();\n\n      const newTransport = emissionsRepository.fetchTransport();\n      newTransport.twoWheeler = newTwoWheeler;\n\n      emissionsRepository.updateTransport(newTransport);\n    };\n\n    const updatePlane = (values: Plane) => {\n      const newPlane = new Plane(values);\n      if (!newPlane.usage) newPlane.resetValues();\n\n      const newTransport = emissionsRepository.fetchTransport();\n      newTransport.plane = newPlane;\n\n      emissionsRepository.updateTransport(newTransport);\n    };\n\n    const updateBoat = (values: Boat) => {\n      const newBoat = new Boat(values);\n      if (!newBoat.usage) newBoat.resetValues();\n\n      const newTransport = emissionsRepository.fetchTransport();\n      newTransport.boat = newBoat;\n\n      emissionsRepository.updateTransport(newTransport);\n    };\n\n    const updatePublicTransport = (values: PublicTransport) => {\n      const newPublicTransport = new PublicTransport(values);\n\n      const newTransport = emissionsRepository.fetchTransport();\n      newTransport.publicTransport = newPublicTransport;\n\n      emissionsRepository.updateTransport(newTransport);\n    };\n\n    return {\n      updateCar,\n      updateTwoWheeler,\n      updatePlane,\n      updateBoat,\n      updatePublicTransport,\n    };\n  };\n","import { createContext } from \"react\";\n\nimport { EmissionsInMemoryRepository } from \"../data/repositories/EmissionsInMemoryRepository\";\nimport { EmissionsStoreRepository } from \"../data/repositories/EmissionsStoreRepository\";\nimport { EmissionsRepository } from \"../domain/repositories/EmissionsRepository\";\nimport { createUseComputeTotalAnnualFootprint } from \"../domain/usecases/computeTotalAnnualFootprint\";\nimport { createUseFetchPublicServices } from \"../domain/usecases/fetchPublicServices\";\nimport { createUseFetchTransport } from \"../domain/usecases/fetchTransport\";\nimport { createUseUpdateTransport } from \"../domain/usecases/updateTransport\";\n\nconst isTestMode = process.env.NODE_ENV === \"test\";\n\ninterface Repositories {\n  emissionsRepository: EmissionsRepository;\n}\n\nconst initRealRepositories = () => ({\n  emissionsRepository: new EmissionsStoreRepository(),\n});\n\nexport const initFakeRepositories = () => ({\n  emissionsRepository: new EmissionsInMemoryRepository(),\n});\n\nconst repositories: Repositories = isTestMode\n  ? initFakeRepositories()\n  : initRealRepositories();\n\nconst initUsecases = (repositories: Repositories) => {\n  const { emissionsRepository } = repositories;\n\n  return {\n    useFetchTransport: createUseFetchTransport(emissionsRepository),\n    useUpdateTransport: createUseUpdateTransport(emissionsRepository),\n    useComputeTotalAnnualFootprint:\n      createUseComputeTotalAnnualFootprint(emissionsRepository),\n    useFetchPublicServices: createUseFetchPublicServices(emissionsRepository),\n  };\n};\n\nconst usecases = initUsecases(repositories);\n\nconst UsecasesContext = createContext(usecases);\n\nexport type { Repositories };\nexport { UsecasesContext };\n","import { useContext, useMemo } from \"react\";\n\nimport { FootprintByCategory, Footprints } from \"./Footprint\";\nimport { UsecasesContext } from \"../../common/UsecasesContext\";\nimport { useAppStore } from \"../../data/store/store\";\nimport { FootprintCategories } from \"../../domain/models/Categories\";\n\nexport const useFootprints = () => {\n  const appStore = useAppStore((store) => store);\n\n  const {\n    useFetchTransport,\n    useFetchPublicServices,\n    useComputeTotalAnnualFootprint,\n  } = useContext(UsecasesContext);\n\n  const { computeTotalAnnualFootprint } = useComputeTotalAnnualFootprint();\n  const { fetchTransport } = useFetchTransport();\n  const { fetchPublicServices } = useFetchPublicServices();\n\n  const transport = useMemo(() => fetchTransport(), [appStore]);\n  const publicServices = useMemo(() => fetchPublicServices(), [appStore]);\n  const totalAnnualFootprint = useMemo(\n    () => computeTotalAnnualFootprint(),\n    [appStore],\n  );\n\n  const footprints: Footprints = {\n    transport: new FootprintByCategory(\n      FootprintCategories.TRANSPORT,\n      transport.annualFootprint,\n      totalAnnualFootprint,\n    ),\n    food: new FootprintByCategory(\n      FootprintCategories.FOOD,\n      transport.annualFootprint,\n      totalAnnualFootprint,\n    ),\n    goods: new FootprintByCategory(\n      FootprintCategories.GOODS,\n      transport.annualFootprint,\n      totalAnnualFootprint,\n    ),\n    housing: new FootprintByCategory(\n      FootprintCategories.HOUSING,\n      transport.annualFootprint,\n      totalAnnualFootprint,\n    ),\n    publicServices: new FootprintByCategory(\n      FootprintCategories.PUBLIC_SERVICES,\n      publicServices.annualFootprint,\n      totalAnnualFootprint,\n    ),\n  };\n\n  return { footprints, totalAnnualFootprint };\n};\n","import { ScrollView, View } from \"react-native\";\n\nimport { EmissionsDataTable } from \"./EmissionsDataTable\";\nimport { EmissionsDistribution } from \"./EmissionsDistribution\";\nimport { EmissionsEstimationButton } from \"./EmissionsEstimationButton\";\nimport { EmissionsTitle } from \"./EmissionsTitle\";\nimport { useFootprints } from \"../../view-models/useFootprints\";\n\nexport const Emissions = () => {\n  const { footprints, totalAnnualFootprint } = useFootprints();\n\n  return (\n    <ScrollView\n      contentContainerStyle={{ justifyContent: \"center\", alignItems: \"center\" }}\n    >\n      <View>\n        <EmissionsTitle />\n      </View>\n\n      <View style={{ width: 300 }}>\n        <EmissionsDistribution\n          footprints={footprints}\n          totalFootprint={totalAnnualFootprint}\n        />\n      </View>\n\n      {/* <View style={{ width: \"90%\" }}>\n        <EmissionsGoal />\n      </View> */}\n\n      <View style={{ width: \"90%\" }}>\n        <EmissionsDataTable footprints={footprints} />\n      </View>\n\n      <View style={{ width: \"90%\", marginTop: 20, marginBottom: 20 }}>\n        <EmissionsEstimationButton />\n      </View>\n    </ScrollView>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport { StyleSheet } from \"react-native\";\nimport { Avatar, Card } from \"react-native-paper\";\nimport { IconSource } from \"react-native-paper/lib/typescript/components/Icon\";\n\nimport { FootprintByCategory } from \"../../view-models/Footprint\";\n\ntype Props = {\n  title: string;\n  footprint: FootprintByCategory;\n  icon: IconSource;\n  imageSource?: string;\n  onClick: () => void;\n};\n\nexport const ProfileCategoryCard = ({\n  title,\n  footprint,\n  icon,\n  imageSource,\n  onClick,\n}: Props) => {\n  const { t } = useTranslation(\"common\");\n\n  return (\n    <Card style={styles.card} onPress={onClick}>\n      <Card.Title\n        title={title}\n        subtitle={`${footprint.footprint} ${t(\"footprintKgPerYear\")}`}\n        left={(props: any) => (\n          <Avatar.Icon\n            {...props}\n            icon={icon}\n            style={{ backgroundColor: footprint.color }}\n          />\n        )}\n        right={(props: any) => (\n          <Avatar.Text\n            {...props}\n            label={`${footprint.part} %`}\n            color={footprint.color}\n            style={{\n              backgroundColor: null,\n              borderWidth: 2,\n              borderColor: footprint.color,\n              width: 40,\n              height: 40,\n            }}\n          />\n        )}\n        style={{ paddingRight: 16 }}\n      />\n      <Card.Cover\n        resizeMode=\"contain\"\n        source={{ uri: imageSource }}\n        style={styles.image}\n      />\n    </Card>\n  );\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    width: \"100%\",\n  },\n  image: {\n    height: 150,\n  },\n});\n","import { useNavigation } from \"@react-navigation/native\";\nimport { useTranslation } from \"react-i18next\";\nimport { View, StyleSheet, ScrollView } from \"react-native\";\n\nimport { ProfileCategoryCard } from \"./ProfileCategoryCard\";\nimport { useProfile } from \"./useProfile\";\nimport { AppNavigationProp } from \"../../../common/AppNavigation\";\n\nexport const Profile = () => {\n  const { t } = useTranslation(\"common\");\n\n  const { navigate } = useNavigation<AppNavigationProp>();\n\n  const {\n    transportFootprint,\n    housingFootprint,\n    foodFootprint,\n    goodsFootprint,\n    publicServicesFootprint,\n  } = useProfile();\n\n  return (\n    <ScrollView>\n      <View style={styles.container}>\n        <ProfileCategoryCard\n          title={t(\"transport\")}\n          icon={transportFootprint.materialIcon}\n          footprint={transportFootprint}\n          imageSource={transportFootprint.image}\n          onClick={() => navigate(\"TransportProfile\")}\n        />\n        <ProfileCategoryCard\n          title={t(\"housing\")}\n          icon={housingFootprint.materialIcon}\n          footprint={housingFootprint}\n          imageSource={housingFootprint.image}\n          onClick={() => navigate(\"Profile\")}\n        />\n        <ProfileCategoryCard\n          title={t(\"food\")}\n          icon={foodFootprint.materialIcon}\n          footprint={foodFootprint}\n          imageSource={foodFootprint.image}\n          onClick={() => navigate(\"Profile\")}\n        />\n        <ProfileCategoryCard\n          title={t(\"goods\")}\n          icon={goodsFootprint.materialIcon}\n          footprint={goodsFootprint}\n          imageSource={goodsFootprint.image}\n          onClick={() => navigate(\"Profile\")}\n        />\n        <ProfileCategoryCard\n          title={t(\"publicServices\")}\n          icon={publicServicesFootprint.materialIcon}\n          footprint={publicServicesFootprint}\n          imageSource={publicServicesFootprint.image}\n          onClick={() => navigate(\"Profile\")}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: 10,\n    gap: 10,\n  },\n});\n","import { FootprintCategories } from \"../../../domain/models/Categories\";\nimport { useFootprints } from \"../../view-models/useFootprints\";\n\nexport const useProfile = () => {\n  const { footprints } = useFootprints();\n\n  return {\n    transportFootprint: footprints[FootprintCategories.TRANSPORT],\n    housingFootprint: footprints[FootprintCategories.HOUSING],\n    foodFootprint: footprints[FootprintCategories.FOOD],\n    goodsFootprint: footprints[FootprintCategories.GOODS],\n    publicServicesFootprint: footprints[FootprintCategories.PUBLIC_SERVICES],\n  };\n};\n","import { DefaultValues, useForm } from \"react-hook-form\";\n\nimport { WithAnnualFootprint } from \"../../../../domain/models/transport/types\";\nimport {\n  StringifyProperties,\n  convertStringToType,\n} from \"../../../../types/utils\";\n\nexport const useUpdateForm = <T extends WithAnnualFootprint>(\n  defaultValues: DefaultValues<Omit<StringifyProperties<T>, \"annualFootprint\">>,\n  storedData: T,\n  updateUsecase: (data: T) => void,\n) => {\n  type FormValues = Omit<StringifyProperties<T>, \"annualFootprint\">;\n\n  const { getValues, ...rest } = useForm<FormValues>({ defaultValues });\n\n  const handleUpdate = (field: keyof FormValues) => {\n    const stringValue = getValues(field as any) as string;\n    const value = convertStringToType(stringValue, typeof storedData[field]);\n    const updatedData = { ...storedData, [field]: value };\n    updateUsecase(updatedData);\n  };\n\n  return { handleUpdate, ...rest };\n};\n","export type StringifyProperties<T> = {\n  [K in keyof T]: string;\n};\n\nexport const convertStringToType = (\n  value: string,\n  targetType: unknown,\n): any => {\n  if (targetType === \"string\") {\n    return value;\n  } else if (targetType === \"number\") {\n    return Number(value);\n  } else if (targetType === \"boolean\") {\n    return value === \"true\";\n  }\n\n  throw new Error(\"Unsupported targetType\");\n};\n","import { StyleSheet } from \"react-native\";\n\nexport const styles = StyleSheet.create({\n  listContentContainer: {\n    padding: 15,\n    paddingLeft: 15, // needed to force the left padding\n  },\n  rowContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    gap: 10,\n  },\n  columnContainer: {\n    flexDirection: \"column\",\n    gap: 10,\n  },\n  divider: {\n    marginTop: 10,\n    marginBottom: 10,\n  },\n});\n","import { PropsWithChildren } from \"react\";\nimport { View } from \"react-native\";\n\nimport { styles } from \"./styles\";\n\nexport const ListContentContainer = ({ children }: PropsWithChildren) => {\n  const { listContentContainer } = styles;\n  return <View style={listContentContainer}>{children}</View>;\n};\n","import { Divider } from \"react-native-paper\";\n\nimport { styles } from \"./styles\";\n\nexport const ListItemDivider = () => {\n  const { divider } = styles;\n  return <Divider style={divider} />;\n};\n","import { View } from \"react-native\";\nimport { Text } from \"react-native-paper\";\n\ntype Props = {\n  title: string;\n  subtitle?: string;\n};\n\nexport const ListTitle = ({ title, subtitle }: Props) => {\n  return (\n    <View style={{ flexDirection: \"column\" }}>\n      <Text variant={subtitle ? \"titleSmall\" : \"titleMedium\"}>{title}</Text>\n      {subtitle && <Text variant=\"bodySmall\">{subtitle}</Text>}\n    </View>\n  );\n};\n","import { PropsWithChildren } from \"react\";\nimport { View } from \"react-native\";\n\nimport { styles } from \"./styles\";\n\nexport const RowContainer = ({ children }: PropsWithChildren) => {\n  const { rowContainer } = styles;\n  return <View style={rowContainer}>{children}</View>;\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { List, SegmentedButtons, Text, TextInput } from \"react-native-paper\";\n\nimport { FormValues, useBoat } from \"./useBoat\";\nimport { ListContentContainer } from \"../../components/ListContentContainer\";\nimport { ListItemDivider } from \"../../components/ListItemDivider\";\nimport { ListTitle } from \"../../components/ListTitle\";\nimport { RowContainer } from \"../../components/RowContainer\";\n\nexport const BoatSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, usage, annualFootprint } = useBoat();\n\n  return (\n    <List.Accordion\n      title={\n        <ListTitle\n          title={t(\"emissions:transport.boat\")}\n          subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n        />\n      }\n      left={(props) => <List.Icon {...props} icon=\"ferry\" />}\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\">{t(\"boat.usage\")}</Text>\n          <Controller<FormValues>\n            name=\"usage\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"usage\");\n                }}\n                buttons={[\n                  { value: \"true\", label: t(\"common:yes\") },\n                  { value: \"false\", label: t(\"common:no\") },\n                ]}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2 }}>\n            {t(\"boat.hoursPerYear\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerYear\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerYear\")}\n                onChangeText={onChange}\n                value={value}\n                disabled={!usage}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </List.Accordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"../../../../../common/UsecasesContext\";\nimport { useAppStore } from \"../../../../../data/store/store\";\nimport { Boat } from \"../../../../../domain/models/transport/boat/Boat\";\nimport { StringifyProperties } from \"../../../../../types/utils\";\nimport { useUpdateForm } from \"../../utils/useUpdateForm\";\n\nexport type FormValues = Omit<StringifyProperties<Boat>, \"annualFootprint\">;\n\nexport const useBoat = () => {\n  const storedBoat = useAppStore((store) => store.transport.boat);\n  const storedBoatUsage = storedBoat.usage;\n  const annualFootprint = new Boat(storedBoat).annualFootprint;\n\n  const { useUpdateTransport } = useContext(UsecasesContext);\n  const { updateBoat } = useUpdateTransport();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    usage: storedBoat.usage.toString(),\n    hoursPerYear: storedBoat.hoursPerYear.toString(),\n  });\n\n  const { handleUpdate, control, watch, reset } = useUpdateForm<Boat>(\n    getDefaultValues(),\n    storedBoat,\n    updateBoat,\n  );\n\n  useEffect(() => {\n    if (!storedBoatUsage) reset(getDefaultValues());\n  }, [storedBoatUsage]);\n\n  const usage = watch(\"usage\") === \"true\";\n\n  return { control, handleUpdate, usage, annualFootprint };\n};\n","import { PropsWithChildren } from \"react\";\nimport { View } from \"react-native\";\n\nimport { styles } from \"./styles\";\n\nexport const ColumnContainer = ({ children }: PropsWithChildren) => {\n  const { columnContainer } = styles;\n  return <View style={columnContainer}>{children}</View>;\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { View } from \"react-native\";\nimport {\n  List,\n  TextInput,\n  Text,\n  SegmentedButtons,\n  HelperText,\n  Icon,\n} from \"react-native-paper\";\n\nimport { FormValues, useCar } from \"./useCar\";\nimport {\n  carEngines,\n  carSizes,\n  fuelTypes,\n} from \"../../../../../domain/models/transport/car/Car\";\nimport { ColumnContainer } from \"../../components/ColumnContainer\";\nimport { ListContentContainer } from \"../../components/ListContentContainer\";\nimport { ListItemDivider } from \"../../components/ListItemDivider\";\nimport { ListTitle } from \"../../components/ListTitle\";\nimport { RowContainer } from \"../../components/RowContainer\";\n\nexport const CarSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, regularUser, annualFootprint } = useCar();\n\n  return (\n    <List.Accordion\n      title={\n        <ListTitle\n          title={t(\"emissions:transport.car\")}\n          subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n        />\n      }\n      left={(props) => <List.Icon {...props} icon=\"car\" />}\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 1.5 }}>\n            {t(\"car.kmPerYear\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"kmPerYear\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix text=\"km\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"kmPerYear\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <RowContainer>\n            <Text variant=\"labelLarge\">{t(\"car.regularUser\")}</Text>\n            <Controller<FormValues>\n              name=\"regularUser\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"regularUser\");\n                  }}\n                  buttons={[\n                    { value: \"true\", label: t(\"common:yes\") },\n                    { value: \"false\", label: t(\"common:no\") },\n                  ]}\n                />\n              )}\n            />\n          </RowContainer>\n          {!regularUser && (\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <Icon source=\"information\" size={15} />\n              <HelperText\n                type=\"info\"\n                style={{ alignSelf: \"flex-start\", marginTop: 2 }}\n              >\n                {t(\"car.nonRegularUserHelperText\")}\n              </HelperText>\n            </View>\n          )}\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"car.size\")}</Text>\n          <View>\n            <Controller<FormValues>\n              name=\"size\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"size\");\n                  }}\n                  buttons={carSizes.slice(0, 3).map((size) => ({\n                    value: size,\n                    label: t(`car.sizes.${size}`),\n                    disabled: !regularUser,\n                  }))}\n                />\n              )}\n            />\n            <Controller<FormValues>\n              name=\"size\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"size\");\n                  }}\n                  buttons={carSizes.slice(3, 5).map((size) => ({\n                    value: size,\n                    label: t(`car.sizes.${size}`),\n                    disabled: !regularUser,\n                  }))}\n                />\n              )}\n            />\n          </View>\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"car.engine\")}</Text>\n          <Controller<FormValues>\n            name=\"engine\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"engine\");\n                }}\n                buttons={carEngines.map((engine) => ({\n                  value: engine,\n                  label: t(`car.engines.${engine}`),\n                  disabled: !regularUser,\n                }))}\n              />\n            )}\n          />\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"car.fuelType\")}</Text>\n          <Controller<FormValues>\n            name=\"fuelType\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"fuelType\");\n                }}\n                buttons={fuelTypes.map((fuelType) => ({\n                  value: fuelType,\n                  label: t(`car.fuelTypes.${fuelType}`),\n                  disabled: !regularUser,\n                }))}\n              />\n            )}\n          />\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2 }}>\n            {t(\"car.averageFuelConsumption\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"averageFuelConsumption\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                disabled={!regularUser}\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"averageFuelConsumption\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2 }}>\n            {t(\"car.age\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"age\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"age\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2 }}>\n            {t(\"car.averagePassengers\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"averagePassengers\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"averagePassengers\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </List.Accordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"../../../../../common/UsecasesContext\";\nimport { useAppStore } from \"../../../../../data/store/store\";\nimport { Car } from \"../../../../../domain/models/transport/car/Car\";\nimport { StringifyProperties } from \"../../../../../types/utils\";\nimport { useUpdateForm } from \"../../utils/useUpdateForm\";\n\nexport type FormValues = Omit<StringifyProperties<Car>, \"annualFootprint\">;\n\nexport const useCar = () => {\n  const storedCar = useAppStore((store) => store.transport.car);\n  const storedRegularUser = storedCar.regularUser;\n  const annualFootprint = new Car(storedCar).annualFootprint;\n\n  const { useUpdateTransport } = useContext(UsecasesContext);\n  const { updateCar } = useUpdateTransport();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    kmPerYear: storedCar.kmPerYear.toString(),\n    regularUser: storedCar.regularUser.toString(),\n    size: storedCar.size.toString(),\n    engine: storedCar.engine.toString(),\n    fuelType: storedCar.fuelType.toString(),\n    age: storedCar.age.toString(),\n    averagePassengers: storedCar.averagePassengers.toString(),\n    averageFuelConsumption: storedCar.averageFuelConsumption.toString(),\n  });\n\n  const { handleUpdate, control, watch, reset } = useUpdateForm<Car>(\n    getDefaultValues(),\n    storedCar,\n    updateCar,\n  );\n\n  useEffect(() => {\n    if (!storedRegularUser) reset(getDefaultValues());\n  }, [storedRegularUser]);\n\n  const regularUser = watch(\"regularUser\") === \"true\";\n\n  return { control, handleUpdate, regularUser, annualFootprint };\n};\n","import { useTranslation } from \"react-i18next\";\nimport { List } from \"react-native-paper\";\n\nimport { ListContentContainer } from \"../../components/ListContentContainer\";\n\nexport const OtherSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n\n  return (\n    <List.Accordion\n      title={t(\"emissions:transport.other\")}\n      left={(props) => <List.Icon {...props} icon=\"bike\" />}\n    >\n      <ListContentContainer />\n    </List.Accordion>\n  );\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { List, SegmentedButtons, Text, TextInput } from \"react-native-paper\";\n\nimport { FormValues, usePlane } from \"./usePlane\";\nimport { ListContentContainer } from \"../../components/ListContentContainer\";\nimport { ListItemDivider } from \"../../components/ListItemDivider\";\nimport { ListTitle } from \"../../components/ListTitle\";\nimport { RowContainer } from \"../../components/RowContainer\";\n\nexport const PlaneSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, usage, annualFootprint } = usePlane();\n\n  return (\n    <List.Accordion\n      title={\n        <ListTitle\n          title={t(\"emissions:transport.plane\")}\n          subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n        />\n      }\n      left={(props) => <List.Icon {...props} icon=\"airplane\" />}\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\">{t(\"plane.usage\")}</Text>\n          <Controller<FormValues>\n            name=\"usage\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"usage\");\n                }}\n                buttons={[\n                  { value: \"true\", label: t(\"common:yes\") },\n                  { value: \"false\", label: t(\"common:no\") },\n                ]}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2 }}>\n            {t(\"plane.hoursPerYearInShortHaul\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerYearInShortHaul\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerYearInShortHaul\")}\n                onChangeText={onChange}\n                value={value}\n                disabled={!usage}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2 }}>\n            {t(\"plane.hoursPerYearInMediumHaul\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerYearInMediumHaul\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerYearInMediumHaul\")}\n                onChangeText={onChange}\n                value={value}\n                disabled={!usage}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2 }}>\n            {t(\"plane.hoursPerYearInLongHaul\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerYearInLongHaul\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerYearInLongHaul\")}\n                onChangeText={onChange}\n                value={value}\n                disabled={!usage}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </List.Accordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"../../../../../common/UsecasesContext\";\nimport { useAppStore } from \"../../../../../data/store/store\";\nimport { Plane } from \"../../../../../domain/models/transport/plane/Plane\";\nimport { StringifyProperties } from \"../../../../../types/utils\";\nimport { useUpdateForm } from \"../../utils/useUpdateForm\";\n\nexport type FormValues = Omit<StringifyProperties<Plane>, \"annualFootprint\">;\n\nexport const usePlane = () => {\n  const storedPlane = useAppStore((store) => store.transport.plane);\n  const storedPlaneUsage = storedPlane.usage;\n  const annualFootprint = new Plane(storedPlane).annualFootprint;\n\n  const { useUpdateTransport } = useContext(UsecasesContext);\n  const { updatePlane } = useUpdateTransport();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    usage: storedPlane.usage.toString(),\n    hoursPerYearInShortHaul: storedPlane.hoursPerYearInShortHaul.toString(),\n    hoursPerYearInMediumHaul: storedPlane.hoursPerYearInMediumHaul.toString(),\n    hoursPerYearInLongHaul: storedPlane.hoursPerYearInLongHaul.toString(),\n  });\n\n  const { handleUpdate, control, watch, reset } = useUpdateForm<Plane>(\n    getDefaultValues(),\n    storedPlane,\n    updatePlane,\n  );\n\n  useEffect(() => {\n    if (!storedPlaneUsage) reset(getDefaultValues());\n  }, [storedPlaneUsage]);\n\n  const usage = watch(\"usage\") === \"true\";\n\n  return { control, handleUpdate, usage, annualFootprint };\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { List, Text, TextInput } from \"react-native-paper\";\n\nimport { FormValues, usePublicTransport } from \"./usePublicTransport\";\nimport { ListContentContainer } from \"../../components/ListContentContainer\";\nimport { ListItemDivider } from \"../../components/ListItemDivider\";\nimport { ListTitle } from \"../../components/ListTitle\";\nimport { RowContainer } from \"../../components/RowContainer\";\n\nexport const PublicTransportSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, annualFootprint } = usePublicTransport();\n\n  return (\n    <List.Accordion\n      title={\n        <ListTitle\n          title={t(\"emissions:transport.public\")}\n          subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n        />\n      }\n      left={(props) => <List.Icon {...props} icon=\"train\" />}\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"public.hoursPerYearInTrain\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerYearInTrain\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerYearInTrain\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"public.hoursPerWeekInBus\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerWeekInBus\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerWeekInBus\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"public.hoursPerWeekInMetro\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerWeekInMetro\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerWeekInMetro\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </List.Accordion>\n  );\n};\n","import { useContext } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"../../../../../common/UsecasesContext\";\nimport { useAppStore } from \"../../../../../data/store/store\";\nimport { PublicTransport } from \"../../../../../domain/models/transport/public-transport/PublicTransport\";\nimport { StringifyProperties } from \"../../../../../types/utils\";\nimport { useUpdateForm } from \"../../utils/useUpdateForm\";\n\nexport type FormValues = Omit<\n  StringifyProperties<PublicTransport>,\n  \"annualFootprint\"\n>;\n\nexport const usePublicTransport = () => {\n  const storedPublicTransport = useAppStore(\n    (store) => store.transport.publicTransport,\n  );\n  const annualFootprint = new PublicTransport(storedPublicTransport)\n    .annualFootprint;\n\n  const { useUpdateTransport } = useContext(UsecasesContext);\n  const { updatePublicTransport } = useUpdateTransport();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    hoursPerYearInTrain: storedPublicTransport.hoursPerYearInTrain.toString(),\n    hoursPerWeekInBus: storedPublicTransport.hoursPerWeekInBus.toString(),\n    hoursPerWeekInMetro: storedPublicTransport.hoursPerWeekInMetro.toString(),\n  });\n\n  const { handleUpdate, control } = useUpdateForm<PublicTransport>(\n    getDefaultValues(),\n    storedPublicTransport,\n    updatePublicTransport,\n  );\n\n  return { control, handleUpdate, annualFootprint };\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { View } from \"react-native\";\nimport { List, SegmentedButtons, Text, TextInput } from \"react-native-paper\";\n\nimport { FormValues, useTwhoWheeler } from \"./useTwoWheeler\";\nimport { TwoWheelerTypes } from \"../../../../../domain/models/transport/two-wheeler/TwoWheeler\";\nimport { ColumnContainer } from \"../../components/ColumnContainer\";\nimport { ListContentContainer } from \"../../components/ListContentContainer\";\nimport { ListItemDivider } from \"../../components/ListItemDivider\";\nimport { ListTitle } from \"../../components/ListTitle\";\nimport { RowContainer } from \"../../components/RowContainer\";\n\nexport const TwoWheelerSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, usage, annualFootprint } = useTwhoWheeler();\n\n  return (\n    <List.Accordion\n      title={\n        <ListTitle\n          title={t(\"emissions:transport.twoWheeler\")}\n          subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n        />\n      }\n      left={(props) => <List.Icon {...props} icon=\"motorbike\" />}\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\">{t(\"twoWheeler.usage\")}</Text>\n          <Controller<FormValues>\n            name=\"usage\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"usage\");\n                }}\n                buttons={[\n                  { value: \"true\", label: t(\"common:yes\") },\n                  { value: \"false\", label: t(\"common:no\") },\n                ]}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"twoWheeler.type\")}</Text>\n          <View>\n            <Controller<FormValues>\n              name=\"type\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"type\");\n                  }}\n                  buttons={TwoWheelerTypes.slice(0, 2).map((type) => ({\n                    value: type,\n                    label: t(`twoWheeler.types.${type}`),\n                    disabled: !usage,\n                  }))}\n                />\n              )}\n            />\n            <Controller<FormValues>\n              name=\"type\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"type\");\n                  }}\n                  buttons={TwoWheelerTypes.slice(2, 4).map((type) => ({\n                    value: type,\n                    label: t(`twoWheeler.types.${type}`),\n                    disabled: !usage,\n                  }))}\n                />\n              )}\n            />\n          </View>\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 1.5 }}>\n            {t(\"car.kmPerYear\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"kmPerYear\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix text=\"km\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"kmPerYear\")}\n                onChangeText={onChange}\n                value={value}\n                disabled={!usage}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </List.Accordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"../../../../../common/UsecasesContext\";\nimport { useAppStore } from \"../../../../../data/store/store\";\nimport { TwoWheeler } from \"../../../../../domain/models/transport/two-wheeler/TwoWheeler\";\nimport { StringifyProperties } from \"../../../../../types/utils\";\nimport { useUpdateForm } from \"../../utils/useUpdateForm\";\n\nexport type FormValues = Omit<\n  StringifyProperties<TwoWheeler>,\n  \"annualFootprint\"\n>;\n\nexport const useTwhoWheeler = () => {\n  const storedTwoWheeler = useAppStore((store) => store.transport.twoWheeler);\n  const storedTwoWheelerUsage = storedTwoWheeler.usage;\n  const annualFootprint = new TwoWheeler(storedTwoWheeler).annualFootprint;\n\n  const { useUpdateTransport } = useContext(UsecasesContext);\n  const { updateTwoWheeler } = useUpdateTransport();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    kmPerYear: storedTwoWheeler.kmPerYear.toString(),\n    type: storedTwoWheeler.type.toString(),\n    usage: storedTwoWheeler.usage.toString(),\n  });\n\n  const { handleUpdate, control, watch, reset } = useUpdateForm<TwoWheeler>(\n    getDefaultValues(),\n    storedTwoWheeler,\n    updateTwoWheeler,\n  );\n\n  useEffect(() => {\n    if (!storedTwoWheelerUsage) reset(getDefaultValues());\n  }, [storedTwoWheelerUsage]);\n\n  const usage = watch(\"usage\") === \"true\";\n\n  return { control, handleUpdate, usage, annualFootprint };\n};\n","import { ScrollView } from \"react-native\";\nimport { Divider, List } from \"react-native-paper\";\n\nimport { BoatSection } from \"./boat/BoatSection\";\nimport { CarSection } from \"./car/CarSection\";\nimport { OtherSection } from \"./other/OtherSection\";\nimport { PlaneSection } from \"./plane/PlaneSection\";\nimport { PublicTransportSection } from \"./public-transport/PublicTransportSection\";\nimport { TwoWheelerSection } from \"./two-wheeler/TwoWheelerSection\";\n\nexport const TransportProfile = () => {\n  return (\n    <ScrollView>\n      <List.Section>\n        <CarSection />\n        <Divider />\n        <TwoWheelerSection />\n        <Divider />\n        <PlaneSection />\n        <Divider />\n        <BoatSection />\n        <Divider />\n        <PublicTransportSection />\n        <Divider />\n        <OtherSection />\n      </List.Section>\n    </ScrollView>\n  );\n};\n","import Icons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport {\n  NativeStackNavigationProp,\n  createNativeStackNavigator,\n} from \"@react-navigation/native-stack\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { Emissions } from \"../view/screens/emissions/Emissions\";\nimport { Profile } from \"../view/screens/profile/Profile\";\nimport { TransportProfile } from \"../view/screens/profile/transport/Transport\";\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\ntype RootStackParamList = {\n  Home: undefined;\n  Profile: undefined;\n  TransportProfile: undefined;\n};\n\nexport type AppNavigationProp = NativeStackNavigationProp<RootStackParamList>;\n\nconst iconSize = 24;\n\nexport const AppNavigation = () => {\n  const { t } = useTranslation(\"common\");\n\n  return (\n    <Stack.Navigator initialRouteName=\"Home\">\n      <Stack.Screen\n        name=\"Home\"\n        component={TabNavigator}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen\n        name=\"Profile\"\n        component={Profile}\n        options={{ title: t(\"screens.Profile\") }}\n      />\n      <Stack.Screen\n        name=\"TransportProfile\"\n        component={TransportProfile}\n        options={{ title: t(\"screens.Transport\") }}\n      />\n    </Stack.Navigator>\n  );\n};\n\nconst TabNavigator = () => {\n  const { t } = useTranslation(\"common\");\n\n  return (\n    <Tab.Navigator\n      initialRouteName=\"Emissions\"\n      screenOptions={{\n        // headerShown: false,\n        tabBarLabelPosition: \"below-icon\",\n        tabBarStyle: { height: 50, paddingBottom: 5 },\n      }}\n    >\n      <Tab.Screen\n        name=\"Emissions\"\n        component={Emissions}\n        options={{\n          title: t(\"screens.Emissions\"),\n          tabBarIcon: ({ focused, color }) => {\n            return (\n              <Icons\n                name={focused ? \"home\" : \"home-outline\"}\n                size={iconSize}\n                color={color}\n              />\n            );\n          },\n        }}\n      />\n      <Tab.Screen\n        name=\"Actions\"\n        component={Emissions}\n        options={{\n          // title: t(\"screens.Emissions\"),\n          tabBarIcon: ({ color }) => {\n            return <Icons name=\"tools\" size={iconSize} color={color} />;\n          },\n        }}\n      />\n      <Tab.Screen\n        name=\"Comparateur\"\n        component={Emissions}\n        options={{\n          // title: t(\"screens.Emissions\"),\n          tabBarIcon: ({ color }) => {\n            return <Icons name=\"tools\" size={iconSize} color={color} />;\n          },\n        }}\n      />\n      <Tab.Screen\n        name=\"Paramètres\"\n        component={Emissions}\n        options={{\n          // title: t(\"screens.Emissions\"),\n          tabBarIcon: ({ color }) => {\n            return <Icons name=\"tools\" size={iconSize} color={color} />;\n          },\n        }}\n      />\n    </Tab.Navigator>\n  );\n};\n","/* eslint-disable no-undef */\n/* eslint-disable prettier/prettier */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  const isEnvProduction = process.env.NODE_ENV === \"production\";\n  if (isEnvProduction && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport * as fr from \"./fr\";\n\nconst resources = { fr };\n\ni18n.use(initReactI18next).init({\n  resources,\n  lng: \"fr\",\n  interpolation: {\n    escapeValue: false, // react already safes from xss\n  },\n});\n\nexport default i18n;\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { registerRootComponent } from \"expo\";\nimport { useEffect, useState } from \"react\";\nimport {\n  Linking,\n  Platform,\n  SafeAreaView,\n  StyleSheet,\n  View,\n} from \"react-native\";\nimport { ActivityIndicator, PaperProvider } from \"react-native-paper\";\n\nimport { AppTheme } from \"./AppTheme\";\nimport { AppNavigation } from \"./src/common/AppNavigation\";\nimport * as serviceWorkerRegistration from \"./src/serviceWorkerRegistration\";\n\nimport \"./src/view/traductions/i18n\";\n\nconst PERSISTENCE_KEY = \"NAVIGATION_STATE_V1\";\n\nconst App = () => {\n  const [isReady, setIsReady] = useState(!__DEV__);\n  const [initialState, setInitialState] = useState();\n\n  useEffect(() => {\n    const restoreState = async () => {\n      try {\n        const initialUrl = await Linking.getInitialURL();\n        if (__DEV__ || (Platform.OS !== \"web\" && initialUrl == null)) {\n          // Only restore state if there's no deep link and we're not on web\n          const savedStateString = await AsyncStorage.getItem(PERSISTENCE_KEY);\n          const state = savedStateString\n            ? JSON.parse(savedStateString)\n            : undefined;\n          if (state !== undefined) setInitialState(state);\n        }\n      } finally {\n        setIsReady(true);\n      }\n    };\n\n    if (!isReady) restoreState();\n  }, [isReady]);\n\n  if (!isReady) return <ActivityIndicator />;\n\n  return (\n    <PaperProvider theme={AppTheme}>\n      <NavigationContainer\n        theme={AppTheme}\n        initialState={initialState}\n        onStateChange={(state) =>\n          AsyncStorage.setItem(PERSISTENCE_KEY, JSON.stringify(state))\n        }\n      >\n        <SafeAreaView style={styles.container}>\n          <View style={styles.content}>\n            <AppNavigation />\n          </View>\n        </SafeAreaView>\n      </NavigationContainer>\n    </PaperProvider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n  },\n  content: {\n    flex: 1,\n    width: \"100%\",\n    maxWidth: 550,\n  },\n});\n\nexport default registerRootComponent(App);\n\nserviceWorkerRegistration.register();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/impact/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [952], () => (__webpack_require__(1559)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["MaterialTheme","_objectSpread","MD3DarkTheme","colors","primary","onPrimary","inversePrimary","AppTheme","merge","NavigationTheme","EmissionsDataTable","_ref","footprints","t","useTranslation","useTheme","_jsxs","DataTable","children","Header","_jsx","Title","numeric","Object","values","sort","a","b","footprint","map","emissionsCategory","Row","Cell","style","alignItems","category","View","width","height","borderRadius","backgroundColor","color","flexDirection","justifyContent","Text","background","fontSize","part","EmissionsDistribution","totalFootprint","footprintByCategories","viewBox","VictoryPie","colorScale","_ref2","standalone","radius","innerRadius","labelRadius","labels","data","_ref3","x","icon","y","VictoryLabel","textAnchor","fill","onBackground","pieWidth","pieHeight","text","toFixed","EmissionsEstimationButton","navigate","useNavigation","Button","mode","textColor","contentStyle","labelStyle","onPress","EmissionsTitle","variant","paddingTop","textAlign","f","FootprintCategories","FootprintByCategory","_createClass","_this","_classCallCheck","image","computePart","Math","floor","this","TRANSPORT","materialIcon","transportImage","FOOD","foodImage","HOUSING","housingImage","GOODS","goodsImage","PUBLIC_SERVICES","publicServicesImage","PublicServices","key","get","Boat","_ref$usage","usage","_ref$hoursPerYear","hoursPerYear","value","round","defaultSize","defaultEngine","defaultFuelType","defaultAverageFuelConsumption","small","medium","vul","sedan","suv","defaultAverageFootPrintPerLiter","diesel","gasoline","biofuels","averageCarKmPerYear","thermalMaintenanceFootprint","g45","thermalCarManufacturingFootprint","hybridCarManufacturingFootprint","electricCarManufacturingFootprint","carSizes","carEngines","fuelTypes","Car","_ref$regularUser","regularUser","_ref$kmPerYear","kmPerYear","_ref$age","age","_ref$size","size","_ref$engine","engine","_ref$fuelType","fuelType","_ref$averageFuelConsu","averageFuelConsumption","_ref$averagePassenger","averagePassengers","lifetime","regularUserFootprint","nonRegularUserFootprint","carUseFootprint","amortizedManufacturingFootprint","manufacturingFootprint","rentalFactor","footprintPerKm","footprintBasePerKm","thermalCarFootprint","weightedMaintenanceFootprint","airConditionerFootprint","fluorinatedGasEmissions","amortization","defaultAverageSpeed","defaultAverageFootprintPerKm","Plane","_ref$hoursPerYearInSh","hoursPerYearInShortHaul","_ref$hoursPerYearInMe","hoursPerYearInMediumHaul","_ref$hoursPerYearInLo","hoursPerYearInLongHaul","shortHaulFootprint","mediumHaulFootprint","longHaulFootprint","PublicTransport","_ref$hoursPerYearInTr","hoursPerYearInTrain","_ref$hoursPerWeekInMe","hoursPerWeekInMetro","_ref$hoursPerWeekInBu","hoursPerWeekInBus","metroFootprintPerKm","busFootprintPerKm","trainAnnualFootprint","metroWeekFootprint","busWeekFootprint","defaultTwoWheelerType","twoWheelerDefaultFootprint","thermalScooter","electricScooter","motorbikeLT250","motorbikeGT250","TwoWheelerTypes","TwoWheeler","_ref$type","type","maintenanceFootprint","Transport","TransportCategories","car","twoWheeler","plane","boat","publicTransport","annualFootprint","EmissionsInMemoryRepository","transport","publicServices","useAppStore","create","devtools","persist","name","storage","createJSONStorage","AsyncStorage","persistedState","currentState","deepMerge","appStoreActions","getState","setState","state","EmissionsStoreRepository","storedTransport","createUseComputeTotalAnnualFootprint","emissionsRepository","computeTotalAnnualFootprint","fetchTransport","fetchPublicServices","createUseFetchPublicServices","createUseFetchTransport","createUseUpdateTransport","updateCar","newCar","initValuesForNonRegularUser","newTransport","updateTransport","updateTwoWheeler","newTwoWheeler","resetValues","updatePlane","newPlane","updateBoat","newBoat","updatePublicTransport","newPublicTransport","usecases","repositories","useFetchTransport","useUpdateTransport","useComputeTotalAnnualFootprint","useFetchPublicServices","initUsecases","UsecasesContext","createContext","useFootprints","appStore","store","_useContext","useContext","useMemo","totalAnnualFootprint","food","goods","housing","Emissions","_useFootprints","ScrollView","contentContainerStyle","marginTop","marginBottom","ProfileCategoryCard","title","imageSource","onClick","Card","styles","card","subtitle","left","props","Avatar","right","label","borderWidth","borderColor","paddingRight","Cover","resizeMode","source","uri","StyleSheet","Profile","_useProfile","transportFootprint","housingFootprint","foodFootprint","goodsFootprint","publicServicesFootprint","useProfile","container","padding","gap","useUpdateForm","defaultValues","storedData","updateUsecase","_useForm","useForm","getValues","handleUpdate","field","targetType","Number","Error","convertStringToType","updatedData","_defineProperty","_objectWithoutProperties","_excluded","listContentContainer","paddingLeft","rowContainer","columnContainer","divider","ListContentContainer","ListItemDivider","Divider","ListTitle","RowContainer","BoatSection","_useBoat","storedBoat","storedBoatUsage","getDefaultValues","toString","_useUpdateForm","control","watch","reset","useEffect","useBoat","List","Controller","render","_ref$field","onChange","SegmentedButtons","density","onValueChange","e","buttons","flex","_ref2$field","TextInput","dense","keyboardType","Affix","onBlur","onChangeText","disabled","ColumnContainer","CarSection","_useCar","storedCar","storedRegularUser","useCar","Icon","HelperText","alignSelf","_ref3$field","slice","_ref4","_ref4$field","_ref5","_ref5$field","_ref6","_ref6$field","_ref7","_ref7$field","_ref8","_ref8$field","_ref9","_ref9$field","OtherSection","PlaneSection","_usePlane","storedPlane","storedPlaneUsage","usePlane","PublicTransportSection","_usePublicTransport","storedPublicTransport","usePublicTransport","TwoWheelerSection","_useTwhoWheeler","storedTwoWheeler","storedTwoWheelerUsage","useTwhoWheeler","TransportProfile","Stack","createNativeStackNavigator","Tab","createBottomTabNavigator","AppNavigation","Navigator","initialRouteName","Screen","component","TabNavigator","options","headerShown","screenOptions","tabBarLabelPosition","tabBarStyle","paddingBottom","tabBarIcon","focused","Icons","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","resources","fr","i18n","initReactI18next","init","lng","interpolation","escapeValue","PERSISTENCE_KEY","content","maxWidth","registerRootComponent","_useState","useState","_useState2","_slicedToArray","isReady","setIsReady","_useState3","_useState4","initialState","setInitialState","restoreState","_asyncToGenerator","initialUrl","Linking","getInitialURL","Platform","OS","savedStateString","getItem","JSON","parse","undefined","apply","arguments","PaperProvider","theme","NavigationContainer","onStateChange","setItem","stringify","SafeAreaView","ActivityIndicator","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","id","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","ns","def","current","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}