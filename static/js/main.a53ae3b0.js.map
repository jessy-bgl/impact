{"version":3,"file":"static/js/main.a53ae3b0.js","mappings":"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","sources":["AppTheme.ts","src/view/screens/actions/Actions.tsx","src/view/screens/comparator/ComparatorForMobile.tsx","src/view/screens/comparator/ComparatorForWeb.tsx","src/view/screens/comparator/Comparator.tsx","src/view/screens/emissions/EmissionsDataTable.tsx","src/view/screens/emissions/EmissionsDistribution.tsx","src/view/screens/emissions/EmissionsEstimationButton.tsx","src/view/screens/emissions/EmissionsTitle.tsx","src/domain/models/Categories.ts","src/view/view-models/Footprint.ts","src/data/store/store.ts","src/domain/models/constants.ts","src/domain/models/food/drinks/constants.ts","src/domain/models/food/drinks/Drinks.ts","src/domain/models/food/meals/constants.ts","src/domain/models/food/meals/types.ts","src/domain/models/food/meals/Meals.ts","src/domain/models/food/waste/Waste.ts","src/domain/models/food/waste/constants.ts","src/domain/models/food/Food.ts","src/domain/models/public-services/PublicServices.ts","src/domain/models/transport/boat/Boat.ts","src/domain/models/transport/boat/constants.ts","src/domain/models/transport/car/constants.ts","src/domain/models/transport/car/Car.ts","src/domain/models/transport/plane/constants.ts","src/domain/models/transport/plane/Plane.ts","src/domain/models/transport/public-transport/PublicTransport.ts","src/domain/models/transport/public-transport/constants.ts","src/domain/models/transport/two-wheeler/constants.ts","src/domain/models/transport/two-wheeler/TwoWheeler.ts","src/domain/models/transport/Transport.ts","src/data/repositories/EmissionsInMemoryRepository.ts","src/data/store/storeActions.ts","src/data/repositories/EmissionsStoreRepository.ts","src/domain/usecases/computeTotalAnnualFootprint.ts","src/domain/usecases/fetchFood.ts","src/domain/usecases/fetchPublicServices.ts","src/domain/usecases/fetchTransport.ts","src/domain/usecases/updateFood.ts","src/domain/usecases/updateTransport.ts","src/common/UsecasesContext.ts","src/view/view-models/useFootprints.ts","src/view/screens/emissions/Emissions.tsx","src/view/screens/objectives/Objectives.tsx","src/view/screens/profile/ProfileCategoryCard.tsx","src/view/screens/profile/Profile.tsx","src/view/screens/profile/useProfile.ts","src/types/utils.ts","src/view/screens/profile/utils/useUpdateForm.ts","src/domain/models/food/types.ts","src/view/screens/profile/components/styles.ts","src/view/screens/profile/components/ColumnContainer.tsx","src/view/screens/profile/components/ListContentContainer.tsx","src/view/screens/profile/components/ListItemDivider.tsx","src/view/screens/profile/components/ListTitle.tsx","src/view/screens/profile/components/RowContainer.tsx","src/view/screens/profile/food/drinks/DrinksSection.tsx","src/view/screens/profile/food/drinks/useDrinks.tsx","src/view/screens/profile/food/meals/MealsSection.tsx","src/view/screens/profile/food/meals/useMeals.ts","src/view/screens/profile/food/waste/WasteSection.tsx","src/view/screens/profile/food/waste/useWaste.ts","src/view/screens/profile/food/Food.tsx","src/view/screens/profile/transport/boat/BoatSection.tsx","src/view/screens/profile/transport/boat/useBoat.ts","src/view/screens/profile/transport/car/CarSection.tsx","src/view/screens/profile/transport/car/useCar.ts","src/view/screens/profile/transport/other/OtherSection.tsx","src/view/screens/profile/transport/plane/PlaneSection.tsx","src/view/screens/profile/transport/plane/usePlane.ts","src/view/screens/profile/transport/public-transport/PublicTransportSection.tsx","src/view/screens/profile/transport/public-transport/usePublicTransport.ts","src/view/screens/profile/transport/two-wheeler/TwoWheelerSection.tsx","src/view/screens/profile/transport/two-wheeler/useTwoWheeler.ts","src/view/screens/profile/transport/Transport.tsx","src/common/AppNavigation.tsx","src/serviceWorkerRegistration.js","src/view/translations/i18n.js","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { DarkTheme as NavigationTheme } from \"@react-navigation/native\";\nimport merge from \"deepmerge\";\nimport { MD3DarkTheme } from \"react-native-paper\";\n\nconst MaterialTheme = {\n  ...MD3DarkTheme,\n  colors: {\n    ...MD3DarkTheme.colors,\n    primary: \"#59B158\",\n    onPrimary: \"#111\",\n    inversePrimary: \"#fff\",\n  },\n};\n\nexport const AppTheme = merge(NavigationTheme, MaterialTheme);\n","import { useTranslation } from \"react-i18next\";\nimport { Text } from \"react-native-paper\";\n\nexport const Actions = () => {\n  const { t } = useTranslation([\"common\"]);\n\n  return (\n    <Text style={{ textAlign: \"center\", marginTop: 10 }}>\n      {t(\"comingSoon\")}\n    </Text>\n  );\n};\n","import WebView from \"react-native-webview\";\n\nexport const ComparatorForMobile = () => {\n  return (\n    <WebView\n      originWhitelist={[\"*\"]}\n      source={{\n        html: `<iFrame src='<script id=\"datagir-impact-co2\" src=\"https://impactco2.fr/iframe.js\" data-type=\"convertisseur\" data-search=\"?theme=night\"></script>' />`,\n      }}\n    />\n  );\n};\n","import { useEffect } from \"react\";\n\nexport const ComparatorForWeb = () => {\n  useEffect(() => {\n    const scriptContainer = document.createElement(\"div\");\n    const script = document.createElement(\"script\");\n    script.id = \"datagir-impact-co2\";\n    script.src = \"https://impactco2.fr/iframe.js\";\n    script.dataset.type = \"convertisseur\";\n    script.dataset.search = \"?theme=night\";\n    script.async = true;\n\n    script.onload = () => {\n      const uselessDivToRemove = document\n        .getElementById(\"ademe-comparator\")\n        ?.querySelector(\"div\")\n        ?.querySelector(\"div\");\n      uselessDivToRemove?.remove();\n    };\n\n    scriptContainer.appendChild(script);\n    const targetElement = document.getElementById(\"ademe-comparator\");\n    targetElement?.appendChild(scriptContainer);\n\n    return () => {\n      targetElement?.removeChild(scriptContainer);\n    };\n  }, []);\n\n  return (\n    <div style={{ overflow: \"auto\" }}>\n      <div id=\"ademe-comparator\" />\n    </div>\n  );\n};\n","import { Platform } from \"react-native\";\n\nimport { ComparatorForMobile } from \"./ComparatorForMobile\";\nimport { ComparatorForWeb } from \"./ComparatorForWeb\";\n\nexport const Comparator = () =>\n  Platform.OS === \"web\" ? <ComparatorForWeb /> : <ComparatorForMobile />;\n","import { useTranslation } from \"react-i18next\";\nimport { View } from \"react-native\";\nimport { DataTable, Text, useTheme } from \"react-native-paper\";\n\nimport { Footprints } from \"../../view-models/Footprint\";\n\ntype Props = {\n  footprints: Footprints;\n};\n\nexport const EmissionsDataTable = ({ footprints }: Props) => {\n  const { t } = useTranslation([\"emissions\", \"common\"]);\n  const { colors } = useTheme();\n\n  return (\n    <DataTable>\n      <DataTable.Header>\n        <DataTable.Title>{t(\"category\")}</DataTable.Title>\n        <DataTable.Title numeric>{t(\"annualFootprint\")}</DataTable.Title>\n        <DataTable.Title numeric>{t(\"part\")}</DataTable.Title>\n      </DataTable.Header>\n\n      {Object.values(footprints)\n        .sort((a, b) => b.footprint - a.footprint)\n        .map((emissionsCategory) => (\n          <DataTable.Row key={emissionsCategory.category}>\n            <DataTable.Cell style={{ alignItems: \"center\" }}>\n              {t(`categories.${emissionsCategory.category}`)}\n            </DataTable.Cell>\n\n            <DataTable.Cell numeric>\n              {emissionsCategory.footprint} {t(\"common:footprintKg\")}\n            </DataTable.Cell>\n\n            <DataTable.Cell numeric>\n              <View\n                style={{\n                  width: 30,\n                  height: 30,\n                  borderRadius: 30 / 2,\n                  backgroundColor: emissionsCategory.color,\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Text style={{ color: colors.background, fontSize: 12 }}>\n                  {emissionsCategory.part}%\n                </Text>\n              </View>\n            </DataTable.Cell>\n          </DataTable.Row>\n        ))}\n    </DataTable>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport { useTheme } from \"react-native-paper\";\nimport { VictoryLabel, VictoryPie } from \"victory\";\n\nimport { Footprints } from \"../../view-models/Footprint\";\n\nconst pieWidth = 250;\nconst pieHeight = 250;\n\ntype Props = {\n  footprints: Footprints;\n  totalFootprint: number;\n};\n\nexport const EmissionsDistribution = ({\n  footprints,\n  totalFootprint,\n}: Props) => {\n  const { t } = useTranslation(\"emissions\");\n  const { colors } = useTheme();\n  const footprintByCategories = Object.values(footprints);\n\n  return (\n    <svg viewBox={`0 0 ${pieWidth} ${pieHeight}`}>\n      <VictoryPie\n        colorScale={footprintByCategories.map(({ color }) => color)}\n        standalone={false}\n        width={pieWidth}\n        height={pieHeight}\n        radius={110}\n        innerRadius={60}\n        labelRadius={75}\n        style={{ labels: { fontSize: 17 } }}\n        data={footprintByCategories.map(({ icon, footprint }) => ({\n          x: icon,\n          y: footprint,\n        }))}\n      />\n      <VictoryLabel\n        textAnchor=\"middle\"\n        style={{ fontSize: 20, fill: colors.onBackground }}\n        x={pieWidth / 2}\n        y={pieHeight / 2}\n        text={`${(totalFootprint / 1000).toFixed(2)}\\ntCO2/${t(\"year\")}`}\n      />\n    </svg>\n  );\n};\n","import { useNavigation } from \"@react-navigation/native\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button, useTheme } from \"react-native-paper\";\n\nimport { AppNavigationProp } from \"../../../common/AppNavigation\";\n\nexport const EmissionsEstimationButton = () => {\n  const { t } = useTranslation(\"emissions\");\n  const { colors } = useTheme();\n  const { navigate } = useNavigation<AppNavigationProp>();\n\n  return (\n    <Button\n      icon=\"grass\"\n      mode=\"contained\"\n      textColor=\"white\"\n      contentStyle={{ height: 45 }}\n      labelStyle={{ color: colors.onPrimary }}\n      onPress={() => navigate(\"Profile\")}\n    >\n      {t(\"estimate\")}\n    </Button>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport { Text } from \"react-native-paper\";\n\nexport const EmissionsTitle = () => {\n  const { t } = useTranslation(\"emissions\");\n\n  return (\n    <Text variant=\"titleLarge\" style={{ paddingTop: 10, textAlign: \"center\" }}>\n      {t(\"impactDistributionTitle\")}\n    </Text>\n  );\n};\n","export enum FootprintCategories {\n  TRANSPORT = \"transport\",\n  HOUSING = \"housing\",\n  FOOD = \"food\",\n  GOODS = \"goods\",\n  PUBLIC_SERVICES = \"publicServices\",\n}\n","import { IconSource } from \"react-native-paper/lib/typescript/components/Icon\";\n\nimport foodImage from \"../../../assets/images/food.svg\";\nimport goodsImage from \"../../../assets/images/goods.svg\";\nimport housingImage from \"../../../assets/images/house.svg\";\nimport publicServicesImage from \"../../../assets/images/public_services.svg\";\nimport transportImage from \"../../../assets/images/transport.svg\";\nimport { FootprintCategories } from \"../../domain/models/Categories\";\n\nexport class FootprintByCategory {\n  public color: string = \"\";\n  public icon: string = \"\";\n  public part: number;\n  public image: string = \"\";\n  public materialIcon: IconSource = \"\";\n\n  protected constructor(\n    public category: FootprintCategories,\n    public footprint: number,\n    totalFootprint: number,\n  ) {\n    this.part = this.computePart(totalFootprint);\n  }\n\n  static forTransport(\n    footprint: number,\n    totalFootprint: number,\n  ): FootprintByCategory {\n    return new FootprintCategoryTransport(footprint, totalFootprint);\n  }\n\n  static forFood(\n    footprint: number,\n    totalFootprint: number,\n  ): FootprintByCategory {\n    return new FootprintCategoryFood(footprint, totalFootprint);\n  }\n\n  static forHousing(\n    footprint: number,\n    totalFootprint: number,\n  ): FootprintByCategory {\n    return new FootprintCategoryHousing(footprint, totalFootprint);\n  }\n\n  static forGoods(\n    footprint: number,\n    totalFootprint: number,\n  ): FootprintByCategory {\n    return new FootprintCategoryGoods(footprint, totalFootprint);\n  }\n\n  static forPublicServices(\n    footprint: number,\n    totalFootprint: number,\n  ): FootprintByCategory {\n    return new FootprintCategoryPublicServices(footprint, totalFootprint);\n  }\n\n  private computePart = (totalFootprint: number) =>\n    totalFootprint === 0\n      ? 0\n      : Math.floor((this.footprint / totalFootprint) * 100);\n}\n\nclass FootprintCategoryTransport extends FootprintByCategory {\n  constructor(footprint: number, totalFootprint: number) {\n    super(FootprintCategories.TRANSPORT, footprint, totalFootprint);\n    this.color = \"sandybrown\";\n    this.icon = \"🚗\";\n    this.materialIcon = \"car\";\n    this.image = transportImage;\n  }\n}\n\nclass FootprintCategoryFood extends FootprintByCategory {\n  constructor(footprint: number, totalFootprint: number) {\n    super(FootprintCategories.FOOD, footprint, totalFootprint);\n    this.color = \"plum\";\n    this.icon = \"🍲\";\n    this.materialIcon = \"food\";\n    this.image = foodImage;\n  }\n}\n\nclass FootprintCategoryHousing extends FootprintByCategory {\n  constructor(footprint: number, totalFootprint: number) {\n    super(FootprintCategories.HOUSING, footprint, totalFootprint);\n    this.color = \"cadetblue\";\n    this.icon = \"🏠\";\n    this.materialIcon = \"home\";\n    this.image = housingImage;\n  }\n}\n\nclass FootprintCategoryGoods extends FootprintByCategory {\n  constructor(footprint: number, totalFootprint: number) {\n    super(FootprintCategories.GOODS, footprint, totalFootprint);\n    this.color = \"khaki\";\n    this.icon = \"🛍️\";\n    this.materialIcon = \"package\";\n    this.image = goodsImage;\n  }\n}\n\nclass FootprintCategoryPublicServices extends FootprintByCategory {\n  constructor(footprint: number, totalFootprint: number) {\n    super(FootprintCategories.PUBLIC_SERVICES, footprint, totalFootprint);\n    this.color = \"mediumslateblue\";\n    this.icon = \"🏛\";\n    this.materialIcon = \"bank\";\n    this.image = publicServicesImage;\n  }\n}\n\nexport type Footprints = Record<FootprintCategories, FootprintByCategory>;\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport deepMerge from \"deepmerge\";\nimport { create } from \"zustand\";\nimport { createJSONStorage, devtools, persist } from \"zustand/middleware\";\n\nimport { Food } from \"../../domain/models/food/Food\";\nimport { Transport } from \"../../domain/models/transport/Transport\";\n\nexport type AppState = {\n  transport: Transport;\n  food: Food;\n};\n\nconst appStore = (): AppState => ({\n  transport: new Transport({}),\n  food: new Food({}),\n});\n\nconst middlewares = (f: any) =>\n  devtools(\n    persist<AppState>(f, {\n      name: \"app-storage\",\n      storage: createJSONStorage(() => AsyncStorage),\n      merge: (persistedState, currentState) =>\n        deepMerge(currentState, persistedState as AppState),\n    }),\n  );\n\nexport const useAppStore = create<\n  AppState,\n  [[\"zustand/devtools\", never], [\"zustand/persist\", unknown]]\n>(middlewares(appStore));\n","export const weeksInYear = 52;\n\nexport const daysInYear = 365;\n","import { HotDrinksPerWeek } from \"./Drinks\";\nimport { daysInYear } from \"../../constants\";\nimport { MilkType } from \"../types\";\n\nexport const defaultHotDrinksPerWeek: HotDrinksPerWeek = {\n  coffee: 7,\n  tea: 0,\n  chocolate: 0,\n};\n\n// https://agribalyse.ademe.fr/app/aliments/18003#Caf%C3%A9,_moulu\nconst groundCoffeeFootprint = 10.09; // kgCO2eq/kg\n\n// we assume that a cup of coffee contains on average 12 grams of ground coffee\nconst defaultCupOfCoffeeQuantity = 0.012; // kg\n\nexport const cupOfCoffeeFootprint =\n  groundCoffeeFootprint * defaultCupOfCoffeeQuantity;\n\n// https://agribalyse.ademe.fr/app/aliments/18020#Th%C3%A9_infus%C3%A9,_non_sucr%C3%A9\nconst brewedTeaFootprint = 0.04;\n\n// https://agribalyse.ademe.fr/app/aliments/18020#Th%C3%A9_infus%C3%A9,_non_sucr%C3%A9\nconst brewedTeaFootprintPart = 0.25;\n\nconst cupOfTeaFootprintWithoutConsumption =\n  brewedTeaFootprint * (1 - brewedTeaFootprintPart);\n\nconst defaultCupOfTeaQuantity = 0.25; // kg\n\nexport const cupOfTeaFootprint =\n  cupOfTeaFootprintWithoutConsumption * defaultCupOfTeaQuantity;\n\n// https://agribalyse.ademe.fr/app/aliments/18100#Cacao,_non_sucr%C3%A9,_poudre_soluble\nconst cocoaFootprint = 27.06;\n\nconst defaultCocoaQuantityPerCup = 0.02; // kg\n\nconst defaultMilkQuantityPerCup = 0.2; // kg\n\nconst milkFootprint = (milkType: MilkType): number => {\n  switch (milkType) {\n    case \"cow\":\n      // https://agribalyse.ademe.fr/app/aliments/19042#Lait_demi-%C3%A9cr%C3%A9m%C3%A9,_pasteuris%C3%A9\n      return 1.32;\n    case \"soy\":\n      // https://agribalyse.ademe.fr/app/aliments/18900#Boisson_au_soja,_nature\n      return 0.44;\n    case \"oat\":\n      // https://agribalyse.ademe.fr/app/aliments/18905#Boisson_à_base_d'avoine,_nature\n      return 0.54;\n  }\n};\n\nexport const cupOfChocolateFootprint = (milkType: MilkType): number =>\n  cocoaFootprint * defaultCocoaQuantityPerCup +\n  milkFootprint(milkType) * defaultMilkQuantityPerCup;\n\n// https://agribalyse.ademe.fr/app/aliments/18430#Eau_embouteillée_de_source\nconst bottledWaterFootprint = 0.27;\n\nconst annualWaterConsumption = 1.5 * daysInYear;\n\nexport const bottledWaterAnnualFootprint =\n  annualWaterConsumption * bottledWaterFootprint;\n\n// https://agribalyse.ademe.fr/app/aliments/18037#Cola,_sucr%C3%A9,_avec_%C3%A9dulcorants\n// https://agribalyse.ademe.fr/app/aliments/2069#Jus_multifruit,_%C3%A0_base_de_concentr%C3%A9,_standard\n// https://agribalyse.ademe.fr/app/aliments/18058#Boisson_pr%C3%A9par%C3%A9e_%C3%A0_partir_de_sirop_%C3%A0_diluer_type_menthe,_fraise,_etc,_sucr%C3%A9,_dilu%C3%A9_dans_l'eau\nexport const sweetDrinkCoef = (0.51 + 0.91 + 0.1) / 3;\n\n// https://agribalyse.ademe.fr/app/aliments/5001#Bi%C3%A8re_%22coeur_de_march%C3%A9%22_(4-5%C2%B0_alcool)\n// https://agribalyse.ademe.fr/app/aliments/5215#Vin_blanc_sec\n// https://agribalyse.ademe.fr/app/aliments/1012#Cocktail_%C3%A0_base_de_rhum\nexport const alcoholDrinkCoef = (1.12 + 1.22 + 0.91) / 3;\n","import {\n  alcoholDrinkCoef,\n  bottledWaterAnnualFootprint,\n  cupOfChocolateFootprint,\n  cupOfCoffeeFootprint,\n  cupOfTeaFootprint,\n  defaultHotDrinksPerWeek,\n  sweetDrinkCoef,\n} from \"./constants\";\nimport { weeksInYear } from \"../../constants\";\nimport { WithAnnualFootprint } from \"../../types\";\nimport { MilkType } from \"../types\";\n\nexport type HotDrink = \"coffee\" | \"tea\" | \"chocolate\";\nexport const HotDrinks: HotDrink[] = [\"coffee\", \"tea\", \"chocolate\"];\n\nexport type HotDrinksPerWeek = Record<HotDrink, number>;\n\ntype Props = {\n  hotDrinksPerWeek?: HotDrinksPerWeek;\n  bottledWater?: boolean;\n  sodaLitersPerWeek?: number;\n  alcoholLitersPerWeek?: number;\n  milkType?: MilkType;\n};\n\nexport class Drinks implements WithAnnualFootprint {\n  hotDrinksPerWeek: HotDrinksPerWeek;\n  bottledWater: boolean;\n  sodaLitersPerWeek: number;\n  alcoholLitersPerWeek: number;\n  milkType: MilkType;\n\n  constructor({\n    hotDrinksPerWeek,\n    bottledWater,\n    sodaLitersPerWeek,\n    alcoholLitersPerWeek,\n    milkType,\n  }: Props) {\n    this.hotDrinksPerWeek = hotDrinksPerWeek ?? defaultHotDrinksPerWeek;\n    this.bottledWater = bottledWater ?? true;\n    this.sodaLitersPerWeek = sodaLitersPerWeek ?? 0;\n    this.alcoholLitersPerWeek = alcoholLitersPerWeek ?? 0;\n    this.milkType = milkType ?? \"cow\";\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      this.hotDrinksAnnualFootprint + this.coldDrinksAnnualFootprint,\n    );\n  }\n\n  private get hotDrinksAnnualFootprint(): number {\n    return (\n      this.coffeeAnnualFootprint +\n      this.teaAnnualFootprint +\n      this.chocolateAnnualFootprint\n    );\n  }\n\n  private get coffeeAnnualFootprint(): number {\n    return this.hotDrinksPerWeek.coffee * weeksInYear * cupOfCoffeeFootprint;\n  }\n\n  private get teaAnnualFootprint(): number {\n    return this.hotDrinksPerWeek.tea * weeksInYear * cupOfTeaFootprint;\n  }\n\n  private get chocolateAnnualFootprint(): number {\n    return (\n      this.hotDrinksPerWeek.chocolate *\n      weeksInYear *\n      cupOfChocolateFootprint(this.milkType)\n    );\n  }\n\n  private get coldDrinksAnnualFootprint(): number {\n    return (\n      this.bottledWaterAnnualFootprint +\n      this.sodaAnnualFootprint +\n      this.alcoholAnnualFootprint\n    );\n  }\n\n  private get bottledWaterAnnualFootprint(): number {\n    if (!this.bottledWater) return 0;\n    return bottledWaterAnnualFootprint;\n  }\n\n  private get sodaAnnualFootprint(): number {\n    return this.sodaLitersPerWeek * weeksInYear * sweetDrinkCoef;\n  }\n\n  private get alcoholAnnualFootprint(): number {\n    return this.alcoholLitersPerWeek * weeksInYear * alcoholDrinkCoef;\n  }\n}\n","import { Diet, LunchesAndDinersPerWeek, Frequency } from \"./types\";\nimport { MilkType } from \"../types\";\n\n// https://nosgestesclimat.fr/documentation/alimentation/plats\n// https://www.bilans-ges.ademe.fr/documentation/UPLOAD_DOC_FR/index.htm?repas.htm\nexport const lunchesAndDinersPerWeekByDiet = (\n  diet: Diet,\n): LunchesAndDinersPerWeek => {\n  switch (diet) {\n    case \"vegan\": {\n      return {\n        vegan: 14,\n        vegetarian: 0,\n        whiteMeat: 0,\n        redMeat: 0,\n        fattyFish: 0,\n        whiteFish: 0,\n      };\n    }\n    case \"vegetarian\": {\n      return {\n        vegan: 3,\n        vegetarian: 11,\n        whiteMeat: 0,\n        redMeat: 0,\n        fattyFish: 0,\n        whiteFish: 0,\n      };\n    }\n    case \"littleMeatConsumer\": {\n      return {\n        vegan: 1,\n        vegetarian: 7,\n        whiteMeat: 4,\n        redMeat: 0,\n        fattyFish: 1,\n        whiteFish: 1,\n      };\n    }\n    case \"regularMeatConsumer\": {\n      return {\n        vegan: 0,\n        vegetarian: 4,\n        whiteMeat: 6,\n        redMeat: 2,\n        fattyFish: 1,\n        whiteFish: 1,\n      };\n    }\n    case \"heavyMeatConsumer\": {\n      return {\n        vegan: 0,\n        vegetarian: 0,\n        whiteMeat: 6,\n        redMeat: 6,\n        fattyFish: 1,\n        whiteFish: 1,\n      };\n    }\n  }\n};\n\n// https://docs.google.com/spreadsheets/d/1SVYvBaaYDOUDcg5jX0eZFEColnWWIL8PCLMGrPR000o/edit#gid=1694091424\nexport const veganMealFootprint = 0.785;\n\n// https://docs.google.com/spreadsheets/d/1SVYvBaaYDOUDcg5jX0eZFEColnWWIL8PCLMGrPR000o/edit#gid=1694091424\nexport const vegetarianMealFootprint = 1.115;\n\n// https://docs.google.com/spreadsheets/d/1SVYvBaaYDOUDcg5jX0eZFEColnWWIL8PCLMGrPR000o/edit#gid=1200865486\nexport const whiteMeatMealFootprint = 2.098;\n\n// https://docs.google.com/spreadsheets/d/1SVYvBaaYDOUDcg5jX0eZFEColnWWIL8PCLMGrPR000o/edit#gid=1200865486\nexport const redMeatMealFootprint = 5.51;\n\n// https://docs.google.com/spreadsheets/d/1SVYvBaaYDOUDcg5jX0eZFEColnWWIL8PCLMGrPR000o/edit#gid=731092178\nexport const fishMealFootprint = 1.63;\n\n// https://docs.google.com/spreadsheets/d/1SVYvBaaYDOUDcg5jX0eZFEColnWWIL8PCLMGrPR000o/edit#gid=731092178\nexport const whiteFishMealFootprint = 2.368;\n\nexport const continentalBreakfastFootprint = 0.289;\n\nexport const milkAndCerealsBreakfastFootprint = (milkType: MilkType) => {\n  switch (milkType) {\n    case \"cow\": {\n      return 0.468;\n    }\n    case \"oat\": {\n      return 0.312;\n    }\n    case \"soy\": {\n      return 0.292;\n    }\n    default: {\n      return 0.468;\n    }\n  }\n};\n\nexport const britishBreakfastFootprint = 1.124;\n\nexport const veganBreakfastFootprint = 0.419;\n\nexport const localProductsFootprintReductionRate = (\n  frequency: Frequency,\n): number => {\n  switch (frequency) {\n    case \"sometimes\": {\n      return 0.33;\n    }\n    case \"often\": {\n      return 0.66;\n    }\n    case \"always\": {\n      return 1;\n    }\n    default: {\n      return 0;\n    }\n  }\n};\n\nexport const seasonalProductsPart = (frequency: Frequency): number => {\n  switch (frequency) {\n    case \"sometimes\": {\n      return 0.33;\n    }\n    case \"often\": {\n      return 0.66;\n    }\n    case \"always\": {\n      return 1;\n    }\n    default: {\n      return 0;\n    }\n  }\n};\n\n// https://github.com/datagir/nosgestesclimat/blob/master/data/alimentation/alimentation%20.%20de%20saison%20.%20ratio.ods\nexport const seasonalProductsRatio = 2.26;\n\n// https://github.com/datagir/nosgestesclimat/blob/master/data/alimentation/alimentation . de saison . pourcentage saisonable.ods\nexport const seasonalPercentage = 0.073;\n","export type MealType =\n  | \"vegetarian\"\n  | \"vegan\"\n  | \"whiteMeat\"\n  | \"redMeat\"\n  | \"whiteFish\"\n  | \"fattyFish\";\n\nexport const MealTypes: MealType[] = [\n  \"vegetarian\",\n  \"vegan\",\n  \"whiteMeat\",\n  \"redMeat\",\n  \"whiteFish\",\n  \"fattyFish\",\n];\n\nexport type BreakfastType =\n  | \"continental\"\n  | \"british\"\n  | \"milk & cereals\"\n  | \"vegan\"\n  | \"none\";\n\nexport const BreakfastTypes: BreakfastType[] = [\n  \"continental\",\n  \"british\",\n  \"milk & cereals\",\n  \"vegan\",\n  \"none\",\n];\n\nexport type Diet =\n  | \"vegetarian\"\n  | \"vegan\"\n  | \"littleMeatConsumer\"\n  | \"regularMeatConsumer\"\n  | \"heavyMeatConsumer\";\n\nexport const Diets: Diet[] = [\n  \"vegan\",\n  \"vegetarian\",\n  \"littleMeatConsumer\",\n  \"regularMeatConsumer\",\n  \"heavyMeatConsumer\",\n];\n\n// the total must be equal to 14 (2 meals per day * 7 days)\nexport type LunchesAndDinersPerWeek = Record<MealType, number>;\n\nexport type Frequency = \"never\" | \"sometimes\" | \"often\" | \"always\";\n\nexport const Frequencies: Frequency[] = [\n  \"never\",\n  \"sometimes\",\n  \"often\",\n  \"always\",\n];\n","import {\n  lunchesAndDinersPerWeekByDiet,\n  veganMealFootprint,\n  vegetarianMealFootprint,\n  whiteMeatMealFootprint,\n  redMeatMealFootprint,\n  fishMealFootprint,\n  whiteFishMealFootprint,\n  continentalBreakfastFootprint,\n  britishBreakfastFootprint,\n  milkAndCerealsBreakfastFootprint,\n  veganBreakfastFootprint,\n  seasonalProductsPart,\n  seasonalProductsRatio,\n  seasonalPercentage,\n  localProductsFootprintReductionRate,\n} from \"./constants\";\nimport {\n  BreakfastType,\n  LunchesAndDinersPerWeek,\n  Frequency,\n  Diet,\n  MealTypes,\n  MealType,\n} from \"./types\";\nimport { daysInYear, weeksInYear } from \"../../constants\";\nimport { WithAnnualFootprint } from \"../../types\";\nimport { MilkType } from \"../types\";\n\ntype Props = {\n  breakfast?: BreakfastType;\n  milkType?: MilkType;\n  diet?: Diet;\n  localProducts?: Frequency;\n  seasonalProducts?: Frequency;\n};\n\nexport class Meals implements WithAnnualFootprint {\n  breakfast: BreakfastType;\n  milkType: MilkType;\n  diet: Diet;\n  lunchesAndDinersPerWeek: LunchesAndDinersPerWeek;\n  localProducts: Frequency;\n  seasonalProducts: Frequency;\n\n  constructor({\n    breakfast,\n    milkType,\n    diet,\n    localProducts,\n    seasonalProducts,\n  }: Props) {\n    this.breakfast = breakfast ?? \"continental\";\n    this.diet = diet ?? \"regularMeatConsumer\";\n    this.lunchesAndDinersPerWeek = lunchesAndDinersPerWeekByDiet(this.diet);\n    this.localProducts = localProducts ?? \"never\";\n    this.seasonalProducts = seasonalProducts ?? \"never\";\n    this.milkType = milkType ?? \"cow\";\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      this.lunchesAndDinersAnnualFootprint +\n        this.breakfastAnnualFootprint +\n        this.seasonalProductsBonus,\n    );\n  }\n\n  private get lunchesAndDinersAnnualFootprint(): number {\n    return this.lunchesAndDinersWeeklyFootprint * weeksInYear;\n  }\n\n  public get lunchesAndDinersWeeklyFootprint(): number {\n    let weeklyFootprint = 0;\n    for (const mealType of MealTypes) {\n      let mealFootprint = 0;\n      let mealFootprintReduction = 0;\n      if (mealType === \"vegan\") {\n        mealFootprint =\n          this.lunchesAndDinersPerWeek[mealType as MealType] *\n          veganMealFootprint;\n        mealFootprintReduction =\n          mealFootprint *\n          0.12 *\n          localProductsFootprintReductionRate(this.localProducts);\n      } else if (mealType === \"vegetarian\") {\n        mealFootprint =\n          this.lunchesAndDinersPerWeek[mealType as MealType] *\n          vegetarianMealFootprint;\n        mealFootprintReduction =\n          mealFootprint *\n          0.08 *\n          localProductsFootprintReductionRate(this.localProducts);\n      } else if (mealType === \"whiteMeat\") {\n        mealFootprint =\n          this.lunchesAndDinersPerWeek[mealType as MealType] *\n          whiteMeatMealFootprint;\n        mealFootprintReduction =\n          mealFootprint *\n          0.03 *\n          localProductsFootprintReductionRate(this.localProducts);\n      } else if (mealType === \"redMeat\") {\n        mealFootprint =\n          this.lunchesAndDinersPerWeek[mealType as MealType] *\n          redMeatMealFootprint;\n        mealFootprintReduction =\n          mealFootprint *\n          0.01 *\n          localProductsFootprintReductionRate(this.localProducts);\n      } else if (mealType === \"fattyFish\") {\n        mealFootprint =\n          this.lunchesAndDinersPerWeek[mealType as MealType] *\n          fishMealFootprint;\n        mealFootprintReduction =\n          mealFootprint *\n          0.05 *\n          localProductsFootprintReductionRate(this.localProducts);\n      } else if (mealType === \"whiteFish\") {\n        mealFootprint =\n          this.lunchesAndDinersPerWeek[mealType as MealType] *\n          whiteFishMealFootprint;\n        mealFootprintReduction =\n          mealFootprint *\n          0.06 *\n          localProductsFootprintReductionRate(this.localProducts);\n      }\n      weeklyFootprint += mealFootprint - mealFootprintReduction;\n    }\n    return Number(weeklyFootprint.toFixed(2));\n  }\n\n  private get breakfastAnnualFootprint(): number {\n    return this.breakfastFootprint * daysInYear;\n  }\n\n  public get breakfastFootprint(): number {\n    switch (this.breakfast) {\n      case \"continental\": {\n        return continentalBreakfastFootprint;\n      }\n      case \"british\": {\n        return britishBreakfastFootprint;\n      }\n      case \"milk & cereals\": {\n        return milkAndCerealsBreakfastFootprint(this.milkType ?? \"cow\");\n      }\n      case \"vegan\": {\n        return veganBreakfastFootprint;\n      }\n      case \"none\": {\n        return 0;\n      }\n      default: {\n        return 0;\n      }\n    }\n  }\n\n  private get seasonalProductsBonus(): number {\n    return this.seasonalFactor * this.seasonPart;\n  }\n\n  private get seasonalFactor(): number {\n    return (\n      (-1 * seasonalProductsPart(this.seasonalProducts)) / seasonalProductsRatio\n    );\n  }\n\n  private get seasonPart(): number {\n    return (\n      seasonalPercentage *\n      (this.breakfastAnnualFootprint + this.lunchesAndDinersAnnualFootprint)\n    );\n  }\n}\n","import {\n  wasteCompostingBonus,\n  householdWasteFootprint,\n  noFoodWasteBonus,\n  recyclingCenterFootprint,\n  separateCollectionFootprint,\n  stopAdvertisingStickerBonus,\n  zeroWasteFootprint,\n} from \"./constants\";\nimport { WithAnnualFootprint } from \"../../types\";\n\nexport type WasteQuantity = \"base\" | \"reduction\" | \"zero\";\n\nexport const WasteQuantities: WasteQuantity[] = [\"base\", \"reduction\", \"zero\"];\n\nexport type WasteBonus =\n  | \"wasteComposting\"\n  | \"noFoodWaste\"\n  | \"stopAdvertisingSticker\";\n\nexport const WasteBonuses: WasteBonus[] = [\n  \"wasteComposting\",\n  \"noFoodWaste\",\n  \"stopAdvertisingSticker\",\n];\n\ntype Props = {\n  quantity?: WasteQuantity;\n  wasteBonuses?: Record<WasteBonus, boolean>;\n};\n\nexport class Waste implements WithAnnualFootprint {\n  quantity: WasteQuantity;\n  wasteBonuses: Record<WasteBonus, boolean>;\n\n  constructor({ quantity, wasteBonuses }: Props) {\n    this.quantity = quantity ?? \"base\";\n    this.wasteBonuses = wasteBonuses ?? {\n      noFoodWaste: false,\n      stopAdvertisingSticker: false,\n      wasteComposting: false,\n    };\n  }\n\n  public get annualFootprint(): number {\n    if (this.quantity === \"zero\") return zeroWasteFootprint;\n    else return Math.round(this.wasteFootprint);\n  }\n\n  private get wasteFootprint(): number {\n    const defaultFootprint =\n      householdWasteFootprint +\n      separateCollectionFootprint +\n      recyclingCenterFootprint;\n\n    if (this.quantity === \"reduction\")\n      return defaultFootprint + this.wasteBonus;\n\n    return defaultFootprint;\n  }\n\n  private get wasteBonus(): number {\n    const { noFoodWaste, stopAdvertisingSticker, wasteComposting } =\n      this.wasteBonuses;\n    let footprintBonus = 0;\n    if (noFoodWaste) footprintBonus += noFoodWasteBonus;\n    if (stopAdvertisingSticker) footprintBonus += stopAdvertisingStickerBonus;\n    if (wasteComposting) footprintBonus += wasteCompostingBonus;\n    return footprintBonus;\n  }\n}\n","// https://nosgestesclimat.fr/documentation/alimentation/d%C3%A9chets/niveau-z%C3%A9ro-d%C3%A9chets\nexport const zeroWasteFootprint = 48;\n\n// https://nosgestesclimat.fr/documentation/alimentation/d%C3%A9chets/niveau-moyen\nexport const householdWasteFootprint = 96.02;\nexport const separateCollectionFootprint = 48.51;\nexport const recyclingCenterFootprint = 49.96;\n\n// https://nosgestesclimat.fr/documentation/alimentation/d%C3%A9chets/gestes/bonus-compostage-biod%C3%A9chets\nexport const wasteCompostingBonus = -11.01; // kgCO2e\n\n// https://nosgestesclimat.fr/documentation/alimentation/d%C3%A9chets/gestes/gaspillage-alimentaire\nexport const noFoodWasteBonus = -30; // kgCO2e\n\n// https://nosgestesclimat.fr/documentation/alimentation/d%C3%A9chets/gestes/stop-pub\nexport const stopAdvertisingStickerBonus = -12.95; // kgCO2e\n","import { Drinks } from \"./drinks/Drinks\";\nimport { Meals } from \"./meals/Meals\";\nimport { Waste } from \"./waste/Waste\";\nimport { WithAnnualFootprint } from \"../types\";\n\ntype Props = {\n  meals?: Meals;\n  drinks?: Drinks;\n  waste?: Waste;\n};\n\nexport class Food implements WithAnnualFootprint {\n  meals: Meals;\n  drinks: Drinks;\n  waste: Waste;\n\n  constructor({ meals, drinks, waste }: Props) {\n    this.meals = new Meals(meals ?? {});\n    this.drinks = new Drinks(drinks ?? {});\n    this.waste = new Waste(waste ?? {});\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      this.meals.annualFootprint +\n        this.drinks.annualFootprint +\n        this.waste.annualFootprint,\n    );\n  }\n}\n","export class PublicServices {\n  // https://github.com/datagir/nosgestesclimat/issues/1583\n  public get annualFootprint(): number {\n    return 1500;\n  }\n}\n","import { averageFootprintPerKm, averageSpeed } from \"./constants\";\nimport { WithAnnualFootprint } from \"../../types\";\n\ntype Props = {\n  usage?: boolean;\n  hoursPerYear?: number;\n};\n\nexport class Boat implements WithAnnualFootprint {\n  usage: boolean;\n  hoursPerYear: number;\n\n  constructor({ usage = false, hoursPerYear = 0 }: Props) {\n    this.usage = usage;\n    this.hoursPerYear = hoursPerYear;\n  }\n\n  public resetValues() {\n    this.usage = false;\n    this.hoursPerYear = 0;\n  }\n\n  public get annualFootprint(): number {\n    if (!this.usage) return 0;\n    return Math.round(this.hoursPerYear * averageSpeed * averageFootprintPerKm);\n  }\n}\n","// https://futur.eco/ferry\n\n// https://www.greenferries.org/ships/mega-express-four-9086590/\nexport const averageSpeed = 33; // km/h\n\n// https://nosgestesclimat.fr/documentation/futureco%E2%80%91data/transport/ferry/empreinte-par-km-volume\nexport const averageFootprintPerKm = 0.3; // kgCO2e/km/passager\n","import { CarEngine, CarSize, FuelType } from \"./Car\";\nimport { g45 } from \"../constants\";\n\nexport const defaultSize: CarSize = \"medium\";\n\nexport const defaultEngine: CarEngine = \"thermal\";\n\nexport const defaultFuelType: FuelType = \"gasoline\";\n\nexport const defaultYears = 5;\n\nexport const defaultAveragePassengers = 1.2;\n\n// l / 100km\n// https://librairie.ademe.fr/mobilite-et-transport/3273-elaboration-selon-les-principes-des-acv-des-bilans-energetiques-des-emissions-de-gaz-a-effet-de-serre-et-des-autres-impacts-environnementaux.html\nexport const defaultAverageFuelConsumption: Record<CarSize, number> = {\n  small: 5,\n  medium: 6,\n  vul: 6,\n  sedan: 7,\n  suv: 8,\n};\n\n// https://bilans-ges.ademe.fr/fr/basecarbone/donnees-consulter/liste-element?recherche=diesel\nexport const defaultAverageFootPrintPerLiter: Record<FuelType, number> = {\n  diesel: 3.1,\n  gasoline: 2.7,\n  biofuels: 1.11,\n};\n\n// https://www.statistiques.developpement-durable.gouv.fr/bilan-annuel-des-transports-en-2019-0 (p.3)\nexport const averageCarKmPerYear = 12200;\n\n// https://librairie.ademe.fr/cadic/7353/enquete-autopartage-2022-rapport.pdf (p.80)\nexport const sharedCarKmPerYear = 15130;\n\n// https://librairie.ademe.fr/mobilite-et-transport/1267-bilan-transversal-de-l-impact-de-l-electrification-par-segment.html\nexport const defaultCarLifetime = 10; // years\n\n// https://www.insee.fr/fr/statistiques/2045167#tableau-figure1_radio1\nconst vehiclesInCirculation = 37880000 + 5977000;\n\n// https://www.citepa.org/fr/secten/\nexport const fluorinatedGasEmissions = 1374000000; // kgCO2e\n\n// https://nosgestesclimat.fr/documentation/empreinte-branche/G45?lang=fr\nexport const g45VehicleMaintenancePart = 0.07;\n\nexport const thermalMaintenanceFootprint =\n  (g45 * 1000000 * g45VehicleMaintenancePart) /\n  vehiclesInCirculation /\n  averageCarKmPerYear;\n\nexport const airConditionerFootprint =\n  fluorinatedGasEmissions / vehiclesInCirculation / averageCarKmPerYear;\n\nexport const electricSmallCarFootprint = 0.0159;\nexport const electricMediumCarFootprint = 0.0198;\nexport const electricCarFootprint = 0.0273;\n\n// https://github.com/betagouv/ecolab-data/files/5945898/vehicule_electrique_rapport.pdf\nexport const thermalCarManufacturingFootprint: Record<CarSize, number> = {\n  small: 6700,\n  medium: 6700,\n  vul: 7600,\n  sedan: 7600,\n  suv: 7600,\n};\n\n// https://github.com/betagouv/ecolab-data/files/5945898/vehicule_electrique_rapport.pdf\nexport const hybridCarManufacturingFootprint: Record<CarSize, number> = {\n  small: 9600,\n  medium: 9600,\n  vul: 6900,\n  sedan: 6900,\n  suv: 6900,\n};\n\n// https://github.com/betagouv/ecolab-data/files/5945898/vehicule_electrique_rapport.pdf\nexport const electricCarManufacturingFootprint: Record<CarSize, number> = {\n  small: 10200,\n  medium: 10200,\n  vul: 20200,\n  sedan: 20200,\n  suv: 20200,\n};\n","/**\n * footprint = kgCO2e or kgC02e/km\n */\n\nimport {\n  airConditionerFootprint,\n  averageCarKmPerYear,\n  defaultAverageFootPrintPerLiter,\n  defaultAverageFuelConsumption,\n  defaultEngine,\n  defaultFuelType,\n  defaultSize,\n  electricCarFootprint,\n  electricCarManufacturingFootprint,\n  electricMediumCarFootprint,\n  electricSmallCarFootprint,\n  hybridCarManufacturingFootprint,\n  defaultCarLifetime,\n  sharedCarKmPerYear,\n  thermalCarManufacturingFootprint,\n  thermalMaintenanceFootprint,\n  defaultYears,\n  defaultAveragePassengers,\n} from \"./constants\";\nimport { WithAnnualFootprint } from \"../../types\";\n\nexport type CarSize = \"small\" | \"medium\" | \"vul\" | \"sedan\" | \"suv\";\nexport const carSizes: CarSize[] = [\"small\", \"medium\", \"vul\", \"sedan\", \"suv\"];\n\nexport type CarEngine = \"thermal\" | \"hybrid\" | \"electric\";\nexport const carEngines: CarEngine[] = [\"thermal\", \"hybrid\", \"electric\"];\n\nexport type FuelType = \"diesel\" | \"gasoline\" | \"biofuels\";\nexport const fuelTypes: FuelType[] = [\"diesel\", \"gasoline\", \"biofuels\"];\n\ntype Props = {\n  regularUser?: boolean;\n  kmPerYear?: number;\n  size?: CarSize;\n  engine?: CarEngine;\n  fuelType?: FuelType;\n  age?: number;\n  averageFuelConsumption?: number;\n  averagePassengers?: number;\n};\n\nexport class Car implements WithAnnualFootprint {\n  regularUser: boolean;\n  kmPerYear: number;\n  size: CarSize;\n  engine: CarEngine;\n  fuelType: FuelType;\n  age: number;\n  lifetime = defaultCarLifetime;\n  averageFuelConsumption;\n  averagePassengers;\n\n  constructor({\n    regularUser = true,\n    kmPerYear = averageCarKmPerYear,\n    age = defaultYears,\n    size = defaultSize,\n    engine = defaultEngine,\n    fuelType = defaultFuelType,\n    averageFuelConsumption = defaultAverageFuelConsumption.medium, // l/100km\n    averagePassengers = defaultAveragePassengers,\n  }: Props) {\n    this.regularUser = regularUser;\n    this.kmPerYear = kmPerYear;\n    this.size = size;\n    this.engine = engine;\n    this.fuelType = fuelType;\n    this.age = age;\n    this.averageFuelConsumption = averageFuelConsumption;\n    this.averagePassengers = averagePassengers;\n  }\n\n  public initValuesForNonRegularUser() {\n    this.size = defaultSize;\n    this.engine = defaultEngine;\n    this.fuelType = defaultFuelType;\n    this.averageFuelConsumption = defaultAverageFuelConsumption[this.size];\n  }\n\n  public get annualFootprint(): number {\n    if (this.kmPerYear === 0) return 0;\n    if (this.regularUser) return Math.floor(this.regularUserFootprint);\n    return Math.floor(this.nonRegularUserFootprint);\n  }\n\n  private get regularUserFootprint(): number {\n    return (\n      (this.carUseFootprint + this.amortizedManufacturingFootprint) /\n      this.averagePassengers\n    );\n  }\n\n  private get nonRegularUserFootprint(): number {\n    return (\n      ((this.manufacturingFootprint / this.lifetime) * this.rentalFactor +\n        this.carUseFootprint) /\n      this.averagePassengers\n    );\n  }\n\n  private get carUseFootprint(): number {\n    return this.kmPerYear * (this.footprintPerKm + this.footprintBasePerKm);\n  }\n\n  // http://www2.ademe.fr/servlet/KBaseShow?catid=13655\n  private get footprintPerKm(): number {\n    if (this.engine === \"electric\") {\n      if (this.size === \"small\") return electricSmallCarFootprint;\n      if (this.size === \"medium\") return electricMediumCarFootprint;\n      return electricCarFootprint;\n    }\n\n    const thermalCarFootprint =\n      (this.averageFuelConsumption / 100) *\n      defaultAverageFootPrintPerLiter[this.fuelType];\n\n    if (this.engine === \"hybrid\") return thermalCarFootprint * 0.85;\n\n    return thermalCarFootprint;\n  }\n\n  private get footprintBasePerKm(): number {\n    return this.weightedMaintenanceFootprint + this.airConditionerFootprint;\n  }\n\n  // https://izi-by-edf.fr/blog/voiture-hybride-entretien/\n  private get weightedMaintenanceFootprint(): number {\n    if (this.engine === \"hybrid\") return thermalMaintenanceFootprint * 0.9;\n    if (this.engine === \"electric\") return thermalMaintenanceFootprint * 0.75;\n    return thermalMaintenanceFootprint;\n  }\n\n  private get airConditionerFootprint(): number {\n    return airConditionerFootprint;\n  }\n\n  private get amortizedManufacturingFootprint(): number {\n    return this.manufacturingFootprint * this.amortization;\n  }\n\n  private get manufacturingFootprint(): number {\n    if (this.engine === \"hybrid\")\n      return hybridCarManufacturingFootprint[this.size];\n    if (this.engine === \"electric\")\n      return electricCarManufacturingFootprint[this.size];\n    return thermalCarManufacturingFootprint[this.size];\n  }\n\n  private get amortization(): number {\n    if (this.age < 10) return 1 / defaultCarLifetime;\n    return 0;\n  }\n\n  private get rentalFactor(): number {\n    return this.kmPerYear / sharedCarKmPerYear;\n  }\n}\n","import { haulFlight } from \"./Plane\";\n\nexport const defaultAverageSpeed: Record<haulFlight, number> = {\n  // we take Paris-Toulouse as a reference flight, in km/h\n  short: 600 / 1.3,\n  // we take Paris-Alger as a reference flight, in km/h\n  medium: 1350 / 2.5,\n  // http://www.abm.fr/voyager-en-avion-le-guide-du-passager/en-complement/distances-et-durees-de-vol.html\n  long: 5800 / 8.5,\n};\n\nexport const defaultAverageFootprintPerKm: Record<haulFlight, number> = {\n  // cf footprint \"Avion passagers - Court courrier, 2018 - AVEC trainées\"\n  short: 0.258,\n  // cf footprint \"Avion passagers - Moyen courrier, 2018 - AVEC trainées\"\n  medium: 0.187,\n  // cf footprint \"Avion passagers - Long courrier, 2018 - AVEC trainées\"\n  long: 0.152,\n};\n","import { defaultAverageFootprintPerKm, defaultAverageSpeed } from \"./constants\";\nimport { WithAnnualFootprint } from \"../../types\";\n\nexport type haulFlight = \"short\" | \"medium\" | \"long\";\n\ntype Props = {\n  usage?: boolean;\n  hoursPerYearInShortHaul?: number;\n  hoursPerYearInMediumHaul?: number;\n  hoursPerYearInLongHaul?: number;\n};\n\nexport class Plane implements WithAnnualFootprint {\n  usage: boolean;\n  hoursPerYearInShortHaul: number;\n  hoursPerYearInMediumHaul: number;\n  hoursPerYearInLongHaul: number;\n\n  constructor({\n    usage = false,\n    hoursPerYearInShortHaul = 0,\n    hoursPerYearInMediumHaul = 0,\n    hoursPerYearInLongHaul = 0,\n  }: Props) {\n    this.usage = usage;\n    this.hoursPerYearInShortHaul = hoursPerYearInShortHaul;\n    this.hoursPerYearInMediumHaul = hoursPerYearInMediumHaul;\n    this.hoursPerYearInLongHaul = hoursPerYearInLongHaul;\n  }\n\n  public resetValues() {\n    this.usage = false;\n    this.hoursPerYearInShortHaul = 0;\n    this.hoursPerYearInMediumHaul = 0;\n    this.hoursPerYearInLongHaul = 0;\n  }\n\n  public get annualFootprint(): number {\n    if (!this.usage) return 0;\n\n    const shortHaulFootprint =\n      this.hoursPerYearInShortHaul *\n      defaultAverageSpeed[\"short\"] *\n      defaultAverageFootprintPerKm[\"short\"];\n\n    const mediumHaulFootprint =\n      this.hoursPerYearInMediumHaul *\n      defaultAverageSpeed[\"medium\"] *\n      defaultAverageFootprintPerKm[\"medium\"];\n\n    const longHaulFootprint =\n      this.hoursPerYearInLongHaul *\n      defaultAverageSpeed[\"long\"] *\n      defaultAverageFootprintPerKm[\"long\"];\n\n    return Math.round(\n      shortHaulFootprint + mediumHaulFootprint + longHaulFootprint,\n    );\n  }\n}\n","import {\n  averageTrainFootprintPerKm,\n  averageBusFootprintPerHour,\n  defaultHoursPerYearInTrain,\n  averageMetroFootprintPerHour,\n} from \"./constants\";\nimport { weeksInYear } from \"../../constants\";\nimport { WithAnnualFootprint } from \"../../types\";\n\ntype Props = {\n  hoursPerYearInTrain?: number;\n  hoursPerWeekInMetro?: number;\n  hoursPerWeekInBus?: number;\n};\n\nexport class PublicTransport implements WithAnnualFootprint {\n  hoursPerYearInTrain: number;\n  hoursPerWeekInMetro: number;\n  hoursPerWeekInBus: number;\n\n  constructor({\n    hoursPerYearInTrain = defaultHoursPerYearInTrain,\n    hoursPerWeekInMetro = 0,\n    hoursPerWeekInBus = 0,\n  }: Props) {\n    this.hoursPerYearInTrain = hoursPerYearInTrain;\n    this.hoursPerWeekInMetro = hoursPerWeekInMetro;\n    this.hoursPerWeekInBus = hoursPerWeekInBus;\n  }\n\n  private get trainAnnualFootprint(): number {\n    return this.hoursPerYearInTrain * averageTrainFootprintPerKm;\n  }\n\n  private get metroWeekFootprint(): number {\n    return (\n      this.hoursPerWeekInMetro * averageMetroFootprintPerHour * weeksInYear\n    );\n  }\n\n  private get busWeekFootprint(): number {\n    return this.hoursPerWeekInBus * averageBusFootprintPerHour * weeksInYear;\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      this.trainAnnualFootprint +\n        this.metroWeekFootprint +\n        this.busWeekFootprint,\n    );\n  }\n}\n","// (TER + TGV) / 2. Cf Base Carbone 04/04/2022 (SNCF)\nexport const averageTrainFootprintPerKm = (0.0296 + 0.00236) / 2;\n\nexport const defaultHoursPerYearInTrain = 1000;\n\n// cf Base Carbone 04/04/2022 (SNCF)\nconst metroFootprintPerKm = 0.00329;\n\n//http://transports.blog.lemonde.fr/2013/03/11/les-petits-secrets-de-la-ratp-reveles-au-public/\nconst metroAverageSpeed = 25; // km/h\n\nexport const averageMetroFootprintPerHour =\n  metroFootprintPerKm * metroAverageSpeed;\n\n// cf Base Carbone 04/04/2022 (SNCF)\nconst busFootprintPerKm = 0.113;\n\n// https://www.lemonde.fr/blog/transports/2013/03/11/les-petits-secrets-de-la-ratp-reveles-au-public/\nconst busAverageSpeed = 12; // km/h\n\nexport const averageBusFootprintPerHour = busFootprintPerKm * busAverageSpeed;\n","import { TwoWheelerType } from \"./TwoWheeler\";\nimport { g45 } from \"../constants\";\n\nexport const defaultTwoWheelerType: TwoWheelerType = \"thermalScooter\";\n\n// cf ADEME - HBEFA (2020)\nexport const twoWheelerDefaultFootprint: Record<TwoWheelerType, number> = {\n  thermalScooter: 0.0763,\n  electricScooter: 0.03,\n  motorbikeLT250: 0.0763,\n  motorbikeGT250: 0.191,\n};\n\n// https://nosgestesclimat.fr/documentation/empreinte-branche/G45?lang=fr\nconst g45VehicleMaintenancePart = 0.07;\nconst g45VehicleBusinessPart = 0.69;\nconst g45MotorbikePart = 0.02;\n\n// https://www.onisr.securite-routiere.gouv.fr/etudes-et-recherches/vehicules/parc-des-vehicules/le-parc-deux-roues-motorises-des-menages\nconst twoWheelerInCirculation = 2700000;\n\n// https://www.statistiques.developpement-durable.gouv.fr/bilan-annuel-des-transports-en-2019-0 (G1-1)\nconst averageTwoWheelerKmPerYear = 3000;\n\nexport const thermalMaintenanceFootprint =\n  (g45 * 1000000 * g45MotorbikePart * g45VehicleMaintenancePart) /\n  (g45VehicleBusinessPart + g45VehicleMaintenancePart) /\n  twoWheelerInCirculation /\n  averageTwoWheelerKmPerYear;\n","import {\n  defaultTwoWheelerType,\n  thermalMaintenanceFootprint,\n  twoWheelerDefaultFootprint,\n} from \"./constants\";\nimport { WithAnnualFootprint } from \"../../types\";\n\nexport type TwoWheelerType =\n  | \"thermalScooter\"\n  | \"electricScooter\"\n  | \"motorbikeLT250\"\n  | \"motorbikeGT250\";\n\nexport const TwoWheelerTypes: TwoWheelerType[] = [\n  \"thermalScooter\",\n  \"electricScooter\",\n  \"motorbikeLT250\",\n  \"motorbikeGT250\",\n];\n\ntype Props = {\n  usage?: boolean;\n  type?: TwoWheelerType;\n  kmPerYear?: number;\n};\n\nexport class TwoWheeler implements WithAnnualFootprint {\n  usage: boolean;\n  type: TwoWheelerType;\n  kmPerYear: number;\n\n  constructor({\n    usage = false,\n    type = defaultTwoWheelerType,\n    kmPerYear = 0,\n  }: Props) {\n    this.usage = usage;\n    this.type = type;\n    this.kmPerYear = kmPerYear;\n  }\n\n  public resetValues() {\n    this.usage = false;\n    this.type = defaultTwoWheelerType;\n    this.kmPerYear = 0;\n  }\n\n  public get annualFootprint(): number {\n    if (!this.usage || this.kmPerYear === 0) return 0;\n    return Math.floor(\n      (this.footprintPerKm + this.weightedMaintenanceFootprint) *\n        this.kmPerYear,\n    );\n  }\n\n  private get footprintPerKm(): number {\n    return twoWheelerDefaultFootprint[this.type];\n  }\n\n  private get weightedMaintenanceFootprint(): number {\n    const maintenanceFootprint = this.maintenanceFootprint;\n    if (this.type === \"electricScooter\") return maintenanceFootprint * 0.75;\n    return maintenanceFootprint;\n  }\n\n  private get maintenanceFootprint(): number {\n    return thermalMaintenanceFootprint;\n  }\n}\n","import { Boat } from \"./boat/Boat\";\nimport { Car } from \"./car/Car\";\nimport { Plane } from \"./plane/Plane\";\nimport { PublicTransport } from \"./public-transport/PublicTransport\";\nimport { TwoWheeler } from \"./two-wheeler/TwoWheeler\";\nimport { WithAnnualFootprint } from \"../types\";\n\ntype Props = {\n  car?: Car;\n  twoWheeler?: TwoWheeler;\n  plane?: Plane;\n  boat?: Boat;\n  publicTransport?: PublicTransport;\n};\n\nexport class Transport implements WithAnnualFootprint {\n  car: Car;\n  twoWheeler: TwoWheeler;\n  plane: Plane;\n  boat: Boat;\n  publicTransport: PublicTransport;\n\n  constructor({ car, twoWheeler, plane, boat, publicTransport }: Props) {\n    this.car = new Car(car ?? {});\n    this.twoWheeler = new TwoWheeler(twoWheeler ?? {});\n    this.plane = new Plane(plane ?? {});\n    this.boat = new Boat(boat ?? {});\n    this.publicTransport = new PublicTransport(publicTransport ?? {});\n  }\n\n  public get annualFootprint(): number {\n    return Math.round(\n      this.car.annualFootprint +\n        this.twoWheeler.annualFootprint +\n        this.plane.annualFootprint +\n        this.boat.annualFootprint +\n        this.publicTransport.annualFootprint,\n    );\n  }\n}\n","import { Food } from \"../../domain/models/food/Food\";\nimport { PublicServices } from \"../../domain/models/public-services/PublicServices\";\nimport { Transport } from \"../../domain/models/transport/Transport\";\nimport { EmissionsRepository } from \"../../domain/repositories/EmissionsRepository\";\n\nexport class EmissionsInMemoryRepository implements EmissionsRepository {\n  private transport: Transport = new Transport({});\n  private food: Food = new Food({});\n  private publicServices: PublicServices = new PublicServices();\n\n  fetchTransport(): Transport {\n    return this.transport;\n  }\n\n  updateTransport(transport: Transport): void {\n    this.transport = new Transport(transport);\n  }\n\n  fetchFood(): Food {\n    return this.food;\n  }\n\n  updateFood(food: Food): void {\n    this.food = new Food(food);\n  }\n\n  fetchPublicServices(): PublicServices {\n    return this.publicServices;\n  }\n\n  injectFakeTransport(transport: Transport): void {\n    this.transport = new Transport(transport);\n  }\n\n  injectFakeFood(food: Food): void {\n    this.food = new Food(food);\n  }\n}\n","import { useAppStore } from \"./store\";\nimport { Food } from \"../../domain/models/food/Food\";\nimport { Transport } from \"../../domain/models/transport/Transport\";\n\nexport const appStoreActions = {\n  getTransport: () => useAppStore.getState().transport,\n\n  setTransport: (transport: Transport) =>\n    useAppStore.setState((state) => ({ ...state, transport })),\n\n  getFood: () => useAppStore.getState().food,\n\n  setFood: (food: Food) =>\n    useAppStore.setState((state) => ({ ...state, food })),\n};\n","import { Food } from \"../../domain/models/food/Food\";\nimport { PublicServices } from \"../../domain/models/public-services/PublicServices\";\nimport { Transport } from \"../../domain/models/transport/Transport\";\nimport { EmissionsRepository } from \"../../domain/repositories/EmissionsRepository\";\nimport { appStoreActions } from \"../store/storeActions\";\n\nexport class EmissionsStoreRepository implements EmissionsRepository {\n  fetchTransport(): Transport {\n    const storedTransport = appStoreActions.getTransport();\n    const transport = new Transport({\n      car: storedTransport.car,\n      twoWheeler: storedTransport.twoWheeler,\n      plane: storedTransport.plane,\n      boat: storedTransport.boat,\n      publicTransport: storedTransport.publicTransport,\n      // TODO : ajouter les autres catégories\n    });\n    return transport;\n  }\n\n  updateTransport(transport: Transport): void {\n    return appStoreActions.setTransport(transport);\n  }\n\n  fetchFood(): Food {\n    const storedFood = appStoreActions.getFood();\n    const food = new Food({\n      meals: storedFood.meals,\n      drinks: storedFood.drinks,\n      waste: storedFood.waste,\n    });\n    return food;\n  }\n\n  updateFood(food: Food): void {\n    return appStoreActions.setFood(food);\n  }\n\n  fetchPublicServices(): PublicServices {\n    const publicServices = new PublicServices();\n    return publicServices;\n  }\n}\n","import { EmissionsRepository } from \"../repositories/EmissionsRepository\";\n\nexport const createUseComputeTotalAnnualFootprint = (\n  emissionsRepository: EmissionsRepository,\n) =>\n  function useComputeTotalAnnualFootprint() {\n    const computeTotalAnnualFootprint = (): number => {\n      const transport = emissionsRepository.fetchTransport();\n      const food = emissionsRepository.fetchFood();\n      const publicServices = emissionsRepository.fetchPublicServices();\n\n      // TODO : ajouter les autres catégories\n\n      return (\n        transport.annualFootprint +\n        food.annualFootprint +\n        publicServices.annualFootprint\n      );\n    };\n\n    return { computeTotalAnnualFootprint };\n  };\n","import { Food } from \"../models/food/Food\";\nimport { EmissionsRepository } from \"../repositories/EmissionsRepository\";\n\nexport const createUseFetchFood = (emissionsRepository: EmissionsRepository) =>\n  function useFetchFood() {\n    const fetchFood = (): Food => {\n      return emissionsRepository.fetchFood();\n    };\n\n    return { fetchFood };\n  };\n","import { PublicServices } from \"../models/public-services/PublicServices\";\nimport { EmissionsRepository } from \"../repositories/EmissionsRepository\";\n\nexport const createUseFetchPublicServices = (\n  emissionsRepository: EmissionsRepository,\n) =>\n  function useFetchPublicServices() {\n    const fetchPublicServices = (): PublicServices => {\n      return emissionsRepository.fetchPublicServices();\n    };\n\n    return { fetchPublicServices };\n  };\n","import { Transport } from \"../models/transport/Transport\";\nimport { EmissionsRepository } from \"../repositories/EmissionsRepository\";\n\nexport const createUseFetchTransport = (\n  emissionsRepository: EmissionsRepository,\n) =>\n  function useFetchTransport() {\n    const fetchTransport = (): Transport => {\n      return emissionsRepository.fetchTransport();\n    };\n\n    return { fetchTransport };\n  };\n","import { Drinks } from \"../models/food/drinks/Drinks\";\nimport { Meals } from \"../models/food/meals/Meals\";\nimport { Waste } from \"../models/food/waste/Waste\";\nimport { EmissionsRepository } from \"../repositories/EmissionsRepository\";\n\nexport const createUseUpdateFood = (emissionsRepository: EmissionsRepository) =>\n  function useUpdateFood() {\n    const updateMeals = (values: Meals) => {\n      const newMeals = new Meals(values);\n\n      const newFood = emissionsRepository.fetchFood();\n      newFood.meals = newMeals;\n\n      emissionsRepository.updateFood(newFood);\n    };\n\n    const updateDrinks = (values: Drinks) => {\n      const newDrinks = new Drinks(values);\n\n      const newFood = emissionsRepository.fetchFood();\n      newFood.drinks = newDrinks;\n\n      emissionsRepository.updateFood(newFood);\n    };\n\n    const updateWaste = (values: Waste) => {\n      const newWaste = new Waste(values);\n\n      const newFood = emissionsRepository.fetchFood();\n      newFood.waste = newWaste;\n\n      emissionsRepository.updateFood(newFood);\n    };\n\n    return {\n      updateMeals,\n      updateDrinks,\n      updateWaste,\n    };\n  };\n","import { Boat } from \"../models/transport/boat/Boat\";\nimport { Car } from \"../models/transport/car/Car\";\nimport { Plane } from \"../models/transport/plane/Plane\";\nimport { PublicTransport } from \"../models/transport/public-transport/PublicTransport\";\nimport { TwoWheeler } from \"../models/transport/two-wheeler/TwoWheeler\";\nimport { EmissionsRepository } from \"../repositories/EmissionsRepository\";\n\nexport const createUseUpdateTransport = (\n  emissionsRepository: EmissionsRepository,\n) =>\n  function useUpdateTransport() {\n    const updateCar = (values: Car) => {\n      const newCar = new Car(values);\n      if (!newCar.regularUser) newCar.initValuesForNonRegularUser();\n\n      const newTransport = emissionsRepository.fetchTransport();\n      newTransport.car = newCar;\n\n      emissionsRepository.updateTransport(newTransport);\n    };\n\n    const updateTwoWheeler = (values: TwoWheeler) => {\n      const newTwoWheeler = new TwoWheeler(values);\n      if (!newTwoWheeler.usage) newTwoWheeler.resetValues();\n\n      const newTransport = emissionsRepository.fetchTransport();\n      newTransport.twoWheeler = newTwoWheeler;\n\n      emissionsRepository.updateTransport(newTransport);\n    };\n\n    const updatePlane = (values: Plane) => {\n      const newPlane = new Plane(values);\n      if (!newPlane.usage) newPlane.resetValues();\n\n      const newTransport = emissionsRepository.fetchTransport();\n      newTransport.plane = newPlane;\n\n      emissionsRepository.updateTransport(newTransport);\n    };\n\n    const updateBoat = (values: Boat) => {\n      const newBoat = new Boat(values);\n      if (!newBoat.usage) newBoat.resetValues();\n\n      const newTransport = emissionsRepository.fetchTransport();\n      newTransport.boat = newBoat;\n\n      emissionsRepository.updateTransport(newTransport);\n    };\n\n    const updatePublicTransport = (values: PublicTransport) => {\n      const newPublicTransport = new PublicTransport(values);\n\n      const newTransport = emissionsRepository.fetchTransport();\n      newTransport.publicTransport = newPublicTransport;\n\n      emissionsRepository.updateTransport(newTransport);\n    };\n\n    return {\n      updateCar,\n      updateTwoWheeler,\n      updatePlane,\n      updateBoat,\n      updatePublicTransport,\n    };\n  };\n","import { createContext } from \"react\";\n\nimport { EmissionsInMemoryRepository } from \"../data/repositories/EmissionsInMemoryRepository\";\nimport { EmissionsStoreRepository } from \"../data/repositories/EmissionsStoreRepository\";\nimport { EmissionsRepository } from \"../domain/repositories/EmissionsRepository\";\nimport { createUseComputeTotalAnnualFootprint } from \"../domain/usecases/computeTotalAnnualFootprint\";\nimport { createUseFetchFood } from \"../domain/usecases/fetchFood\";\nimport { createUseFetchPublicServices } from \"../domain/usecases/fetchPublicServices\";\nimport { createUseFetchTransport } from \"../domain/usecases/fetchTransport\";\nimport { createUseUpdateFood } from \"../domain/usecases/updateFood\";\nimport { createUseUpdateTransport } from \"../domain/usecases/updateTransport\";\n\nconst isTestMode = process.env.NODE_ENV === \"test\";\n\ninterface Repositories {\n  emissionsRepository: EmissionsRepository;\n}\n\nconst initRealRepositories = () => ({\n  emissionsRepository: new EmissionsStoreRepository(),\n});\n\nexport const initFakeRepositories = () => ({\n  emissionsRepository: new EmissionsInMemoryRepository(),\n});\n\nconst repositories: Repositories = isTestMode\n  ? initFakeRepositories()\n  : initRealRepositories();\n\nconst initUsecases = (repositories: Repositories) => {\n  const { emissionsRepository } = repositories;\n\n  return {\n    useFetchTransport: createUseFetchTransport(emissionsRepository),\n    useUpdateTransport: createUseUpdateTransport(emissionsRepository),\n    useFetchFood: createUseFetchFood(emissionsRepository),\n    useUpdateFood: createUseUpdateFood(emissionsRepository),\n    useComputeTotalAnnualFootprint:\n      createUseComputeTotalAnnualFootprint(emissionsRepository),\n    useFetchPublicServices: createUseFetchPublicServices(emissionsRepository),\n  };\n};\n\nconst usecases = initUsecases(repositories);\n\nconst UsecasesContext = createContext(usecases);\n\nexport type { Repositories };\nexport { UsecasesContext };\n","import { useContext, useMemo } from \"react\";\n\nimport { FootprintByCategory, Footprints } from \"./Footprint\";\nimport { UsecasesContext } from \"../../common/UsecasesContext\";\nimport { useAppStore } from \"../../data/store/store\";\n\nexport const useFootprints = () => {\n  const appStore = useAppStore((store) => store);\n\n  const {\n    useFetchTransport,\n    useFetchFood,\n    useFetchPublicServices,\n    useComputeTotalAnnualFootprint,\n  } = useContext(UsecasesContext);\n\n  const { computeTotalAnnualFootprint } = useComputeTotalAnnualFootprint();\n  const { fetchTransport } = useFetchTransport();\n  const { fetchFood } = useFetchFood();\n  const { fetchPublicServices } = useFetchPublicServices();\n\n  const transport = useMemo(() => fetchTransport(), [appStore]);\n  const food = useMemo(() => fetchFood(), [appStore]);\n  const publicServices = useMemo(() => fetchPublicServices(), [appStore]);\n  const totalAnnualFootprint = useMemo(\n    () => computeTotalAnnualFootprint(),\n    [appStore],\n  );\n\n  const footprints: Footprints = {\n    transport: FootprintByCategory.forTransport(\n      transport.annualFootprint,\n      totalAnnualFootprint,\n    ),\n    food: FootprintByCategory.forFood(\n      food.annualFootprint,\n      totalAnnualFootprint,\n    ),\n    goods: FootprintByCategory.forGoods(\n      transport.annualFootprint,\n      totalAnnualFootprint,\n    ),\n    housing: FootprintByCategory.forHousing(\n      transport.annualFootprint,\n      totalAnnualFootprint,\n    ),\n    publicServices: FootprintByCategory.forPublicServices(\n      publicServices.annualFootprint,\n      totalAnnualFootprint,\n    ),\n  };\n\n  return { footprints, totalAnnualFootprint };\n};\n","import { ScrollView, View } from \"react-native\";\n\nimport { EmissionsDataTable } from \"./EmissionsDataTable\";\nimport { EmissionsDistribution } from \"./EmissionsDistribution\";\nimport { EmissionsEstimationButton } from \"./EmissionsEstimationButton\";\nimport { EmissionsTitle } from \"./EmissionsTitle\";\nimport { useFootprints } from \"../../view-models/useFootprints\";\n\nexport const Emissions = () => {\n  const { footprints, totalAnnualFootprint } = useFootprints();\n\n  return (\n    <ScrollView\n      contentContainerStyle={{ justifyContent: \"center\", alignItems: \"center\" }}\n    >\n      <View>\n        <EmissionsTitle />\n      </View>\n\n      <View style={{ width: 300 }}>\n        <EmissionsDistribution\n          footprints={footprints}\n          totalFootprint={totalAnnualFootprint}\n        />\n      </View>\n\n      {/* <View style={{ width: \"90%\" }}>\n        <EmissionsGoal />\n      </View> */}\n\n      <View style={{ width: \"90%\" }}>\n        <EmissionsDataTable footprints={footprints} />\n      </View>\n\n      <View style={{ width: \"90%\", marginTop: 20, marginBottom: 20 }}>\n        <EmissionsEstimationButton />\n      </View>\n    </ScrollView>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport { Text } from \"react-native-paper\";\n\nexport const Objectives = () => {\n  const { t } = useTranslation([\"common\"]);\n\n  return (\n    <Text style={{ textAlign: \"center\", marginTop: 10 }}>\n      {t(\"comingSoon\")}\n    </Text>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport { StyleSheet } from \"react-native\";\nimport { Avatar, Card } from \"react-native-paper\";\nimport { IconSource } from \"react-native-paper/lib/typescript/components/Icon\";\n\nimport { FootprintByCategory } from \"../../view-models/Footprint\";\n\ntype Props = {\n  title: string;\n  footprint: FootprintByCategory;\n  icon: IconSource;\n  imageSource?: string;\n  onClick: () => void;\n};\n\nexport const ProfileCategoryCard = ({\n  title,\n  footprint,\n  icon,\n  imageSource,\n  onClick,\n}: Props) => {\n  const { t } = useTranslation(\"common\");\n\n  return (\n    <Card style={styles.card} onPress={onClick}>\n      <Card.Title\n        title={title}\n        subtitle={`${footprint.footprint} ${t(\"footprintKgPerYear\")}`}\n        left={(props: any) => (\n          <Avatar.Icon\n            {...props}\n            icon={icon}\n            style={{ backgroundColor: footprint.color }}\n          />\n        )}\n        right={(props: any) => (\n          <Avatar.Text\n            {...props}\n            label={`${footprint.part} %`}\n            color={footprint.color}\n            style={{\n              backgroundColor: null,\n              borderWidth: 2,\n              borderColor: footprint.color,\n              width: 40,\n              height: 40,\n            }}\n          />\n        )}\n        style={{ paddingRight: 16 }}\n      />\n      <Card.Cover\n        resizeMode=\"contain\"\n        source={{ uri: imageSource }}\n        style={styles.image}\n      />\n    </Card>\n  );\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    width: \"100%\",\n  },\n  image: {\n    height: 150,\n  },\n});\n","import { useNavigation } from \"@react-navigation/native\";\nimport { useTranslation } from \"react-i18next\";\nimport { View, StyleSheet, ScrollView } from \"react-native\";\n\nimport { ProfileCategoryCard } from \"./ProfileCategoryCard\";\nimport { useProfile } from \"./useProfile\";\nimport { AppNavigationProp } from \"../../../common/AppNavigation\";\n\nexport const Profile = () => {\n  const { t } = useTranslation(\"common\");\n\n  const { navigate } = useNavigation<AppNavigationProp>();\n\n  const {\n    transportFootprint,\n    housingFootprint,\n    foodFootprint,\n    goodsFootprint,\n    publicServicesFootprint,\n  } = useProfile();\n\n  return (\n    <ScrollView>\n      <View style={styles.container}>\n        <ProfileCategoryCard\n          title={t(\"transport\")}\n          icon={transportFootprint.materialIcon}\n          footprint={transportFootprint}\n          imageSource={transportFootprint.image}\n          onClick={() => navigate(\"TransportProfile\")}\n        />\n        <ProfileCategoryCard\n          title={t(\"housing\")}\n          icon={housingFootprint.materialIcon}\n          footprint={housingFootprint}\n          imageSource={housingFootprint.image}\n          onClick={() => navigate(\"Profile\")}\n        />\n        <ProfileCategoryCard\n          title={t(\"food\")}\n          icon={foodFootprint.materialIcon}\n          footprint={foodFootprint}\n          imageSource={foodFootprint.image}\n          onClick={() => navigate(\"FoodProfile\")}\n        />\n        <ProfileCategoryCard\n          title={t(\"goods\")}\n          icon={goodsFootprint.materialIcon}\n          footprint={goodsFootprint}\n          imageSource={goodsFootprint.image}\n          onClick={() => navigate(\"Profile\")}\n        />\n        <ProfileCategoryCard\n          title={t(\"publicServices\")}\n          icon={publicServicesFootprint.materialIcon}\n          footprint={publicServicesFootprint}\n          imageSource={publicServicesFootprint.image}\n          onClick={() => navigate(\"Profile\")}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: 10,\n    gap: 10,\n  },\n});\n","import { FootprintCategories } from \"../../../domain/models/Categories\";\nimport { useFootprints } from \"../../view-models/useFootprints\";\n\nexport const useProfile = () => {\n  const { footprints } = useFootprints();\n\n  return {\n    transportFootprint: footprints[FootprintCategories.TRANSPORT],\n    housingFootprint: footprints[FootprintCategories.HOUSING],\n    foodFootprint: footprints[FootprintCategories.FOOD],\n    goodsFootprint: footprints[FootprintCategories.GOODS],\n    publicServicesFootprint: footprints[FootprintCategories.PUBLIC_SERVICES],\n  };\n};\n","export type StringifyProperties<T> = {\n  [K in keyof T]: string;\n};\n\nexport const convertStringToType = (\n  value: string,\n  targetType: unknown,\n): any => {\n  if (targetType === \"string\") {\n    return value;\n  } else if (targetType === \"number\") {\n    return Number(value);\n  } else if (targetType === \"boolean\") {\n    return value === \"true\";\n  } else if (targetType === \"object\") {\n    return JSON.parse(value);\n  }\n\n  throw new Error(\"Unsupported targetType\");\n};\n","import { DefaultValues, FieldValues, useForm } from \"react-hook-form\";\n\nimport { WithAnnualFootprint } from \"../../../../domain/models/types\";\nimport { convertStringToType } from \"../../../../types/utils\";\n\nexport const useUpdateForm = <\n  T extends WithAnnualFootprint,\n  K extends FieldValues,\n>(\n  defaultValues: DefaultValues<K>,\n  storedData: T,\n  updateUsecase: (data: T) => void,\n) => {\n  const { getValues, ...rest } = useForm<K>({ defaultValues });\n\n  const handleUpdate = (field: any) => {\n    const stringValue = getValues(field);\n    const targetType = typeof storedData[field as keyof T];\n    if (targetType === \"undefined\") return;\n    const value = convertStringToType(stringValue, targetType);\n    const updatedData = { ...storedData, [field]: value };\n    updateUsecase(updatedData);\n  };\n\n  return { handleUpdate, getValues, ...rest };\n};\n","export type MilkType = \"cow\" | \"soy\" | \"oat\";\n\nexport const MilkTypes: MilkType[] = [\"cow\", \"soy\", \"oat\"];\n","import { StyleSheet } from \"react-native\";\n\nexport const styles = StyleSheet.create({\n  listContentContainer: {\n    padding: 15,\n    paddingLeft: 15, // needed to force the left padding\n  },\n  rowContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    gap: 10,\n  },\n  columnContainer: {\n    flexDirection: \"column\",\n    gap: 10,\n  },\n  divider: {\n    marginTop: 10,\n    marginBottom: 10,\n  },\n});\n","import { PropsWithChildren } from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { styles } from \"./styles\";\n\nexport const ColumnContainer = ({\n  children,\n  style,\n}: PropsWithChildren & { style?: ViewStyle }) => {\n  const { columnContainer } = styles;\n  return <View style={{ ...columnContainer, ...style }}>{children}</View>;\n};\n","import { PropsWithChildren } from \"react\";\nimport { View } from \"react-native\";\n\nimport { styles } from \"./styles\";\n\nexport const ListContentContainer = ({ children }: PropsWithChildren) => {\n  const { listContentContainer } = styles;\n  return <View style={listContentContainer}>{children}</View>;\n};\n","import { Divider } from \"react-native-paper\";\n\nimport { styles } from \"./styles\";\n\nexport const ListItemDivider = () => {\n  const { divider } = styles;\n  return <Divider style={divider} />;\n};\n","import { View } from \"react-native\";\nimport { Text } from \"react-native-paper\";\n\ntype Props = {\n  title: string;\n  subtitle?: string;\n};\n\nexport const ListTitle = ({ title, subtitle }: Props) => {\n  return (\n    <View style={{ flexDirection: \"column\" }}>\n      <Text variant={subtitle ? \"titleSmall\" : \"titleMedium\"}>{title}</Text>\n      {subtitle && <Text variant=\"bodySmall\">{subtitle}</Text>}\n    </View>\n  );\n};\n","import { PropsWithChildren } from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { styles } from \"./styles\";\n\nexport const RowContainer = ({\n  children,\n  style,\n}: PropsWithChildren & { style?: ViewStyle }) => {\n  const { rowContainer } = styles;\n  return <View style={{ ...rowContainer, ...style }}>{children}</View>;\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { View } from \"react-native\";\nimport { List, SegmentedButtons, Text, TextInput } from \"react-native-paper\";\n\nimport { FormValues, useDrinks } from \"./useDrinks\";\nimport { MilkTypes } from \"../../../../../domain/models/food/types\";\nimport { ColumnContainer } from \"../../components/ColumnContainer\";\nimport { ListContentContainer } from \"../../components/ListContentContainer\";\nimport { ListItemDivider } from \"../../components/ListItemDivider\";\nimport { ListTitle } from \"../../components/ListTitle\";\nimport { RowContainer } from \"../../components/RowContainer\";\n\nexport const DrinksSection = () => {\n  const { t } = useTranslation([\"food\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, annualFootprint, disableMilkSelection } =\n    useDrinks();\n\n  return (\n    <List.Accordion\n      title={\n        <ListTitle\n          title={t(\"emissions:food.drinks\")}\n          subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n        />\n      }\n      left={(props) => <List.Icon {...props} icon=\"water\" />}\n    >\n      <ListContentContainer>\n        <RowContainer style={{ marginBottom: 10 }}>\n          <Text variant=\"labelLarge\" style={{ textAlign: \"center\" }}>\n            {t(\"drinks.hotDrinksPerWeek\")}\n          </Text>\n        </RowContainer>\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"drinks.chocolatePerWeek\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"chocolatePerWeek\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"chocolatePerWeek\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n        <RowContainer style={{ marginTop: 10 }}>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"drinks.coffeePerWeek\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"coffeePerWeek\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"coffeePerWeek\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n        <RowContainer style={{ marginTop: 10 }}>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"drinks.teaPerWeek\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"teaPerWeek\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"teaPerWeek\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"milk.type\")}</Text>\n          <Controller<FormValues>\n            name=\"milkType\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"milkType\");\n                }}\n                buttons={MilkTypes.map((type) => ({\n                  value: type,\n                  label: t(`milk.types.${type}`),\n                  disabled: disableMilkSelection,\n                }))}\n              />\n            )}\n          />\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"drinks.bottledWater\")}</Text>\n          <View>\n            <Controller<FormValues>\n              name=\"bottledWater\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"bottledWater\");\n                  }}\n                  buttons={[\n                    { value: \"true\", label: t(\"common:yes\") },\n                    { value: \"false\", label: t(\"common:no\") },\n                  ]}\n                />\n              )}\n            />\n          </View>\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"drinks.sodaLitersPerWeek\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"sodaLitersPerWeek\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"sodaLitersPerWeek\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"drinks.alcoholLitersPerWeek\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"alcoholLitersPerWeek\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"alcoholLitersPerWeek\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </List.Accordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"../../../../../common/UsecasesContext\";\nimport { useAppStore } from \"../../../../../data/store/store\";\nimport { Drinks } from \"../../../../../domain/models/food/drinks/Drinks\";\nimport { StringifyProperties } from \"../../../../../types/utils\";\nimport { useUpdateForm } from \"../../utils/useUpdateForm\";\n\nexport type FormValues = Omit<\n  StringifyProperties<\n    Drinks & {\n      chocolatePerWeek: number;\n      coffeePerWeek: number;\n      teaPerWeek: number;\n    }\n  >,\n  \"annualFootprint\"\n>;\n\nexport const useDrinks = () => {\n  const storedDrinks = useAppStore((store) => store.food.drinks);\n  const annualFootprint = new Drinks(storedDrinks).annualFootprint;\n\n  const { useUpdateFood } = useContext(UsecasesContext);\n  const { updateDrinks } = useUpdateFood();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    hotDrinksPerWeek: JSON.stringify(storedDrinks.hotDrinksPerWeek),\n    chocolatePerWeek: storedDrinks.hotDrinksPerWeek.chocolate.toString(),\n    coffeePerWeek: storedDrinks.hotDrinksPerWeek.coffee.toString(),\n    teaPerWeek: storedDrinks.hotDrinksPerWeek.tea.toString(),\n    milkType: storedDrinks.milkType,\n    alcoholLitersPerWeek: storedDrinks.alcoholLitersPerWeek.toString(),\n    sodaLitersPerWeek: storedDrinks.sodaLitersPerWeek.toString(),\n    bottledWater: storedDrinks.bottledWater.toString(),\n  });\n\n  const { handleUpdate, control, watch, setValue } = useUpdateForm<\n    Drinks,\n    FormValues\n  >(getDefaultValues(), storedDrinks, updateDrinks);\n\n  const chocolatePerWeek = watch(\"chocolatePerWeek\");\n  const coffeePerWeek = watch(\"coffeePerWeek\");\n  const teaPerWeek = watch(\"teaPerWeek\");\n\n  useEffect(() => {\n    setValue(\n      \"hotDrinksPerWeek\",\n      JSON.stringify({\n        chocolate: Number(chocolatePerWeek) || 0,\n        coffee: Number(coffeePerWeek) || 0,\n        tea: Number(teaPerWeek) || 0,\n      }),\n    );\n    handleUpdate(\"hotDrinksPerWeek\");\n  }, [chocolatePerWeek, coffeePerWeek, teaPerWeek]);\n\n  const disableMilkSelection = chocolatePerWeek === \"0\" || !chocolatePerWeek;\n\n  return { annualFootprint, control, handleUpdate, disableMilkSelection };\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { View } from \"react-native\";\nimport { List, SegmentedButtons, Text } from \"react-native-paper\";\n\nimport { FormValues, useMeals } from \"./useMeals\";\nimport {\n  BreakfastTypes,\n  Diets,\n  Frequencies,\n} from \"../../../../../domain/models/food/meals/types\";\nimport { MilkTypes } from \"../../../../../domain/models/food/types\";\nimport { ColumnContainer } from \"../../components/ColumnContainer\";\nimport { ListContentContainer } from \"../../components/ListContentContainer\";\nimport { ListItemDivider } from \"../../components/ListItemDivider\";\nimport { ListTitle } from \"../../components/ListTitle\";\n\nexport const MealsSection = () => {\n  const { t } = useTranslation([\"food\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, milkAndCerealsBreakfast, annualFootprint } =\n    useMeals();\n\n  return (\n    <List.Accordion\n      title={\n        <ListTitle\n          title={t(\"emissions:food.meals\")}\n          subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n        />\n      }\n      left={(props) => <List.Icon {...props} icon=\"food\" />}\n    >\n      <ListContentContainer>\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"breakfast.type\")}</Text>\n          <View>\n            <Controller<FormValues>\n              name=\"breakfast\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"breakfast\");\n                  }}\n                  buttons={BreakfastTypes.slice(0, 3).map((type) => ({\n                    value: type,\n                    label: t(`breakfast.types.${type}`),\n                  }))}\n                />\n              )}\n            />\n            <Controller<FormValues>\n              name=\"breakfast\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"breakfast\");\n                  }}\n                  buttons={BreakfastTypes.slice(3, 5).map((type) => ({\n                    value: type,\n                    label: t(`breakfast.types.${type}`),\n                  }))}\n                />\n              )}\n            />\n          </View>\n          <Text variant=\"labelLarge\">{t(\"milk.type\")}</Text>\n          <Controller<FormValues>\n            name=\"milkType\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"milkType\");\n                }}\n                buttons={MilkTypes.map((type) => ({\n                  value: type,\n                  label: t(`milk.types.${type}`),\n                  disabled: !milkAndCerealsBreakfast,\n                }))}\n              />\n            )}\n          />\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"diet.type\")}</Text>\n          <View>\n            <Controller<FormValues>\n              name=\"diet\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"diet\");\n                  }}\n                  buttons={Diets.slice(0, 3).map((type) => ({\n                    value: type,\n                    label: t(`diet.types.${type}`),\n                  }))}\n                />\n              )}\n            />\n            <Controller<FormValues>\n              name=\"diet\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"diet\");\n                  }}\n                  buttons={Diets.slice(3, 5).map((type) => ({\n                    value: type,\n                    label: t(`diet.types.${type}`),\n                  }))}\n                />\n              )}\n            />\n          </View>\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"localProducts\")}</Text>\n          <View>\n            <Controller<FormValues>\n              name=\"localProducts\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"localProducts\");\n                  }}\n                  buttons={Frequencies.slice(0, 2).map((frequency) => ({\n                    value: frequency,\n                    label: t(`frequencies.${frequency}`),\n                  }))}\n                />\n              )}\n            />\n            <Controller<FormValues>\n              name=\"localProducts\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"localProducts\");\n                  }}\n                  buttons={Frequencies.slice(2, 4).map((frequency) => ({\n                    value: frequency,\n                    label: t(`frequencies.${frequency}`),\n                  }))}\n                />\n              )}\n            />\n          </View>\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"seasonalProducts\")}</Text>\n          <View>\n            <Controller<FormValues>\n              name=\"seasonalProducts\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"seasonalProducts\");\n                  }}\n                  buttons={Frequencies.slice(0, 2).map((frequency) => ({\n                    value: frequency,\n                    label: t(`frequencies.${frequency}`),\n                  }))}\n                />\n              )}\n            />\n            <Controller<FormValues>\n              name=\"seasonalProducts\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"seasonalProducts\");\n                  }}\n                  buttons={Frequencies.slice(2, 4).map((frequency) => ({\n                    value: frequency,\n                    label: t(`frequencies.${frequency}`),\n                  }))}\n                />\n              )}\n            />\n          </View>\n        </ColumnContainer>\n      </ListContentContainer>\n    </List.Accordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"../../../../../common/UsecasesContext\";\nimport { useAppStore } from \"../../../../../data/store/store\";\nimport { Meals } from \"../../../../../domain/models/food/meals/Meals\";\nimport { BreakfastType } from \"../../../../../domain/models/food/meals/types\";\nimport { StringifyProperties } from \"../../../../../types/utils\";\nimport { useUpdateForm } from \"../../utils/useUpdateForm\";\n\nexport type FormValues = Omit<StringifyProperties<Meals>, \"annualFootprint\">;\n\nexport const useMeals = () => {\n  const storedMeals = useAppStore((store) => store.food.meals);\n  const storedBreakfast = storedMeals.breakfast;\n  const annualFootprint = new Meals(storedMeals).annualFootprint;\n\n  const { useUpdateFood } = useContext(UsecasesContext);\n  const { updateMeals } = useUpdateFood();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    breakfast: storedMeals.breakfast,\n    milkType: storedMeals.milkType,\n    diet: storedMeals.diet,\n    localProducts: storedMeals.localProducts,\n    seasonalProducts: storedMeals.seasonalProducts,\n  });\n\n  const { handleUpdate, control, watch, setValue } = useUpdateForm<\n    Meals,\n    FormValues\n  >(getDefaultValues(), storedMeals, updateMeals);\n\n  useEffect(() => {\n    if (storedBreakfast !== \"milk & cereals\") {\n      setValue(\"milkType\", \"cow\");\n      handleUpdate(\"milkType\");\n    }\n  }, [storedBreakfast]);\n\n  const milkAndCerealsBreakfast =\n    (watch(\"breakfast\") as BreakfastType) === \"milk & cereals\";\n\n  return { annualFootprint, milkAndCerealsBreakfast, control, handleUpdate };\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { View } from \"react-native\";\nimport { Checkbox, List, RadioButton, Text } from \"react-native-paper\";\n\nimport { FormValues, useWaste } from \"./useWaste\";\nimport { WasteQuantity } from \"../../../../../domain/models/food/waste/Waste\";\nimport { ColumnContainer } from \"../../components/ColumnContainer\";\nimport { ListContentContainer } from \"../../components/ListContentContainer\";\nimport { ListItemDivider } from \"../../components/ListItemDivider\";\nimport { ListTitle } from \"../../components/ListTitle\";\n\nexport const WasteSection = () => {\n  const { t } = useTranslation([\"food\", \"emissions\", \"common\"]);\n  const {\n    control,\n    handleUpdate,\n    annualFootprint,\n    setValue,\n    disableWasteBonuses,\n  } = useWaste();\n\n  return (\n    <List.Accordion\n      title={\n        <ListTitle\n          title={t(\"emissions:food.waste\")}\n          subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n        />\n      }\n      left={(props) => <List.Icon {...props} icon=\"recycle\" />}\n    >\n      <ListContentContainer>\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"waste.quantity\")}</Text>\n          <Controller<FormValues>\n            name=\"quantity\"\n            control={control}\n            render={({ field: { value } }) => (\n              <RadioButton.Group\n                value={value}\n                onValueChange={(newValue) => {\n                  setValue(\"quantity\", newValue);\n                  handleUpdate(\"quantity\");\n                }}\n              >\n                <View\n                  style={{ flexDirection: \"row\", alignItems: \"center\", gap: 5 }}\n                >\n                  <RadioButton value={\"base\" as WasteQuantity} />\n                  <Text>{t(\"waste.quantities.base\")}</Text>\n                </View>\n                <View\n                  style={{ flexDirection: \"row\", alignItems: \"center\", gap: 5 }}\n                >\n                  <RadioButton value={\"reduction\" as WasteQuantity} />\n                  <Text>{t(\"waste.quantities.reduction\")}</Text>\n                </View>\n                <View\n                  style={{ flexDirection: \"row\", alignItems: \"center\", gap: 5 }}\n                >\n                  <RadioButton value={\"zero\" as WasteQuantity} />\n                  <Text>{t(\"waste.quantities.zero\")}</Text>\n                </View>\n              </RadioButton.Group>\n            )}\n          />\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer style={{ gap: 0 }}>\n          <Text variant=\"labelLarge\" style={{ marginBottom: 5 }}>\n            {t(\"waste.bonus\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"wasteComposting\"\n            control={control}\n            render={({ field: { value } }) => (\n              <Checkbox.Item\n                style={{ height: 40 }}\n                disabled={disableWasteBonuses}\n                labelVariant=\"labelLarge\"\n                label={t(\"waste.bonuses.wasteComposting\")}\n                status={value === \"true\" ? \"checked\" : \"unchecked\"}\n                onPress={() => {\n                  setValue(\n                    \"wasteComposting\",\n                    value === \"true\" ? \"false\" : \"true\",\n                  );\n                  handleUpdate(\"wasteComposting\");\n                }}\n              />\n            )}\n          />\n          <Controller<FormValues>\n            name=\"noFoodWaste\"\n            control={control}\n            render={({ field: { value } }) => (\n              <Checkbox.Item\n                style={{ height: 40 }}\n                disabled={disableWasteBonuses}\n                labelVariant=\"labelLarge\"\n                label={t(\"waste.bonuses.noFoodWaste\")}\n                status={value === \"true\" ? \"checked\" : \"unchecked\"}\n                onPress={() => {\n                  setValue(\"noFoodWaste\", value === \"true\" ? \"false\" : \"true\");\n                  handleUpdate(\"noFoodWaste\");\n                }}\n              />\n            )}\n          />\n          <Controller<FormValues>\n            name=\"stopAdvertisingSticker\"\n            control={control}\n            render={({ field: { value } }) => (\n              <Checkbox.Item\n                style={{ height: 40 }}\n                disabled={disableWasteBonuses}\n                labelVariant=\"labelLarge\"\n                label={t(\"waste.bonuses.stopAdvertisingSticker\")}\n                status={value === \"true\" ? \"checked\" : \"unchecked\"}\n                onPress={() => {\n                  setValue(\n                    \"stopAdvertisingSticker\",\n                    value === \"true\" ? \"false\" : \"true\",\n                  );\n                  handleUpdate(\"stopAdvertisingSticker\");\n                }}\n              />\n            )}\n          />\n        </ColumnContainer>\n      </ListContentContainer>\n    </List.Accordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"../../../../../common/UsecasesContext\";\nimport { useAppStore } from \"../../../../../data/store/store\";\nimport { Waste } from \"../../../../../domain/models/food/waste/Waste\";\nimport {\n  StringifyProperties,\n  convertStringToType,\n} from \"../../../../../types/utils\";\nimport { useUpdateForm } from \"../../utils/useUpdateForm\";\n\nexport type FormValues = Omit<\n  StringifyProperties<\n    Waste & {\n      noFoodWaste: boolean;\n      stopAdvertisingSticker: boolean;\n      wasteComposting: boolean;\n    }\n  >,\n  \"annualFootprint\"\n>;\n\nexport const useWaste = () => {\n  const storedWaste = useAppStore((store) => store.food.waste);\n  const annualFootprint = new Waste(storedWaste).annualFootprint;\n\n  const { useUpdateFood } = useContext(UsecasesContext);\n  const { updateWaste } = useUpdateFood();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    quantity: storedWaste.quantity,\n    wasteBonuses: JSON.stringify(storedWaste.wasteBonuses),\n    noFoodWaste: storedWaste.wasteBonuses.noFoodWaste.toString(),\n    wasteComposting: storedWaste.wasteBonuses.wasteComposting.toString(),\n    stopAdvertisingSticker:\n      storedWaste.wasteBonuses.stopAdvertisingSticker.toString(),\n  });\n\n  const { handleUpdate, control, watch, setValue } = useUpdateForm<\n    Waste,\n    FormValues\n  >(getDefaultValues(), storedWaste, updateWaste);\n\n  const noFoodWaste = watch(\"noFoodWaste\");\n  const stopAdvertisingSticker = watch(\"stopAdvertisingSticker\");\n  const wasteComposting = watch(\"wasteComposting\");\n\n  useEffect(() => {\n    const newWasteBonuses = JSON.stringify({\n      noFoodWaste: convertStringToType(noFoodWaste, \"boolean\"),\n      wasteComposting: convertStringToType(wasteComposting, \"boolean\"),\n      stopAdvertisingSticker: convertStringToType(\n        stopAdvertisingSticker,\n        \"boolean\",\n      ),\n    });\n    setValue(\"wasteBonuses\", newWasteBonuses);\n    handleUpdate(\"wasteBonuses\");\n  }, [noFoodWaste, stopAdvertisingSticker, wasteComposting]);\n\n  const disableWasteBonuses = storedWaste.quantity !== \"reduction\";\n\n  return {\n    annualFootprint,\n    control,\n    handleUpdate,\n    setValue,\n    disableWasteBonuses,\n  };\n};\n","import { ScrollView } from \"react-native\";\nimport { Divider, List } from \"react-native-paper\";\n\nimport { DrinksSection } from \"./drinks/DrinksSection\";\nimport { MealsSection } from \"./meals/MealsSection\";\nimport { WasteSection } from \"./waste/WasteSection\";\n\nexport const FoodProfile = () => {\n  return (\n    <ScrollView>\n      <List.Section>\n        <MealsSection />\n        <Divider />\n        <DrinksSection />\n        <Divider />\n        <WasteSection />\n      </List.Section>\n    </ScrollView>\n  );\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { List, SegmentedButtons, Text, TextInput } from \"react-native-paper\";\n\nimport { FormValues, useBoat } from \"./useBoat\";\nimport { ListContentContainer } from \"../../components/ListContentContainer\";\nimport { ListItemDivider } from \"../../components/ListItemDivider\";\nimport { ListTitle } from \"../../components/ListTitle\";\nimport { RowContainer } from \"../../components/RowContainer\";\n\nexport const BoatSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, usage, annualFootprint } = useBoat();\n\n  return (\n    <List.Accordion\n      title={\n        <ListTitle\n          title={t(\"emissions:transport.boat\")}\n          subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n        />\n      }\n      left={(props) => <List.Icon {...props} icon=\"ferry\" />}\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\">{t(\"boat.usage\")}</Text>\n          <Controller<FormValues>\n            name=\"usage\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"usage\");\n                }}\n                buttons={[\n                  { value: \"true\", label: t(\"common:yes\") },\n                  { value: \"false\", label: t(\"common:no\") },\n                ]}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2 }}>\n            {t(\"boat.hoursPerYear\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerYear\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerYear\")}\n                onChangeText={onChange}\n                value={value}\n                disabled={!usage}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </List.Accordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"../../../../../common/UsecasesContext\";\nimport { useAppStore } from \"../../../../../data/store/store\";\nimport { Boat } from \"../../../../../domain/models/transport/boat/Boat\";\nimport { StringifyProperties } from \"../../../../../types/utils\";\nimport { useUpdateForm } from \"../../utils/useUpdateForm\";\n\nexport type FormValues = Omit<StringifyProperties<Boat>, \"annualFootprint\">;\n\nexport const useBoat = () => {\n  const storedBoat = useAppStore((store) => store.transport.boat);\n  const storedBoatUsage = storedBoat.usage;\n  const annualFootprint = new Boat(storedBoat).annualFootprint;\n\n  const { useUpdateTransport } = useContext(UsecasesContext);\n  const { updateBoat } = useUpdateTransport();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    usage: storedBoat.usage.toString(),\n    hoursPerYear: storedBoat.hoursPerYear.toString(),\n  });\n\n  const { handleUpdate, control, watch, reset } = useUpdateForm<\n    Boat,\n    FormValues\n  >(getDefaultValues(), storedBoat, updateBoat);\n\n  useEffect(() => {\n    if (!storedBoatUsage) reset(getDefaultValues());\n  }, [storedBoatUsage]);\n\n  const usage = watch(\"usage\") === \"true\";\n\n  return { control, handleUpdate, usage, annualFootprint };\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { View } from \"react-native\";\nimport {\n  List,\n  TextInput,\n  Text,\n  SegmentedButtons,\n  HelperText,\n  Icon,\n} from \"react-native-paper\";\n\nimport { FormValues, useCar } from \"./useCar\";\nimport {\n  carEngines,\n  carSizes,\n  fuelTypes,\n} from \"../../../../../domain/models/transport/car/Car\";\nimport { ColumnContainer } from \"../../components/ColumnContainer\";\nimport { ListContentContainer } from \"../../components/ListContentContainer\";\nimport { ListItemDivider } from \"../../components/ListItemDivider\";\nimport { ListTitle } from \"../../components/ListTitle\";\nimport { RowContainer } from \"../../components/RowContainer\";\n\nexport const CarSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, regularUser, annualFootprint } = useCar();\n\n  return (\n    <List.Accordion\n      title={\n        <ListTitle\n          title={t(\"emissions:transport.car\")}\n          subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n        />\n      }\n      left={(props) => <List.Icon {...props} icon=\"car\" />}\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 1.5 }}>\n            {t(\"car.kmPerYear\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"kmPerYear\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix text=\"km\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"kmPerYear\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <RowContainer>\n            <Text variant=\"labelLarge\">{t(\"car.regularUser\")}</Text>\n            <Controller<FormValues>\n              name=\"regularUser\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"regularUser\");\n                  }}\n                  buttons={[\n                    { value: \"true\", label: t(\"common:yes\") },\n                    { value: \"false\", label: t(\"common:no\") },\n                  ]}\n                />\n              )}\n            />\n          </RowContainer>\n          {!regularUser && (\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <Icon source=\"information\" size={15} />\n              <HelperText\n                type=\"info\"\n                style={{ alignSelf: \"flex-start\", marginTop: 2 }}\n              >\n                {t(\"car.nonRegularUserHelperText\")}\n              </HelperText>\n            </View>\n          )}\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"car.size\")}</Text>\n          <View>\n            <Controller<FormValues>\n              name=\"size\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"size\");\n                  }}\n                  buttons={carSizes.slice(0, 3).map((size) => ({\n                    value: size,\n                    label: t(`car.sizes.${size}`),\n                    disabled: !regularUser,\n                  }))}\n                />\n              )}\n            />\n            <Controller<FormValues>\n              name=\"size\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"size\");\n                  }}\n                  buttons={carSizes.slice(3, 5).map((size) => ({\n                    value: size,\n                    label: t(`car.sizes.${size}`),\n                    disabled: !regularUser,\n                  }))}\n                />\n              )}\n            />\n          </View>\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"car.engine\")}</Text>\n          <Controller<FormValues>\n            name=\"engine\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"engine\");\n                }}\n                buttons={carEngines.map((engine) => ({\n                  value: engine,\n                  label: t(`car.engines.${engine}`),\n                  disabled: !regularUser,\n                }))}\n              />\n            )}\n          />\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"car.fuelType\")}</Text>\n          <Controller<FormValues>\n            name=\"fuelType\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"fuelType\");\n                }}\n                buttons={fuelTypes.map((fuelType) => ({\n                  value: fuelType,\n                  label: t(`car.fuelTypes.${fuelType}`),\n                  disabled: !regularUser,\n                }))}\n              />\n            )}\n          />\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2 }}>\n            {t(\"car.averageFuelConsumption\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"averageFuelConsumption\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                disabled={!regularUser}\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"averageFuelConsumption\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2 }}>\n            {t(\"car.age\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"age\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"age\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2 }}>\n            {t(\"car.averagePassengers\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"averagePassengers\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"averagePassengers\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </List.Accordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"../../../../../common/UsecasesContext\";\nimport { useAppStore } from \"../../../../../data/store/store\";\nimport { Car } from \"../../../../../domain/models/transport/car/Car\";\nimport { StringifyProperties } from \"../../../../../types/utils\";\nimport { useUpdateForm } from \"../../utils/useUpdateForm\";\n\nexport type FormValues = Omit<StringifyProperties<Car>, \"annualFootprint\">;\n\nexport const useCar = () => {\n  const storedCar = useAppStore((store) => store.transport.car);\n  const storedRegularUser = storedCar.regularUser;\n  const annualFootprint = new Car(storedCar).annualFootprint;\n\n  const { useUpdateTransport } = useContext(UsecasesContext);\n  const { updateCar } = useUpdateTransport();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    kmPerYear: storedCar.kmPerYear.toString(),\n    regularUser: storedCar.regularUser.toString(),\n    size: storedCar.size.toString(),\n    engine: storedCar.engine.toString(),\n    fuelType: storedCar.fuelType.toString(),\n    age: storedCar.age.toString(),\n    averagePassengers: storedCar.averagePassengers.toString(),\n    averageFuelConsumption: storedCar.averageFuelConsumption.toString(),\n  });\n\n  const { handleUpdate, control, watch, reset } = useUpdateForm<\n    Car,\n    FormValues\n  >(getDefaultValues(), storedCar, updateCar);\n\n  useEffect(() => {\n    if (!storedRegularUser) reset(getDefaultValues());\n  }, [storedRegularUser]);\n\n  const regularUser = watch(\"regularUser\") === \"true\";\n\n  return { control, handleUpdate, regularUser, annualFootprint };\n};\n","import { useTranslation } from \"react-i18next\";\nimport { List, Text } from \"react-native-paper\";\n\nimport { ListContentContainer } from \"../../components/ListContentContainer\";\n\nexport const OtherSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n\n  return (\n    <List.Accordion\n      title={t(\"emissions:transport.other\")}\n      left={(props) => <List.Icon {...props} icon=\"bike\" />}\n    >\n      <ListContentContainer>\n        <Text>{t(\"common:comingSoon\")}</Text>\n      </ListContentContainer>\n    </List.Accordion>\n  );\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { List, SegmentedButtons, Text, TextInput } from \"react-native-paper\";\n\nimport { FormValues, usePlane } from \"./usePlane\";\nimport { ListContentContainer } from \"../../components/ListContentContainer\";\nimport { ListItemDivider } from \"../../components/ListItemDivider\";\nimport { ListTitle } from \"../../components/ListTitle\";\nimport { RowContainer } from \"../../components/RowContainer\";\n\nexport const PlaneSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, usage, annualFootprint } = usePlane();\n\n  return (\n    <List.Accordion\n      title={\n        <ListTitle\n          title={t(\"emissions:transport.plane\")}\n          subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n        />\n      }\n      left={(props) => <List.Icon {...props} icon=\"airplane\" />}\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\">{t(\"plane.usage\")}</Text>\n          <Controller<FormValues>\n            name=\"usage\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"usage\");\n                }}\n                buttons={[\n                  { value: \"true\", label: t(\"common:yes\") },\n                  { value: \"false\", label: t(\"common:no\") },\n                ]}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2 }}>\n            {t(\"plane.hoursPerYearInShortHaul\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerYearInShortHaul\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerYearInShortHaul\")}\n                onChangeText={onChange}\n                value={value}\n                disabled={!usage}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2 }}>\n            {t(\"plane.hoursPerYearInMediumHaul\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerYearInMediumHaul\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerYearInMediumHaul\")}\n                onChangeText={onChange}\n                value={value}\n                disabled={!usage}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2 }}>\n            {t(\"plane.hoursPerYearInLongHaul\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerYearInLongHaul\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerYearInLongHaul\")}\n                onChangeText={onChange}\n                value={value}\n                disabled={!usage}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </List.Accordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"../../../../../common/UsecasesContext\";\nimport { useAppStore } from \"../../../../../data/store/store\";\nimport { Plane } from \"../../../../../domain/models/transport/plane/Plane\";\nimport { StringifyProperties } from \"../../../../../types/utils\";\nimport { useUpdateForm } from \"../../utils/useUpdateForm\";\n\nexport type FormValues = Omit<StringifyProperties<Plane>, \"annualFootprint\">;\n\nexport const usePlane = () => {\n  const storedPlane = useAppStore((store) => store.transport.plane);\n  const storedPlaneUsage = storedPlane.usage;\n  const annualFootprint = new Plane(storedPlane).annualFootprint;\n\n  const { useUpdateTransport } = useContext(UsecasesContext);\n  const { updatePlane } = useUpdateTransport();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    usage: storedPlane.usage.toString(),\n    hoursPerYearInShortHaul: storedPlane.hoursPerYearInShortHaul.toString(),\n    hoursPerYearInMediumHaul: storedPlane.hoursPerYearInMediumHaul.toString(),\n    hoursPerYearInLongHaul: storedPlane.hoursPerYearInLongHaul.toString(),\n  });\n\n  const { handleUpdate, control, watch, reset } = useUpdateForm<\n    Plane,\n    FormValues\n  >(getDefaultValues(), storedPlane, updatePlane);\n\n  useEffect(() => {\n    if (!storedPlaneUsage) reset(getDefaultValues());\n  }, [storedPlaneUsage]);\n\n  const usage = watch(\"usage\") === \"true\";\n\n  return { control, handleUpdate, usage, annualFootprint };\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { List, Text, TextInput } from \"react-native-paper\";\n\nimport { FormValues, usePublicTransport } from \"./usePublicTransport\";\nimport { ListContentContainer } from \"../../components/ListContentContainer\";\nimport { ListItemDivider } from \"../../components/ListItemDivider\";\nimport { ListTitle } from \"../../components/ListTitle\";\nimport { RowContainer } from \"../../components/RowContainer\";\n\nexport const PublicTransportSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, annualFootprint } = usePublicTransport();\n\n  return (\n    <List.Accordion\n      title={\n        <ListTitle\n          title={t(\"emissions:transport.public\")}\n          subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n        />\n      }\n      left={(props) => <List.Icon {...props} icon=\"train\" />}\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"public.hoursPerYearInTrain\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerYearInTrain\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerYearInTrain\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"public.hoursPerWeekInBus\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerWeekInBus\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerWeekInBus\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2.5 }}>\n            {t(\"public.hoursPerWeekInMetro\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"hoursPerWeekInMetro\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix text=\"h\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"hoursPerWeekInMetro\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </List.Accordion>\n  );\n};\n","import { useContext } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"../../../../../common/UsecasesContext\";\nimport { useAppStore } from \"../../../../../data/store/store\";\nimport { PublicTransport } from \"../../../../../domain/models/transport/public-transport/PublicTransport\";\nimport { StringifyProperties } from \"../../../../../types/utils\";\nimport { useUpdateForm } from \"../../utils/useUpdateForm\";\n\nexport type FormValues = Omit<\n  StringifyProperties<PublicTransport>,\n  \"annualFootprint\"\n>;\n\nexport const usePublicTransport = () => {\n  const storedPublicTransport = useAppStore(\n    (store) => store.transport.publicTransport,\n  );\n  const annualFootprint = new PublicTransport(storedPublicTransport)\n    .annualFootprint;\n\n  const { useUpdateTransport } = useContext(UsecasesContext);\n  const { updatePublicTransport } = useUpdateTransport();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    hoursPerYearInTrain: storedPublicTransport.hoursPerYearInTrain.toString(),\n    hoursPerWeekInBus: storedPublicTransport.hoursPerWeekInBus.toString(),\n    hoursPerWeekInMetro: storedPublicTransport.hoursPerWeekInMetro.toString(),\n  });\n\n  const { handleUpdate, control } = useUpdateForm<PublicTransport, FormValues>(\n    getDefaultValues(),\n    storedPublicTransport,\n    updatePublicTransport,\n  );\n\n  return { control, handleUpdate, annualFootprint };\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { View } from \"react-native\";\nimport { List, SegmentedButtons, Text, TextInput } from \"react-native-paper\";\n\nimport { FormValues, useTwhoWheeler } from \"./useTwoWheeler\";\nimport { TwoWheelerTypes } from \"../../../../../domain/models/transport/two-wheeler/TwoWheeler\";\nimport { ColumnContainer } from \"../../components/ColumnContainer\";\nimport { ListContentContainer } from \"../../components/ListContentContainer\";\nimport { ListItemDivider } from \"../../components/ListItemDivider\";\nimport { ListTitle } from \"../../components/ListTitle\";\nimport { RowContainer } from \"../../components/RowContainer\";\n\nexport const TwoWheelerSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, usage, annualFootprint } = useTwhoWheeler();\n\n  return (\n    <List.Accordion\n      title={\n        <ListTitle\n          title={t(\"emissions:transport.twoWheeler\")}\n          subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n        />\n      }\n      left={(props) => <List.Icon {...props} icon=\"motorbike\" />}\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\">{t(\"twoWheeler.usage\")}</Text>\n          <Controller<FormValues>\n            name=\"usage\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"usage\");\n                }}\n                buttons={[\n                  { value: \"true\", label: t(\"common:yes\") },\n                  { value: \"false\", label: t(\"common:no\") },\n                ]}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"twoWheeler.type\")}</Text>\n          <View>\n            <Controller<FormValues>\n              name=\"type\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"type\");\n                  }}\n                  buttons={TwoWheelerTypes.slice(0, 2).map((type) => ({\n                    value: type,\n                    label: t(`twoWheeler.types.${type}`),\n                    disabled: !usage,\n                  }))}\n                />\n              )}\n            />\n            <Controller<FormValues>\n              name=\"type\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"type\");\n                  }}\n                  buttons={TwoWheelerTypes.slice(2, 4).map((type) => ({\n                    value: type,\n                    label: t(`twoWheeler.types.${type}`),\n                    disabled: !usage,\n                  }))}\n                />\n              )}\n            />\n          </View>\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 1.5 }}>\n            {t(\"car.kmPerYear\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"kmPerYear\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix text=\"km\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"kmPerYear\")}\n                onChangeText={onChange}\n                value={value}\n                disabled={!usage}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </List.Accordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { DefaultValues } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"../../../../../common/UsecasesContext\";\nimport { useAppStore } from \"../../../../../data/store/store\";\nimport { TwoWheeler } from \"../../../../../domain/models/transport/two-wheeler/TwoWheeler\";\nimport { StringifyProperties } from \"../../../../../types/utils\";\nimport { useUpdateForm } from \"../../utils/useUpdateForm\";\n\nexport type FormValues = Omit<\n  StringifyProperties<TwoWheeler>,\n  \"annualFootprint\"\n>;\n\nexport const useTwhoWheeler = () => {\n  const storedTwoWheeler = useAppStore((store) => store.transport.twoWheeler);\n  const storedTwoWheelerUsage = storedTwoWheeler.usage;\n  const annualFootprint = new TwoWheeler(storedTwoWheeler).annualFootprint;\n\n  const { useUpdateTransport } = useContext(UsecasesContext);\n  const { updateTwoWheeler } = useUpdateTransport();\n\n  const getDefaultValues = (): DefaultValues<FormValues> => ({\n    kmPerYear: storedTwoWheeler.kmPerYear.toString(),\n    type: storedTwoWheeler.type.toString(),\n    usage: storedTwoWheeler.usage.toString(),\n  });\n\n  const { handleUpdate, control, watch, reset } = useUpdateForm<\n    TwoWheeler,\n    FormValues\n  >(getDefaultValues(), storedTwoWheeler, updateTwoWheeler);\n\n  useEffect(() => {\n    if (!storedTwoWheelerUsage) reset(getDefaultValues());\n  }, [storedTwoWheelerUsage]);\n\n  const usage = watch(\"usage\") === \"true\";\n\n  return { control, handleUpdate, usage, annualFootprint };\n};\n","import { ScrollView } from \"react-native\";\nimport { Divider, List } from \"react-native-paper\";\n\nimport { BoatSection } from \"./boat/BoatSection\";\nimport { CarSection } from \"./car/CarSection\";\nimport { OtherSection } from \"./other/OtherSection\";\nimport { PlaneSection } from \"./plane/PlaneSection\";\nimport { PublicTransportSection } from \"./public-transport/PublicTransportSection\";\nimport { TwoWheelerSection } from \"./two-wheeler/TwoWheelerSection\";\n\nexport const TransportProfile = () => {\n  return (\n    <ScrollView>\n      <List.Section>\n        <CarSection />\n        <Divider />\n        <TwoWheelerSection />\n        <Divider />\n        <PlaneSection />\n        <Divider />\n        <BoatSection />\n        <Divider />\n        <PublicTransportSection />\n        <Divider />\n        <OtherSection />\n      </List.Section>\n    </ScrollView>\n  );\n};\n","import Icons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport {\n  NativeStackNavigationProp,\n  createNativeStackNavigator,\n} from \"@react-navigation/native-stack\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { Actions } from \"../view/screens/actions/Actions\";\nimport { Comparator } from \"../view/screens/comparator/Comparator\";\nimport { Emissions } from \"../view/screens/emissions/Emissions\";\nimport { Objectives } from \"../view/screens/objectives/Objectives\";\nimport { Profile } from \"../view/screens/profile/Profile\";\nimport { FoodProfile } from \"../view/screens/profile/food/Food\";\nimport { TransportProfile } from \"../view/screens/profile/transport/Transport\";\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\ntype RootStackParamList = {\n  Home: undefined;\n  Profile: undefined;\n  TransportProfile: undefined;\n  FoodProfile: undefined;\n};\n\nexport type AppNavigationProp = NativeStackNavigationProp<RootStackParamList>;\n\nconst iconSize = 24;\n\nexport const AppNavigation = () => {\n  const { t } = useTranslation(\"common\");\n\n  return (\n    <Stack.Navigator initialRouteName=\"Home\">\n      <Stack.Screen\n        name=\"Home\"\n        component={TabNavigator}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen\n        name=\"Profile\"\n        component={Profile}\n        options={{ title: t(\"screens.Profile\") }}\n      />\n      <Stack.Screen\n        name=\"TransportProfile\"\n        component={TransportProfile}\n        options={{ title: t(\"screens.Transport\") }}\n      />\n      <Stack.Screen\n        name=\"FoodProfile\"\n        component={FoodProfile}\n        options={{ title: t(\"screens.Food\") }}\n      />\n    </Stack.Navigator>\n  );\n};\n\nconst TabNavigator = () => {\n  const { t } = useTranslation(\"common\");\n\n  return (\n    <Tab.Navigator\n      initialRouteName=\"Emissions\"\n      screenOptions={{\n        tabBarLabelPosition: \"below-icon\",\n        tabBarStyle: { height: 50, paddingBottom: 5 },\n      }}\n    >\n      <Tab.Screen\n        name=\"Emissions\"\n        component={Emissions}\n        options={{\n          title: t(\"screens.Emissions\"),\n          tabBarIcon: ({ focused, color }) => {\n            return (\n              <Icons\n                name={focused ? \"home\" : \"home-outline\"}\n                size={iconSize}\n                color={color}\n              />\n            );\n          },\n        }}\n      />\n      <Tab.Screen\n        name=\"Actions\"\n        component={Actions}\n        options={{\n          title: t(\"screens.Actions\"),\n          tabBarIcon: ({ focused, color }) => {\n            return (\n              <Icons\n                name={focused ? \"check-circle\" : \"check-circle-outline\"}\n                size={iconSize}\n                color={color}\n              />\n            );\n          },\n        }}\n      />\n      <Tab.Screen\n        name=\"Objectifs\"\n        component={Objectives}\n        options={{\n          title: t(\"screens.Objectives\"),\n          tabBarIcon: ({ focused, color }) => {\n            return (\n              <Icons\n                name={focused ? \"medal\" : \"medal-outline\"}\n                size={iconSize}\n                color={color}\n              />\n            );\n          },\n        }}\n      />\n      <Tab.Screen\n        name=\"Comparateur\"\n        component={Comparator}\n        options={{\n          title: t(\"screens.Comparator\"),\n          tabBarIcon: ({ color }) => {\n            return (\n              <Icons name=\"compare-horizontal\" size={iconSize} color={color} />\n            );\n          },\n        }}\n      />\n    </Tab.Navigator>\n  );\n};\n","/* eslint-disable no-undef */\n/* eslint-disable prettier/prettier */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  const isEnvProduction = process.env.NODE_ENV === \"production\";\n  if (isEnvProduction && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport * as fr from \"./fr\";\n\nconst resources = { fr };\n\ni18n.use(initReactI18next).init({\n  resources,\n  lng: \"fr\",\n  interpolation: {\n    escapeValue: false, // react already safes from xss\n  },\n});\n\nexport default i18n;\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { registerRootComponent } from \"expo\";\nimport { useEffect, useState } from \"react\";\nimport {\n  Linking,\n  Platform,\n  SafeAreaView,\n  StyleSheet,\n  View,\n} from \"react-native\";\nimport { ActivityIndicator, PaperProvider } from \"react-native-paper\";\n\nimport { AppTheme } from \"./AppTheme\";\nimport { AppNavigation } from \"./src/common/AppNavigation\";\nimport * as serviceWorkerRegistration from \"./src/serviceWorkerRegistration\";\n\nimport \"./src/view/translations/i18n\";\n\nconst PERSISTENCE_KEY = \"NAVIGATION_STATE_V1\";\n\nconst App = () => {\n  const [isReady, setIsReady] = useState(!__DEV__);\n  const [initialState, setInitialState] = useState();\n\n  useEffect(() => {\n    const restoreState = async () => {\n      try {\n        const initialUrl = await Linking.getInitialURL();\n        if (__DEV__ || (Platform.OS !== \"web\" && initialUrl == null)) {\n          // Only restore state if there's no deep link and we're not on web\n          const savedStateString = await AsyncStorage.getItem(PERSISTENCE_KEY);\n          const state = savedStateString\n            ? JSON.parse(savedStateString)\n            : undefined;\n          if (state !== undefined) setInitialState(state);\n        }\n      } finally {\n        setIsReady(true);\n      }\n    };\n\n    if (!isReady) restoreState();\n  }, [isReady]);\n\n  if (!isReady) return <ActivityIndicator />;\n\n  return (\n    <PaperProvider theme={AppTheme}>\n      <NavigationContainer\n        theme={AppTheme}\n        initialState={initialState}\n        onStateChange={(state) =>\n          AsyncStorage.setItem(PERSISTENCE_KEY, JSON.stringify(state))\n        }\n      >\n        <SafeAreaView style={styles.container}>\n          <View style={styles.content}>\n            <AppNavigation />\n          </View>\n        </SafeAreaView>\n      </NavigationContainer>\n    </PaperProvider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n  },\n  content: {\n    flex: 1,\n    width: \"100%\",\n    maxWidth: 550,\n  },\n});\n\nexport default registerRootComponent(App);\n\nserviceWorkerRegistration.register();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/impact/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [358], () => (__webpack_require__(1559)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["MaterialTheme","_objectSpread","MD3DarkTheme","colors","primary","onPrimary","inversePrimary","AppTheme","merge","NavigationTheme","Actions","t","useTranslation","_jsx","Text","style","textAlign","marginTop","children","ComparatorForMobile","WebView","originWhitelist","source","html","ComparatorForWeb","useEffect","scriptContainer","document","createElement","script","id","src","dataset","type","search","async","onload","_document$getElementB","_document$getElementB2","uselessDivToRemove","getElementById","querySelector","remove","appendChild","targetElement","removeChild","overflow","Comparator","Platform","OS","EmissionsDataTable","_ref","footprints","useTheme","_jsxs","DataTable","Header","Title","numeric","Object","values","sort","a","b","footprint","map","emissionsCategory","Row","Cell","alignItems","category","View","width","height","borderRadius","backgroundColor","color","flexDirection","justifyContent","background","fontSize","part","EmissionsDistribution","totalFootprint","footprintByCategories","viewBox","VictoryPie","colorScale","_ref2","standalone","radius","innerRadius","labelRadius","labels","data","_ref3","x","icon","y","VictoryLabel","textAnchor","fill","onBackground","pieWidth","pieHeight","text","toFixed","EmissionsEstimationButton","navigate","useNavigation","Button","mode","textColor","contentStyle","labelStyle","onPress","EmissionsTitle","variant","paddingTop","FootprintCategories","f","FootprintByCategory","_this","_classCallCheck","image","materialIcon","computePart","Math","floor","this","_createClass","key","value","FootprintCategoryTransport","FootprintCategoryFood","FootprintCategoryHousing","FootprintCategoryGoods","FootprintCategoryPublicServices","_FootprintByCategory","_inherits","_super","_createSuper","_this2","call","TRANSPORT","transportImage","_FootprintByCategory2","_super2","_this3","FOOD","foodImage","_FootprintByCategory3","_super3","_this4","HOUSING","housingImage","_FootprintByCategory4","_super4","_this5","GOODS","goodsImage","_FootprintByCategory5","_super5","_this6","PUBLIC_SERVICES","publicServicesImage","weeksInYear","defaultHotDrinksPerWeek","coffee","tea","chocolate","Drinks","hotDrinksPerWeek","bottledWater","sodaLitersPerWeek","alcoholLitersPerWeek","milkType","get","round","hotDrinksAnnualFootprint","coldDrinksAnnualFootprint","coffeeAnnualFootprint","teaAnnualFootprint","chocolateAnnualFootprint","groundCoffeeFootprint","cupOfTeaFootprintWithoutConsumption","cocoaFootprint","milkFootprint","bottledWaterAnnualFootprint","sodaAnnualFootprint","alcoholAnnualFootprint","annualWaterConsumption","localProductsFootprintReductionRate","frequency","MealTypes","BreakfastTypes","Diets","Frequencies","Meals","breakfast","diet","localProducts","seasonalProducts","lunchesAndDinersPerWeek","vegan","vegetarian","whiteMeat","redMeat","fattyFish","whiteFish","lunchesAndDinersPerWeekByDiet","lunchesAndDinersAnnualFootprint","breakfastAnnualFootprint","seasonalProductsBonus","lunchesAndDinersWeeklyFootprint","weeklyFootprint","mealType","mealFootprint","mealFootprintReduction","Number","breakfastFootprint","_this$milkType","milkAndCerealsBreakfastFootprint","seasonalFactor","seasonPart","seasonalProductsPart","Waste","quantity","wasteBonuses","noFoodWaste","stopAdvertisingSticker","wasteComposting","wasteFootprint","defaultFootprint","householdWasteFootprint","wasteBonus","_this$wasteBonuses","footprintBonus","Food","meals","drinks","waste","annualFootprint","PublicServices","Boat","_ref$usage","usage","_ref$hoursPerYear","hoursPerYear","defaultSize","defaultEngine","defaultFuelType","defaultAverageFuelConsumption","small","medium","vul","sedan","suv","defaultAverageFootPrintPerLiter","diesel","gasoline","biofuels","averageCarKmPerYear","thermalMaintenanceFootprint","g45","thermalCarManufacturingFootprint","hybridCarManufacturingFootprint","electricCarManufacturingFootprint","carSizes","carEngines","fuelTypes","Car","_ref$regularUser","regularUser","_ref$kmPerYear","kmPerYear","_ref$age","age","_ref$size","size","_ref$engine","engine","_ref$fuelType","fuelType","_ref$averageFuelConsu","averageFuelConsumption","_ref$averagePassenger","averagePassengers","lifetime","regularUserFootprint","nonRegularUserFootprint","carUseFootprint","amortizedManufacturingFootprint","manufacturingFootprint","rentalFactor","footprintPerKm","footprintBasePerKm","thermalCarFootprint","weightedMaintenanceFootprint","airConditionerFootprint","fluorinatedGasEmissions","amortization","defaultAverageSpeed","defaultAverageFootprintPerKm","Plane","_ref$hoursPerYearInSh","hoursPerYearInShortHaul","_ref$hoursPerYearInMe","hoursPerYearInMediumHaul","_ref$hoursPerYearInLo","hoursPerYearInLongHaul","shortHaulFootprint","mediumHaulFootprint","longHaulFootprint","PublicTransport","_ref$hoursPerYearInTr","hoursPerYearInTrain","_ref$hoursPerWeekInMe","hoursPerWeekInMetro","_ref$hoursPerWeekInBu","hoursPerWeekInBus","metroFootprintPerKm","busFootprintPerKm","trainAnnualFootprint","metroWeekFootprint","busWeekFootprint","defaultTwoWheelerType","twoWheelerDefaultFootprint","thermalScooter","electricScooter","motorbikeLT250","motorbikeGT250","TwoWheelerTypes","TwoWheeler","_ref$type","maintenanceFootprint","Transport","car","twoWheeler","plane","boat","publicTransport","EmissionsInMemoryRepository","transport","food","publicServices","useAppStore","create","devtools","persist","name","storage","createJSONStorage","AsyncStorage","persistedState","currentState","deepMerge","appStoreActions","getState","setState","state","EmissionsStoreRepository","storedTransport","storedFood","createUseComputeTotalAnnualFootprint","emissionsRepository","computeTotalAnnualFootprint","fetchTransport","fetchFood","fetchPublicServices","createUseFetchFood","createUseFetchPublicServices","createUseFetchTransport","createUseUpdateFood","updateMeals","newMeals","newFood","updateFood","updateDrinks","newDrinks","updateWaste","newWaste","createUseUpdateTransport","updateCar","newCar","initValuesForNonRegularUser","newTransport","updateTransport","updateTwoWheeler","newTwoWheeler","resetValues","updatePlane","newPlane","updateBoat","newBoat","updatePublicTransport","newPublicTransport","usecases","repositories","useFetchTransport","useUpdateTransport","useFetchFood","useUpdateFood","useComputeTotalAnnualFootprint","useFetchPublicServices","initUsecases","UsecasesContext","createContext","useFootprints","appStore","store","_useContext","useContext","useMemo","totalAnnualFootprint","forTransport","forFood","goods","forGoods","housing","forHousing","forPublicServices","Emissions","_useFootprints","ScrollView","contentContainerStyle","marginBottom","Objectives","ProfileCategoryCard","title","imageSource","onClick","Card","styles","card","subtitle","left","props","Avatar","right","label","borderWidth","borderColor","paddingRight","Cover","resizeMode","uri","StyleSheet","Profile","_useProfile","transportFootprint","housingFootprint","foodFootprint","goodsFootprint","publicServicesFootprint","useProfile","container","padding","gap","convertStringToType","targetType","JSON","parse","Error","useUpdateForm","defaultValues","storedData","updateUsecase","_useForm","useForm","getValues","rest","_objectWithoutProperties","_excluded","handleUpdate","field","stringValue","updatedData","_defineProperty","MilkTypes","listContentContainer","paddingLeft","rowContainer","columnContainer","divider","ColumnContainer","ListContentContainer","ListItemDivider","Divider","ListTitle","RowContainer","DrinksSection","_useDrinks","storedDrinks","_useUpdateForm","stringify","chocolatePerWeek","toString","coffeePerWeek","teaPerWeek","control","watch","setValue","disableMilkSelection","useDrinks","List","flex","Controller","render","_ref$field","onChange","TextInput","dense","keyboardType","onBlur","onChangeText","_ref2$field","_ref3$field","_ref4","_ref4$field","SegmentedButtons","density","onValueChange","e","buttons","disabled","_ref5","_ref5$field","_ref6","_ref6$field","_ref7","_ref7$field","MealsSection","_useMeals","storedMeals","storedBreakfast","milkAndCerealsBreakfast","useMeals","slice","_ref8","_ref8$field","_ref9","_ref9$field","WasteSection","_useWaste","storedWaste","newWasteBonuses","disableWasteBonuses","useWaste","RadioButton","Group","newValue","Checkbox","Item","labelVariant","status","FoodProfile","BoatSection","_useBoat","storedBoat","storedBoatUsage","getDefaultValues","reset","useBoat","Affix","CarSection","_useCar","storedCar","storedRegularUser","useCar","Icon","HelperText","alignSelf","OtherSection","PlaneSection","_usePlane","storedPlane","storedPlaneUsage","usePlane","PublicTransportSection","_usePublicTransport","storedPublicTransport","usePublicTransport","TwoWheelerSection","_useTwhoWheeler","storedTwoWheeler","storedTwoWheelerUsage","useTwhoWheeler","TransportProfile","Stack","createNativeStackNavigator","Tab","createBottomTabNavigator","AppNavigation","Navigator","initialRouteName","Screen","component","TabNavigator","options","headerShown","screenOptions","tabBarLabelPosition","tabBarStyle","paddingBottom","tabBarIcon","focused","Icons","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","resources","fr","i18n","initReactI18next","init","lng","interpolation","escapeValue","PERSISTENCE_KEY","content","maxWidth","registerRootComponent","_useState","useState","_useState2","_slicedToArray","isReady","setIsReady","_useState3","_useState4","initialState","setInitialState","restoreState","_asyncToGenerator","initialUrl","Linking","getInitialURL","savedStateString","getItem","undefined","apply","arguments","PaperProvider","theme","NavigationContainer","onStateChange","setItem","SafeAreaView","ActivityIndicator","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","ns","def","current","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}