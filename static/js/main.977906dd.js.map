{"version":3,"file":"static/js/main.977906dd.js","mappings":"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","sources":["AppTheme.ts","src/view/screens/emissions/EmissionsDataTable.tsx","src/view/screens/emissions/EmissionsDistribution.tsx","src/view/screens/emissions/EmissionsEstimationButton.tsx","src/view/screens/emissions/EmissionsTitle.tsx","src/domain/models/Categories.ts","src/data/store/store.ts","src/view/view-models/Footprint.ts","src/domain/models/public-services/PublicServices.ts","src/domain/models/transport/car/constants.ts","src/domain/models/transport/car/Car.ts","src/domain/models/transport/two-wheeler/constants.ts","src/domain/models/transport/two-wheeler/TwoWheeler.ts","src/domain/models/transport/Transport.ts","src/data/repositories/EmissionsInMemoryRepository.ts","src/data/store/storeActions.ts","src/data/repositories/EmissionsStoreRepository.ts","src/domain/usecases/computeTotalAnnualFootprint.ts","src/domain/usecases/fetchPublicServices.ts","src/domain/usecases/fetchTransport.ts","src/domain/usecases/updateTransport.ts","src/common/UsecasesContext.ts","src/view/view-models/useFootprints.ts","src/view/screens/emissions/Emissions.tsx","src/view/screens/profile/ProfileCategoryCard.tsx","src/view/screens/profile/Profile.tsx","src/view/screens/profile/useProfile.ts","src/view/screens/profile/components/styles.ts","src/view/screens/profile/components/ListContentContainer.tsx","src/view/screens/profile/transport/boat/BoatSection.tsx","src/types/utils.ts","src/view/screens/profile/components/ColumnContainer.tsx","src/view/screens/profile/components/ListItemDivider.tsx","src/view/screens/profile/components/ListTitle.tsx","src/view/screens/profile/components/RowContainer.tsx","src/view/screens/profile/transport/car/CarSection.tsx","src/view/screens/profile/transport/car/useCar.ts","src/view/screens/profile/transport/holidays/HolidaysSection.tsx","src/view/screens/profile/transport/other/OtherSection.tsx","src/view/screens/profile/transport/plane/PlaneSection.tsx","src/view/screens/profile/transport/train/TrainSection.tsx","src/view/screens/profile/transport/two-wheeler/TwoWheelerSection.tsx","src/view/screens/profile/transport/two-wheeler/useTwoWheeler.ts","src/view/screens/profile/transport/Transport.tsx","src/common/AppNavigation.tsx","src/serviceWorkerRegistration.js","src/view/traductions/i18n.js","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { DarkTheme as NavigationTheme } from \"@react-navigation/native\";\nimport merge from \"deepmerge\";\nimport { MD3DarkTheme } from \"react-native-paper\";\n\nconst MaterialTheme = {\n  ...MD3DarkTheme,\n  colors: {\n    ...MD3DarkTheme.colors,\n    primary: \"#59B158\",\n    onPrimary: \"#111\",\n    inversePrimary: \"#fff\",\n  },\n};\n\nexport const AppTheme = merge(NavigationTheme, MaterialTheme);\n","import { useTranslation } from \"react-i18next\";\nimport { View } from \"react-native\";\nimport { DataTable, Text, useTheme } from \"react-native-paper\";\n\nimport { Footprints } from \"../../view-models/Footprint\";\n\ntype Props = {\n  footprints: Footprints;\n};\n\nexport const EmissionsDataTable = ({ footprints }: Props) => {\n  const { t } = useTranslation([\"emissions\", \"common\"]);\n  const { colors } = useTheme();\n\n  return (\n    <DataTable>\n      <DataTable.Header>\n        <DataTable.Title>{t(\"category\")}</DataTable.Title>\n        <DataTable.Title numeric>{t(\"annualFootprint\")}</DataTable.Title>\n        <DataTable.Title numeric>{t(\"part\")}</DataTable.Title>\n      </DataTable.Header>\n\n      {Object.values(footprints)\n        .sort((a, b) => b.footprint - a.footprint)\n        .map((emissionsCategory) => (\n          <DataTable.Row key={emissionsCategory.category}>\n            <DataTable.Cell style={{ alignItems: \"center\" }}>\n              {t(`categories.${emissionsCategory.category}`)}\n            </DataTable.Cell>\n\n            <DataTable.Cell numeric>\n              {emissionsCategory.footprint} {t(\"common:footprintKg\")}\n            </DataTable.Cell>\n\n            <DataTable.Cell numeric>\n              <View\n                style={{\n                  width: 30,\n                  height: 30,\n                  borderRadius: 30 / 2,\n                  backgroundColor: emissionsCategory.color,\n                  flexDirection: \"row\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <Text style={{ color: colors.background, fontSize: 12 }}>\n                  {emissionsCategory.part}%\n                </Text>\n              </View>\n            </DataTable.Cell>\n          </DataTable.Row>\n        ))}\n    </DataTable>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport { useTheme } from \"react-native-paper\";\nimport { VictoryLabel, VictoryPie } from \"victory-native\";\n\nimport { Footprints } from \"../../view-models/Footprint\";\n\nconst pieWidth = 250;\nconst pieHeight = 250;\n\ntype Props = {\n  footprints: Footprints;\n  totalFootprint: number;\n};\n\nexport const EmissionsDistribution = ({\n  footprints,\n  totalFootprint,\n}: Props) => {\n  const { t } = useTranslation(\"emissions\");\n  const { colors } = useTheme();\n  const footprintByCategories = Object.values(footprints);\n\n  return (\n    <svg viewBox={`0 0 ${pieWidth} ${pieHeight}`}>\n      <VictoryPie\n        colorScale={footprintByCategories.map(({ color }) => color)}\n        standalone={false}\n        width={pieWidth}\n        height={pieHeight}\n        radius={110}\n        innerRadius={60}\n        labelRadius={75}\n        style={{ labels: { fontSize: 17 } }}\n        data={footprintByCategories.map(({ icon, footprint }) => ({\n          x: icon,\n          y: footprint,\n        }))}\n      />\n      <VictoryLabel\n        textAnchor=\"middle\"\n        style={{ fontSize: 20, fill: colors.onBackground }}\n        x={pieWidth / 2}\n        y={pieHeight / 2}\n        text={`${(totalFootprint / 1000).toFixed(2)}\\ntCO2/${t(\"year\")}`}\n      />\n    </svg>\n  );\n};\n","import { useNavigation } from \"@react-navigation/native\";\nimport { useTranslation } from \"react-i18next\";\nimport { Button, useTheme } from \"react-native-paper\";\n\nimport { AppNavigationProp } from \"../../../common/AppNavigation\";\n\nexport const EmissionsEstimationButton = () => {\n  const { t } = useTranslation(\"emissions\");\n  const { colors } = useTheme();\n  const { navigate } = useNavigation<AppNavigationProp>();\n\n  return (\n    <Button\n      icon=\"grass\"\n      mode=\"contained\"\n      textColor=\"white\"\n      contentStyle={{ height: 45 }}\n      labelStyle={{ color: colors.onPrimary }}\n      onPress={() => navigate(\"Profile\")}\n    >\n      {t(\"estimate\")}\n    </Button>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport { Text } from \"react-native-paper\";\n\nexport const EmissionsTitle = () => {\n  const { t } = useTranslation(\"emissions\");\n\n  return (\n    <Text variant=\"titleLarge\" style={{ paddingTop: 10, textAlign: \"center\" }}>\n      {t(\"impactDistributionTitle\")}\n    </Text>\n  );\n};\n","export enum FootprintCategories {\n  TRANSPORT = \"transport\",\n  HOUSING = \"housing\",\n  FOOD = \"food\",\n  GOODS = \"goods\",\n  PUBLIC_SERVICES = \"publicServices\",\n}\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport deepMerge from \"deepmerge\";\nimport { create } from \"zustand\";\nimport { createJSONStorage, devtools, persist } from \"zustand/middleware\";\n\nimport { Transport } from \"../../domain/models/transport/Transport\";\n\nexport type AppState = {\n  transport: Transport;\n};\n\nconst appStore = (): AppState => ({\n  transport: new Transport({}),\n});\n\nconst middlewares = (f: any) =>\n  devtools(\n    persist<AppState>(f, {\n      name: \"app-storage\",\n      storage: createJSONStorage(() => AsyncStorage),\n      merge: (persistedState, currentState) =>\n        deepMerge(currentState, persistedState as AppState),\n    }),\n  );\n\nexport const useAppStore = create<\n  AppState,\n  [[\"zustand/devtools\", never], [\"zustand/persist\", unknown]]\n>(middlewares(appStore));\n","import { IconSource } from \"react-native-paper/lib/typescript/components/Icon\";\n\nimport foodImage from \"../../../assets/images/food.svg\";\nimport goodsImage from \"../../../assets/images/goods.svg\";\nimport housingImage from \"../../../assets/images/house.svg\";\nimport publicServicesImage from \"../../../assets/images/public_services.svg\";\nimport transportImage from \"../../../assets/images/transport.svg\";\nimport { FootprintCategories } from \"../../domain/models/Categories\";\n\nexport class FootprintByCategory {\n  public color: string = \"\";\n  public icon: string = \"\";\n  public part: number;\n  public image: string = \"\";\n  public materialIcon: IconSource;\n\n  constructor(\n    public category: FootprintCategories,\n    public footprint: number,\n    totalFootprint: number,\n  ) {\n    this.part = this.computePart(totalFootprint);\n    switch (category) {\n      case FootprintCategories.TRANSPORT: {\n        this.color = \"sandybrown\";\n        this.icon = \"🚗\";\n        this.materialIcon = \"car\";\n        this.image = transportImage;\n        break;\n      }\n      case FootprintCategories.FOOD: {\n        this.color = \"plum\";\n        this.icon = \"🍲\";\n        this.materialIcon = \"food\";\n        this.image = foodImage;\n        break;\n      }\n      case FootprintCategories.HOUSING: {\n        this.color = \"cadetblue\";\n        this.icon = \"🏠\";\n        this.materialIcon = \"home\";\n        this.image = housingImage;\n        break;\n      }\n      case FootprintCategories.GOODS: {\n        this.color = \"khaki\";\n        this.icon = \"🛍️\";\n        this.materialIcon = \"package\";\n        this.image = goodsImage;\n        break;\n      }\n      case FootprintCategories.PUBLIC_SERVICES: {\n        this.color = \"mediumslateblue\";\n        this.icon = \"🏛\";\n        this.materialIcon = \"bank\";\n        this.image = publicServicesImage;\n        break;\n      }\n    }\n  }\n\n  private computePart = (totalFootprint: number) =>\n    totalFootprint === 0\n      ? 0\n      : Math.floor((this.footprint / totalFootprint) * 100);\n}\n\nexport type Footprints = Record<FootprintCategories, FootprintByCategory>;\n","export class PublicServices {\n  // https://github.com/datagir/nosgestesclimat/issues/1583\n  public get annualFootprint(): number {\n    return 1500;\n  }\n}\n","import { CarEngine, CarSize, FuelType } from \"./Car\";\nimport { g45 } from \"../constants\";\n\nexport const defaultSize: CarSize = \"medium\";\n\nexport const defaultEngine: CarEngine = \"thermal\";\n\nexport const defaultFuelType: FuelType = \"gasoline\";\n\nexport const defaultYears = 5;\n\nexport const defaultAveragePassengers = 1.2;\n\n// l / 100km\n// https://librairie.ademe.fr/mobilite-et-transport/3273-elaboration-selon-les-principes-des-acv-des-bilans-energetiques-des-emissions-de-gaz-a-effet-de-serre-et-des-autres-impacts-environnementaux.html\nexport const defaultAverageFuelConsumption: Record<CarSize, number> = {\n  small: 5,\n  medium: 6,\n  vul: 6,\n  sedan: 7,\n  suv: 8,\n};\n\n// https://bilans-ges.ademe.fr/fr/basecarbone/donnees-consulter/liste-element?recherche=diesel\nexport const defaultAverageFootPrintPerLiter: Record<FuelType, number> = {\n  diesel: 3.1,\n  gasoline: 2.7,\n  biofuels: 1.11,\n};\n\n// https://www.statistiques.developpement-durable.gouv.fr/bilan-annuel-des-transports-en-2019-0 (p.3)\nexport const averageCarKmPerYear = 12200;\n\n// https://librairie.ademe.fr/cadic/7353/enquete-autopartage-2022-rapport.pdf (p.80)\nexport const sharedCarKmPerYear = 15130;\n\n// https://librairie.ademe.fr/mobilite-et-transport/1267-bilan-transversal-de-l-impact-de-l-electrification-par-segment.html\nexport const defaultCarLifetime = 10; // years\n\n// https://www.insee.fr/fr/statistiques/2045167#tableau-figure1_radio1\nconst vehiclesInCirculation = 37880000 + 5977000;\n\n// https://www.citepa.org/fr/secten/\nexport const fluorinatedGasEmissions = 1374000000; // kgCO2e\n\n// https://nosgestesclimat.fr/documentation/empreinte-branche/G45?lang=fr\nexport const g45VehicleMaintenancePart = 0.07;\n\nexport const thermalMaintenanceFootprint =\n  (g45 * 1000000 * g45VehicleMaintenancePart) /\n  vehiclesInCirculation /\n  averageCarKmPerYear;\n\nexport const airConditionerFootprint =\n  fluorinatedGasEmissions / vehiclesInCirculation / averageCarKmPerYear;\n\nexport const electricSmallCarFootprint = 0.0159;\nexport const electricMediumCarFootprint = 0.0198;\nexport const electricCarFootprint = 0.0273;\n\n// https://github.com/betagouv/ecolab-data/files/5945898/vehicule_electrique_rapport.pdf\nexport const thermalCarManufacturingFootprint: Record<CarSize, number> = {\n  small: 6700,\n  medium: 6700,\n  vul: 7600,\n  sedan: 7600,\n  suv: 7600,\n};\n\n// https://github.com/betagouv/ecolab-data/files/5945898/vehicule_electrique_rapport.pdf\nexport const hybridCarManufacturingFootprint: Record<CarSize, number> = {\n  small: 9600,\n  medium: 9600,\n  vul: 6900,\n  sedan: 6900,\n  suv: 6900,\n};\n\n// https://github.com/betagouv/ecolab-data/files/5945898/vehicule_electrique_rapport.pdf\nexport const electricCarManufacturingFootprint: Record<CarSize, number> = {\n  small: 10200,\n  medium: 10200,\n  vul: 20200,\n  sedan: 20200,\n  suv: 20200,\n};\n","/**\n * footprint = kgCO2e or kgC02e/km\n */\n\nimport {\n  airConditionerFootprint,\n  averageCarKmPerYear,\n  defaultAverageFootPrintPerLiter,\n  defaultAverageFuelConsumption,\n  defaultEngine,\n  defaultFuelType,\n  defaultSize,\n  electricCarFootprint,\n  electricCarManufacturingFootprint,\n  electricMediumCarFootprint,\n  electricSmallCarFootprint,\n  hybridCarManufacturingFootprint,\n  defaultCarLifetime,\n  sharedCarKmPerYear,\n  thermalCarManufacturingFootprint,\n  thermalMaintenanceFootprint,\n  defaultYears,\n  defaultAveragePassengers,\n} from \"./constants\";\nimport { WithAnnualFootprint } from \"../types\";\n\nexport type CarSize = \"small\" | \"medium\" | \"vul\" | \"sedan\" | \"suv\";\nexport const carSizes: CarSize[] = [\"small\", \"medium\", \"vul\", \"sedan\", \"suv\"];\n\nexport type CarEngine = \"thermal\" | \"hybrid\" | \"electric\";\nexport const carEngines: CarEngine[] = [\"thermal\", \"hybrid\", \"electric\"];\n\nexport type FuelType = \"diesel\" | \"gasoline\" | \"biofuels\";\nexport const fuelTypes: FuelType[] = [\"diesel\", \"gasoline\", \"biofuels\"];\n\ntype Props = {\n  regularUser?: boolean;\n  kmPerYear?: number;\n  size?: CarSize;\n  engine?: CarEngine;\n  fuelType?: FuelType;\n  age?: number;\n  averageFuelConsumption?: number;\n  averagePassengers?: number;\n};\n\nexport class Car implements WithAnnualFootprint {\n  regularUser: boolean;\n  kmPerYear: number;\n  size: CarSize;\n  engine: CarEngine;\n  fuelType: FuelType;\n  age: number;\n  lifetime = defaultCarLifetime;\n  averageFuelConsumption;\n  averagePassengers;\n\n  constructor({\n    regularUser = true,\n    kmPerYear = averageCarKmPerYear,\n    age = defaultYears,\n    size = defaultSize,\n    engine = defaultEngine,\n    fuelType = defaultFuelType,\n    averageFuelConsumption = defaultAverageFuelConsumption.medium, // l/100km\n    averagePassengers = defaultAveragePassengers,\n  }: Props) {\n    this.regularUser = regularUser;\n    this.kmPerYear = kmPerYear;\n    this.size = size;\n    this.engine = engine;\n    this.fuelType = fuelType;\n    this.age = age;\n    this.averageFuelConsumption = averageFuelConsumption;\n    this.averagePassengers = averagePassengers;\n  }\n\n  public initValuesForNonRegularUser() {\n    this.size = defaultSize;\n    this.engine = defaultEngine;\n    this.fuelType = defaultFuelType;\n    this.averageFuelConsumption = defaultAverageFuelConsumption[this.size];\n  }\n\n  public get annualFootprint(): number {\n    if (this.kmPerYear === 0) return 0;\n    if (this.regularUser) return Math.floor(this.regularUserFootprint);\n    return Math.floor(this.nonRegularUserFootprint);\n  }\n\n  private get regularUserFootprint(): number {\n    return (\n      (this.carUseFootprint + this.amortizedManufacturingFootprint) /\n      this.averagePassengers\n    );\n  }\n\n  private get nonRegularUserFootprint(): number {\n    return (\n      ((this.manufacturingFootprint / this.lifetime) * this.rentalFactor +\n        this.carUseFootprint) /\n      this.averagePassengers\n    );\n  }\n\n  private get carUseFootprint(): number {\n    return this.kmPerYear * (this.footprintPerKm + this.footprintBasePerKm);\n  }\n\n  // http://www2.ademe.fr/servlet/KBaseShow?catid=13655\n  private get footprintPerKm(): number {\n    if (this.engine === \"electric\") {\n      if (this.size === \"small\") return electricSmallCarFootprint;\n      if (this.size === \"medium\") return electricMediumCarFootprint;\n      return electricCarFootprint;\n    }\n\n    const thermalCarFootprint =\n      (this.averageFuelConsumption / 100) *\n      defaultAverageFootPrintPerLiter[this.fuelType];\n\n    if (this.engine === \"hybrid\") return thermalCarFootprint * 0.85;\n\n    return thermalCarFootprint;\n  }\n\n  private get footprintBasePerKm(): number {\n    return this.weightedMaintenanceFootprint + this.airConditionerFootprint;\n  }\n\n  // https://izi-by-edf.fr/blog/voiture-hybride-entretien/\n  private get weightedMaintenanceFootprint(): number {\n    if (this.engine === \"hybrid\") return thermalMaintenanceFootprint * 0.9;\n    if (this.engine === \"electric\") return thermalMaintenanceFootprint * 0.75;\n    return thermalMaintenanceFootprint;\n  }\n\n  private get airConditionerFootprint(): number {\n    return airConditionerFootprint;\n  }\n\n  private get amortizedManufacturingFootprint(): number {\n    return this.manufacturingFootprint * this.amortization;\n  }\n\n  private get manufacturingFootprint(): number {\n    if (this.engine === \"hybrid\")\n      return hybridCarManufacturingFootprint[this.size];\n    if (this.engine === \"electric\")\n      return electricCarManufacturingFootprint[this.size];\n    return thermalCarManufacturingFootprint[this.size];\n  }\n\n  private get amortization(): number {\n    if (this.age < 10) return 1 / defaultCarLifetime;\n    return 0;\n  }\n\n  private get rentalFactor(): number {\n    return this.kmPerYear / sharedCarKmPerYear;\n  }\n}\n","import { TwoWheelerType } from \"./TwoWheeler\";\nimport { g45 } from \"../constants\";\n\nexport const defaultTwoWheelerType: TwoWheelerType = \"thermalScooter\";\n\n// cf ADEME - HBEFA (2020)\nexport const twoWheelerDefaultFootprint: Record<TwoWheelerType, number> = {\n  thermalScooter: 0.0763,\n  electricScooter: 0.03,\n  motorbikeLT250: 0.0763,\n  motorbikeGT250: 0.191,\n};\n\n// https://nosgestesclimat.fr/documentation/empreinte-branche/G45?lang=fr\nconst g45VehicleMaintenancePart = 0.07;\nconst g45VehicleBusinessPart = 0.69;\nconst g45MotorbikePart = 0.02;\n\n// https://www.onisr.securite-routiere.gouv.fr/etudes-et-recherches/vehicules/parc-des-vehicules/le-parc-deux-roues-motorises-des-menages\nconst twoWheelerInCirculation = 2700000;\n\n// https://www.statistiques.developpement-durable.gouv.fr/bilan-annuel-des-transports-en-2019-0 (G1-1)\nconst averageTwoWheelerKmPerYear = 3000;\n\nexport const thermalMaintenanceFootprint =\n  (g45 * 1000000 * g45MotorbikePart * g45VehicleMaintenancePart) /\n  (g45VehicleBusinessPart + g45VehicleMaintenancePart) /\n  twoWheelerInCirculation /\n  averageTwoWheelerKmPerYear;\n","import {\n  defaultTwoWheelerType,\n  thermalMaintenanceFootprint,\n  twoWheelerDefaultFootprint,\n} from \"./constants\";\nimport { WithAnnualFootprint } from \"../types\";\n\nexport type TwoWheelerType =\n  | \"thermalScooter\"\n  | \"electricScooter\"\n  | \"motorbikeLT250\"\n  | \"motorbikeGT250\";\n\nexport const TwoWheelerTypes: TwoWheelerType[] = [\n  \"thermalScooter\",\n  \"electricScooter\",\n  \"motorbikeLT250\",\n  \"motorbikeGT250\",\n];\n\ntype Props = {\n  usage?: boolean;\n  type?: TwoWheelerType;\n  kmPerYear?: number;\n};\n\nexport class TwoWheeler implements WithAnnualFootprint {\n  usage: boolean;\n  type: TwoWheelerType;\n  kmPerYear: number;\n\n  constructor({\n    usage = false,\n    type = defaultTwoWheelerType,\n    kmPerYear = 0,\n  }: Props) {\n    this.usage = usage;\n    this.type = type;\n    this.kmPerYear = kmPerYear;\n  }\n\n  public resetValues() {\n    this.usage = false;\n    this.type = defaultTwoWheelerType;\n    this.kmPerYear = 0;\n  }\n\n  public get annualFootprint(): number {\n    if (!this.usage || this.kmPerYear === 0) return 0;\n    return Math.floor(\n      (this.footprintPerKm + this.weightedMaintenanceFootprint) *\n        this.kmPerYear,\n    );\n  }\n\n  private get footprintPerKm(): number {\n    return twoWheelerDefaultFootprint[this.type];\n  }\n\n  private get weightedMaintenanceFootprint(): number {\n    const maintenanceFootprint = this.maintenanceFootprint;\n    if (this.type === \"electricScooter\") return maintenanceFootprint * 0.75;\n    return maintenanceFootprint;\n  }\n\n  private get maintenanceFootprint(): number {\n    return thermalMaintenanceFootprint;\n  }\n}\n","import { Car } from \"./car/Car\";\nimport { TwoWheeler } from \"./two-wheeler/TwoWheeler\";\n\n// TODO : ajouter les autres categories\n\nexport enum TransportCategories {\n  CAR = \"car\",\n  TWO_WHEELER = \"two-wheeler\",\n}\n\ntype Props = {\n  car?: Car;\n  twoWheeler?: TwoWheeler;\n};\n\nexport class Transport {\n  car: Car;\n  twoWheeler: TwoWheeler;\n\n  constructor({ car, twoWheeler }: Props) {\n    this.car = new Car(car ?? {});\n    this.twoWheeler = new TwoWheeler(twoWheeler ?? {});\n  }\n\n  public get annualFootprint(): number {\n    return this.car.annualFootprint + this.twoWheeler.annualFootprint;\n  }\n}\n","import { PublicServices } from \"../../domain/models/public-services/PublicServices\";\nimport { Transport } from \"../../domain/models/transport/Transport\";\nimport { EmissionsRepository } from \"../../domain/repositories/EmissionsRepository\";\n\nexport class EmissionsInMemoryRepository implements EmissionsRepository {\n  private transport: Transport = new Transport({});\n  private publicServices: PublicServices = new PublicServices();\n\n  fetchTransport(): Transport {\n    return this.transport;\n  }\n\n  updateTransport(transport: Transport): void {\n    this.transport = new Transport(transport);\n  }\n\n  fetchPublicServices(): PublicServices {\n    return this.publicServices;\n  }\n\n  injectFakeTransport(transport: Transport): void {\n    this.transport = new Transport(transport);\n  }\n}\n","import { useAppStore } from \"./store\";\nimport { Transport } from \"../../domain/models/transport/Transport\";\n\nexport const appStoreActions = {\n  getTransport: () => useAppStore.getState().transport,\n\n  setTransport: (transport: Transport) =>\n    useAppStore.setState((state) => ({ ...state, transport })),\n};\n","import { PublicServices } from \"../../domain/models/public-services/PublicServices\";\nimport { Transport } from \"../../domain/models/transport/Transport\";\nimport { EmissionsRepository } from \"../../domain/repositories/EmissionsRepository\";\nimport { appStoreActions } from \"../store/storeActions\";\n\nexport class EmissionsStoreRepository implements EmissionsRepository {\n  fetchTransport(): Transport {\n    const storedTransport = appStoreActions.getTransport();\n    const transport = new Transport({\n      car: storedTransport.car,\n      twoWheeler: storedTransport.twoWheeler,\n      // TODO : ajouter les autres catégories\n    });\n    return transport;\n  }\n\n  updateTransport(transport: Transport): void {\n    return appStoreActions.setTransport(transport);\n  }\n\n  fetchPublicServices(): PublicServices {\n    const publicServices = new PublicServices();\n    return publicServices;\n  }\n}\n","import { EmissionsRepository } from \"../repositories/EmissionsRepository\";\n\nexport const createUseComputeTotalAnnualFootprint = (\n  emissionsRepository: EmissionsRepository,\n) =>\n  function useComputeTotalAnnualFootprint() {\n    const computeTotalAnnualFootprint = (): number => {\n      const transport = emissionsRepository.fetchTransport();\n      const publicServices = emissionsRepository.fetchPublicServices();\n\n      // TODO : ajouter les autres catégories\n\n      return transport.annualFootprint + publicServices.annualFootprint;\n    };\n\n    return { computeTotalAnnualFootprint };\n  };\n","import { PublicServices } from \"../models/public-services/PublicServices\";\nimport { EmissionsRepository } from \"../repositories/EmissionsRepository\";\n\nexport const createUseFetchPublicServices = (\n  emissionsRepository: EmissionsRepository,\n) =>\n  function useFetchPublicServices() {\n    const fetchPublicServices = (): PublicServices => {\n      return emissionsRepository.fetchPublicServices();\n    };\n\n    return { fetchPublicServices };\n  };\n","import { Transport } from \"../models/transport/Transport\";\nimport { EmissionsRepository } from \"../repositories/EmissionsRepository\";\n\nexport const createUseFetchTransport = (\n  emissionsRepository: EmissionsRepository,\n) =>\n  function useFetchTransport() {\n    const fetchTransport = (): Transport => {\n      return emissionsRepository.fetchTransport();\n    };\n\n    return { fetchTransport };\n  };\n","import { Car } from \"../models/transport/car/Car\";\nimport { TwoWheeler } from \"../models/transport/two-wheeler/TwoWheeler\";\nimport { EmissionsRepository } from \"../repositories/EmissionsRepository\";\n\nexport const createUseUpdateTransport = (\n  emissionsRepository: EmissionsRepository,\n) =>\n  function useUpdateTransport() {\n    const updateCar = (values: Car) => {\n      const newCar = new Car(values);\n      if (!newCar.regularUser) newCar.initValuesForNonRegularUser();\n\n      const newTransport = emissionsRepository.fetchTransport();\n      newTransport.car = newCar;\n\n      emissionsRepository.updateTransport(newTransport);\n    };\n\n    const updateTwoWheeler = (values: TwoWheeler) => {\n      const newTwoWheeler = new TwoWheeler(values);\n      if (!newTwoWheeler.usage) newTwoWheeler.resetValues();\n\n      const newTransport = emissionsRepository.fetchTransport();\n      newTransport.twoWheeler = newTwoWheeler;\n\n      emissionsRepository.updateTransport(newTransport);\n    };\n\n    return { updateCar, updateTwoWheeler };\n  };\n","import { createContext } from \"react\";\n\nimport { EmissionsInMemoryRepository } from \"../data/repositories/EmissionsInMemoryRepository\";\nimport { EmissionsStoreRepository } from \"../data/repositories/EmissionsStoreRepository\";\nimport { EmissionsRepository } from \"../domain/repositories/EmissionsRepository\";\nimport { createUseComputeTotalAnnualFootprint } from \"../domain/usecases/computeTotalAnnualFootprint\";\nimport { createUseFetchPublicServices } from \"../domain/usecases/fetchPublicServices\";\nimport { createUseFetchTransport } from \"../domain/usecases/fetchTransport\";\nimport { createUseUpdateTransport } from \"../domain/usecases/updateTransport\";\n\nconst isTestMode = process.env.NODE_ENV === \"test\";\n\ninterface Repositories {\n  emissionsRepository: EmissionsRepository;\n}\n\nconst initRealRepositories = () => ({\n  emissionsRepository: new EmissionsStoreRepository(),\n});\n\nexport const initFakeRepositories = () => ({\n  emissionsRepository: new EmissionsInMemoryRepository(),\n});\n\nconst repositories: Repositories = isTestMode\n  ? initFakeRepositories()\n  : initRealRepositories();\n\nconst initUsecases = (repositories: Repositories) => {\n  const { emissionsRepository } = repositories;\n\n  return {\n    useFetchTransport: createUseFetchTransport(emissionsRepository),\n    useUpdateTransport: createUseUpdateTransport(emissionsRepository),\n    useComputeTotalAnnualFootprint:\n      createUseComputeTotalAnnualFootprint(emissionsRepository),\n    useFetchPublicServices: createUseFetchPublicServices(emissionsRepository),\n  };\n};\n\nconst usecases = initUsecases(repositories);\n\nconst UsecasesContext = createContext(usecases);\n\nexport type { Repositories };\nexport { UsecasesContext };\n","import { useContext, useMemo } from \"react\";\n\nimport { FootprintByCategory, Footprints } from \"./Footprint\";\nimport { UsecasesContext } from \"../../common/UsecasesContext\";\nimport { useAppStore } from \"../../data/store/store\";\nimport { FootprintCategories } from \"../../domain/models/Categories\";\n\nexport const useFootprints = () => {\n  const appStore = useAppStore((store) => store);\n\n  const {\n    useFetchTransport,\n    useFetchPublicServices,\n    useComputeTotalAnnualFootprint,\n  } = useContext(UsecasesContext);\n\n  const { computeTotalAnnualFootprint } = useComputeTotalAnnualFootprint();\n  const { fetchTransport } = useFetchTransport();\n  const { fetchPublicServices } = useFetchPublicServices();\n\n  const transport = useMemo(() => fetchTransport(), [appStore]);\n  const publicServices = useMemo(() => fetchPublicServices(), [appStore]);\n  const totalAnnualFootprint = useMemo(\n    () => computeTotalAnnualFootprint(),\n    [appStore],\n  );\n\n  const footprints: Footprints = {\n    transport: new FootprintByCategory(\n      FootprintCategories.TRANSPORT,\n      transport.annualFootprint,\n      totalAnnualFootprint,\n    ),\n    food: new FootprintByCategory(\n      FootprintCategories.FOOD,\n      transport.annualFootprint,\n      totalAnnualFootprint,\n    ),\n    goods: new FootprintByCategory(\n      FootprintCategories.GOODS,\n      transport.annualFootprint,\n      totalAnnualFootprint,\n    ),\n    housing: new FootprintByCategory(\n      FootprintCategories.HOUSING,\n      transport.annualFootprint,\n      totalAnnualFootprint,\n    ),\n    publicServices: new FootprintByCategory(\n      FootprintCategories.PUBLIC_SERVICES,\n      publicServices.annualFootprint,\n      totalAnnualFootprint,\n    ),\n  };\n\n  return { footprints, totalAnnualFootprint };\n};\n","import { ScrollView, View } from \"react-native\";\n\nimport { EmissionsDataTable } from \"./EmissionsDataTable\";\nimport { EmissionsDistribution } from \"./EmissionsDistribution\";\nimport { EmissionsEstimationButton } from \"./EmissionsEstimationButton\";\nimport { EmissionsTitle } from \"./EmissionsTitle\";\nimport { useFootprints } from \"../../view-models/useFootprints\";\n\nexport const Emissions = () => {\n  const { footprints, totalAnnualFootprint } = useFootprints();\n\n  return (\n    <ScrollView\n      contentContainerStyle={{ justifyContent: \"center\", alignItems: \"center\" }}\n    >\n      <View>\n        <EmissionsTitle />\n      </View>\n\n      <View style={{ width: 300 }}>\n        <EmissionsDistribution\n          footprints={footprints}\n          totalFootprint={totalAnnualFootprint}\n        />\n      </View>\n\n      {/* <View style={{ width: \"90%\" }}>\n        <EmissionsGoal />\n      </View> */}\n\n      <View style={{ width: \"90%\" }}>\n        <EmissionsDataTable footprints={footprints} />\n      </View>\n\n      <View style={{ width: \"90%\", marginTop: 20, marginBottom: 20 }}>\n        <EmissionsEstimationButton />\n      </View>\n    </ScrollView>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport { StyleSheet } from \"react-native\";\nimport { Avatar, Card } from \"react-native-paper\";\nimport { IconSource } from \"react-native-paper/lib/typescript/components/Icon\";\n\nimport { FootprintByCategory } from \"../../view-models/Footprint\";\n\ntype Props = {\n  title: string;\n  footprint: FootprintByCategory;\n  icon: IconSource;\n  imageSource?: string;\n  onClick: () => void;\n};\n\nexport const ProfileCategoryCard = ({\n  title,\n  footprint,\n  icon,\n  imageSource,\n  onClick,\n}: Props) => {\n  const { t } = useTranslation(\"common\");\n\n  return (\n    <Card style={styles.card} onPress={onClick}>\n      <Card.Title\n        title={title}\n        subtitle={`${footprint.footprint} ${t(\"footprintKgPerYear\")}`}\n        left={(props: any) => (\n          <Avatar.Icon\n            {...props}\n            icon={icon}\n            style={{ backgroundColor: footprint.color }}\n          />\n        )}\n        right={(props: any) => (\n          <Avatar.Text\n            {...props}\n            label={`${footprint.part} %`}\n            color={footprint.color}\n            style={{\n              backgroundColor: null,\n              borderWidth: 2,\n              borderColor: footprint.color,\n              width: 40,\n              height: 40,\n            }}\n          />\n        )}\n        style={{ paddingRight: 16 }}\n      />\n      <Card.Cover\n        resizeMode=\"contain\"\n        source={{ uri: imageSource }}\n        style={styles.image}\n      />\n    </Card>\n  );\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    width: \"100%\",\n  },\n  image: {\n    height: 150,\n  },\n});\n","import { useNavigation } from \"@react-navigation/native\";\nimport { useTranslation } from \"react-i18next\";\nimport { View, StyleSheet, ScrollView } from \"react-native\";\n\nimport { ProfileCategoryCard } from \"./ProfileCategoryCard\";\nimport { useProfile } from \"./useProfile\";\nimport { AppNavigationProp } from \"../../../common/AppNavigation\";\n\nexport const Profile = () => {\n  const { t } = useTranslation(\"common\");\n\n  const { navigate } = useNavigation<AppNavigationProp>();\n\n  const {\n    transportFootprint,\n    housingFootprint,\n    foodFootprint,\n    goodsFootprint,\n    publicServicesFootprint,\n  } = useProfile();\n\n  return (\n    <ScrollView>\n      <View style={styles.container}>\n        <ProfileCategoryCard\n          title={t(\"transport\")}\n          icon={transportFootprint.materialIcon}\n          footprint={transportFootprint}\n          imageSource={transportFootprint.image}\n          onClick={() => navigate(\"TransportProfile\")}\n        />\n        <ProfileCategoryCard\n          title={t(\"housing\")}\n          icon={housingFootprint.materialIcon}\n          footprint={housingFootprint}\n          imageSource={housingFootprint.image}\n          onClick={() => navigate(\"Profile\")}\n        />\n        <ProfileCategoryCard\n          title={t(\"food\")}\n          icon={foodFootprint.materialIcon}\n          footprint={foodFootprint}\n          imageSource={foodFootprint.image}\n          onClick={() => navigate(\"Profile\")}\n        />\n        <ProfileCategoryCard\n          title={t(\"goods\")}\n          icon={goodsFootprint.materialIcon}\n          footprint={goodsFootprint}\n          imageSource={goodsFootprint.image}\n          onClick={() => navigate(\"Profile\")}\n        />\n        <ProfileCategoryCard\n          title={t(\"publicServices\")}\n          icon={publicServicesFootprint.materialIcon}\n          footprint={publicServicesFootprint}\n          imageSource={publicServicesFootprint.image}\n          onClick={() => navigate(\"Profile\")}\n        />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: 10,\n    gap: 10,\n  },\n});\n","import { FootprintCategories } from \"../../../domain/models/Categories\";\nimport { useFootprints } from \"../../view-models/useFootprints\";\n\nexport const useProfile = () => {\n  const { footprints } = useFootprints();\n\n  return {\n    transportFootprint: footprints[FootprintCategories.TRANSPORT],\n    housingFootprint: footprints[FootprintCategories.HOUSING],\n    foodFootprint: footprints[FootprintCategories.FOOD],\n    goodsFootprint: footprints[FootprintCategories.GOODS],\n    publicServicesFootprint: footprints[FootprintCategories.PUBLIC_SERVICES],\n  };\n};\n","import { StyleSheet } from \"react-native\";\n\nexport const styles = StyleSheet.create({\n  listContentContainer: {\n    padding: 15,\n    paddingLeft: 15, // needed to force the left padding\n  },\n  rowContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    gap: 10,\n  },\n  columnContainer: {\n    flexDirection: \"column\",\n    gap: 10,\n  },\n  divider: {\n    marginTop: 10,\n    marginBottom: 10,\n  },\n});\n","import { PropsWithChildren } from \"react\";\nimport { View } from \"react-native\";\n\nimport { styles } from \"./styles\";\n\nexport const ListContentContainer = ({ children }: PropsWithChildren) => {\n  const { listContentContainer } = styles;\n  return <View style={listContentContainer}>{children}</View>;\n};\n","import { useTranslation } from \"react-i18next\";\nimport { List } from \"react-native-paper\";\n\nimport { ListContentContainer } from \"../../components/ListContentContainer\";\n\nexport const BoatSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n\n  return (\n    <List.Accordion\n      title={t(\"emissions:transport.boat\")}\n      left={(props) => <List.Icon {...props} icon=\"ferry\" />}\n    >\n      <ListContentContainer />\n    </List.Accordion>\n  );\n};\n","export type StringifyProperties<T> = {\n  [K in keyof T]: string;\n};\n\nexport const convertStringToType = (\n  value: string,\n  targetType: unknown,\n): any => {\n  if (targetType === \"string\") {\n    return value;\n  } else if (targetType === \"number\") {\n    return Number(value);\n  } else if (targetType === \"boolean\") {\n    return value === \"true\";\n  }\n\n  throw new Error(\"Unsupported targetType\");\n};\n","import { PropsWithChildren } from \"react\";\nimport { View } from \"react-native\";\n\nimport { styles } from \"./styles\";\n\nexport const ColumnContainer = ({ children }: PropsWithChildren) => {\n  const { columnContainer } = styles;\n  return <View style={columnContainer}>{children}</View>;\n};\n","import { Divider } from \"react-native-paper\";\n\nimport { styles } from \"./styles\";\n\nexport const ListItemDivider = () => {\n  const { divider } = styles;\n  return <Divider style={divider} />;\n};\n","import { View } from \"react-native\";\nimport { Text } from \"react-native-paper\";\n\ntype Props = {\n  title: string;\n  subtitle?: string;\n};\n\nexport const ListTitle = ({ title, subtitle }: Props) => {\n  return (\n    <View style={{ flexDirection: \"column\" }}>\n      <Text variant={subtitle ? \"titleSmall\" : \"titleMedium\"}>{title}</Text>\n      {subtitle && <Text variant=\"bodySmall\">{subtitle}</Text>}\n    </View>\n  );\n};\n","import { PropsWithChildren } from \"react\";\nimport { View } from \"react-native\";\n\nimport { styles } from \"./styles\";\n\nexport const RowContainer = ({ children }: PropsWithChildren) => {\n  const { rowContainer } = styles;\n  return <View style={rowContainer}>{children}</View>;\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { View } from \"react-native\";\nimport {\n  List,\n  TextInput,\n  Text,\n  SegmentedButtons,\n  HelperText,\n  Icon,\n} from \"react-native-paper\";\n\nimport { FormValues, useCar } from \"./useCar\";\nimport {\n  carEngines,\n  carSizes,\n  fuelTypes,\n} from \"../../../../../domain/models/transport/car/Car\";\nimport { ColumnContainer } from \"../../components/ColumnContainer\";\nimport { ListContentContainer } from \"../../components/ListContentContainer\";\nimport { ListItemDivider } from \"../../components/ListItemDivider\";\nimport { ListTitle } from \"../../components/ListTitle\";\nimport { RowContainer } from \"../../components/RowContainer\";\n\nexport const CarSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, regularUser, annualFootprint } = useCar();\n\n  return (\n    <List.Accordion\n      title={\n        <ListTitle\n          title={t(\"emissions:transport.car\")}\n          subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n        />\n      }\n      left={(props) => <List.Icon {...props} icon=\"car\" />}\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 1.5 }}>\n            {t(\"car.kmPerYear\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"kmPerYear\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix text=\"km\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"kmPerYear\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <RowContainer>\n            <Text variant=\"labelLarge\">{t(\"car.regularUser\")}</Text>\n            <Controller<FormValues>\n              name=\"regularUser\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"regularUser\");\n                  }}\n                  buttons={[\n                    { value: \"true\", label: t(\"common:yes\") },\n                    { value: \"false\", label: t(\"common:no\") },\n                  ]}\n                />\n              )}\n            />\n          </RowContainer>\n          {!regularUser && (\n            <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n              <Icon source=\"information\" size={15} />\n              <HelperText\n                type=\"info\"\n                style={{ alignSelf: \"flex-start\", marginTop: 2 }}\n              >\n                {t(\"car.nonRegularUserHelperText\")}\n              </HelperText>\n            </View>\n          )}\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"car.size\")}</Text>\n          <View>\n            <Controller<FormValues>\n              name=\"size\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"size\");\n                  }}\n                  buttons={carSizes.slice(0, 3).map((size) => ({\n                    value: size,\n                    label: t(`car.sizes.${size}`),\n                    disabled: !regularUser,\n                  }))}\n                />\n              )}\n            />\n            <Controller<FormValues>\n              name=\"size\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"size\");\n                  }}\n                  buttons={carSizes.slice(3, 5).map((size) => ({\n                    value: size,\n                    label: t(`car.sizes.${size}`),\n                    disabled: !regularUser,\n                  }))}\n                />\n              )}\n            />\n          </View>\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"car.engine\")}</Text>\n          <Controller<FormValues>\n            name=\"engine\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"engine\");\n                }}\n                buttons={carEngines.map((engine) => ({\n                  value: engine,\n                  label: t(`car.engines.${engine}`),\n                  disabled: !regularUser,\n                }))}\n              />\n            )}\n          />\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"car.fuelType\")}</Text>\n          <Controller<FormValues>\n            name=\"fuelType\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"fuelType\");\n                }}\n                buttons={fuelTypes.map((fuelType) => ({\n                  value: fuelType,\n                  label: t(`car.fuelTypes.${fuelType}`),\n                  disabled: !regularUser,\n                }))}\n              />\n            )}\n          />\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2 }}>\n            {t(\"car.averageFuelConsumption\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"averageFuelConsumption\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                disabled={!regularUser}\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"averageFuelConsumption\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2 }}>\n            {t(\"car.age\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"age\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"age\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 2 }}>\n            {t(\"car.averagePassengers\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"averagePassengers\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"averagePassengers\")}\n                onChangeText={onChange}\n                value={value}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </List.Accordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"../../../../../common/UsecasesContext\";\nimport { useAppStore } from \"../../../../../data/store/store\";\nimport { Car } from \"../../../../../domain/models/transport/car/Car\";\nimport {\n  StringifyProperties,\n  convertStringToType,\n} from \"../../../../../types/utils\";\n\nexport type FormValues = Omit<StringifyProperties<Car>, \"annualFootprint\">;\n\nexport const useCar = () => {\n  const storedCar = useAppStore((store) => store.transport.car);\n  const storedRegularUser = storedCar.regularUser;\n  const annualFootprint = new Car(storedCar).annualFootprint;\n\n  const { useUpdateTransport } = useContext(UsecasesContext);\n  const { updateCar } = useUpdateTransport();\n\n  const getDefaultValues = () => ({\n    kmPerYear: storedCar.kmPerYear.toString(),\n    regularUser: storedCar.regularUser.toString(),\n    size: storedCar.size.toString(),\n    engine: storedCar.engine.toString(),\n    fuelType: storedCar.fuelType.toString(),\n    age: storedCar.age.toString(),\n    averagePassengers: storedCar.averagePassengers.toString(),\n    averageFuelConsumption: storedCar.averageFuelConsumption.toString(),\n  });\n\n  const { control, getValues, watch, reset } = useForm<FormValues>({\n    defaultValues: getDefaultValues(),\n  });\n\n  const handleUpdate = (field: keyof FormValues) => {\n    const stringValue = getValues(field);\n    const value = convertStringToType(stringValue, typeof storedCar[field]);\n    storedCar[field] = value as never;\n    updateCar(storedCar);\n  };\n\n  useEffect(() => {\n    if (!storedRegularUser) reset(getDefaultValues());\n  }, [storedRegularUser]);\n\n  const regularUser = watch(\"regularUser\") === \"true\";\n\n  return { control, handleUpdate, regularUser, annualFootprint };\n};\n","import { useTranslation } from \"react-i18next\";\nimport { List } from \"react-native-paper\";\n\nimport { ListContentContainer } from \"../../components/ListContentContainer\";\n\nexport const HolidaysSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n\n  return (\n    <List.Accordion\n      title={t(\"emissions:transport.holidays\")}\n      left={(props) => <List.Icon {...props} icon=\"tent\" />}\n    >\n      <ListContentContainer />\n    </List.Accordion>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport { List } from \"react-native-paper\";\n\nimport { ListContentContainer } from \"../../components/ListContentContainer\";\n\nexport const OtherSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n\n  return (\n    <List.Accordion\n      title={t(\"emissions:transport.other\")}\n      left={(props) => <List.Icon {...props} icon=\"bike\" />}\n    >\n      <ListContentContainer />\n    </List.Accordion>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport { List } from \"react-native-paper\";\n\nimport { ListContentContainer } from \"../../components/ListContentContainer\";\n\nexport const PlaneSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n\n  return (\n    <List.Accordion\n      title={t(\"emissions:transport.plane\")}\n      left={(props) => <List.Icon {...props} icon=\"airplane\" />}\n    >\n      <ListContentContainer />\n    </List.Accordion>\n  );\n};\n","import { useTranslation } from \"react-i18next\";\nimport { List } from \"react-native-paper\";\n\nimport { ListContentContainer } from \"../../components/ListContentContainer\";\n\nexport const TrainSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n\n  return (\n    <List.Accordion\n      title={t(\"emissions:transport.train\")}\n      left={(props) => <List.Icon {...props} icon=\"train\" />}\n    >\n      <ListContentContainer />\n    </List.Accordion>\n  );\n};\n","import { Controller } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { View } from \"react-native\";\nimport { List, SegmentedButtons, Text, TextInput } from \"react-native-paper\";\n\nimport { FormValues, useTwhoWheeler } from \"./useTwoWheeler\";\nimport { TwoWheelerTypes } from \"../../../../../domain/models/transport/two-wheeler/TwoWheeler\";\nimport { ColumnContainer } from \"../../components/ColumnContainer\";\nimport { ListContentContainer } from \"../../components/ListContentContainer\";\nimport { ListItemDivider } from \"../../components/ListItemDivider\";\nimport { ListTitle } from \"../../components/ListTitle\";\nimport { RowContainer } from \"../../components/RowContainer\";\n\nexport const TwoWheelerSection = () => {\n  const { t } = useTranslation([\"transport\", \"emissions\", \"common\"]);\n  const { control, handleUpdate, usage, annualFootprint } = useTwhoWheeler();\n\n  return (\n    <List.Accordion\n      title={\n        <ListTitle\n          title={t(\"emissions:transport.twoWheeler\")}\n          subtitle={`${annualFootprint} ${t(\"common:footprintKgPerYear\")}`}\n        />\n      }\n      left={(props) => <List.Icon {...props} icon=\"motorbike\" />}\n    >\n      <ListContentContainer>\n        <RowContainer>\n          <Text variant=\"labelLarge\">{t(\"twoWheeler.usage\")}</Text>\n          <Controller<FormValues>\n            name=\"usage\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <SegmentedButtons\n                density=\"small\"\n                value={value}\n                onValueChange={(e) => {\n                  onChange(e);\n                  handleUpdate(\"usage\");\n                }}\n                buttons={[\n                  { value: \"true\", label: t(\"common:yes\") },\n                  { value: \"false\", label: t(\"common:no\") },\n                ]}\n              />\n            )}\n          />\n        </RowContainer>\n\n        <ListItemDivider />\n\n        <ColumnContainer>\n          <Text variant=\"labelLarge\">{t(\"twoWheeler.type\")}</Text>\n          <View>\n            <Controller<FormValues>\n              name=\"type\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"type\");\n                  }}\n                  buttons={TwoWheelerTypes.slice(0, 2).map((type) => ({\n                    value: type,\n                    label: t(`twoWheeler.types.${type}`),\n                    disabled: !usage,\n                  }))}\n                />\n              )}\n            />\n            <Controller<FormValues>\n              name=\"type\"\n              control={control}\n              render={({ field: { onChange, value } }) => (\n                <SegmentedButtons\n                  density=\"small\"\n                  value={value}\n                  onValueChange={(e) => {\n                    onChange(e);\n                    handleUpdate(\"type\");\n                  }}\n                  buttons={TwoWheelerTypes.slice(2, 4).map((type) => ({\n                    value: type,\n                    label: t(`twoWheeler.types.${type}`),\n                    disabled: !usage,\n                  }))}\n                />\n              )}\n            />\n          </View>\n        </ColumnContainer>\n\n        <ListItemDivider />\n\n        <RowContainer>\n          <Text variant=\"labelLarge\" style={{ flex: 1.5 }}>\n            {t(\"car.kmPerYear\")}\n          </Text>\n          <Controller<FormValues>\n            name=\"kmPerYear\"\n            control={control}\n            render={({ field: { onChange, value } }) => (\n              <TextInput\n                dense\n                mode=\"outlined\"\n                keyboardType=\"numeric\"\n                right={<TextInput.Affix text=\"km\" />}\n                style={{ flex: 1 }}\n                onBlur={() => handleUpdate(\"kmPerYear\")}\n                onChangeText={onChange}\n                value={value}\n                disabled={!usage}\n              />\n            )}\n          />\n        </RowContainer>\n      </ListContentContainer>\n    </List.Accordion>\n  );\n};\n","import { useContext, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nimport { UsecasesContext } from \"../../../../../common/UsecasesContext\";\nimport { useAppStore } from \"../../../../../data/store/store\";\nimport { TwoWheeler } from \"../../../../../domain/models/transport/two-wheeler/TwoWheeler\";\nimport {\n  StringifyProperties,\n  convertStringToType,\n} from \"../../../../../types/utils\";\n\nexport type FormValues = Omit<\n  StringifyProperties<TwoWheeler>,\n  \"annualFootprint\"\n>;\n\nexport const useTwhoWheeler = () => {\n  const storedTwoWheeler = useAppStore((store) => store.transport.twoWheeler);\n  const storedTwoWheelerUsage = storedTwoWheeler.usage;\n  const annualFootprint = new TwoWheeler(storedTwoWheeler).annualFootprint;\n\n  const { useUpdateTransport } = useContext(UsecasesContext);\n  const { updateTwoWheeler } = useUpdateTransport();\n\n  const getDefaultValues = () => ({\n    kmPerYear: storedTwoWheeler.kmPerYear.toString(),\n    type: storedTwoWheeler.type.toString(),\n    usage: storedTwoWheeler.usage.toString(),\n  });\n\n  const { control, getValues, watch, reset } = useForm<FormValues>({\n    defaultValues: getDefaultValues(),\n  });\n\n  const handleUpdate = (field: keyof FormValues) => {\n    const stringValue = getValues(field);\n    const value = convertStringToType(\n      stringValue,\n      typeof storedTwoWheeler[field],\n    );\n    storedTwoWheeler[field] = value as never;\n    updateTwoWheeler(storedTwoWheeler);\n  };\n\n  useEffect(() => {\n    if (!storedTwoWheelerUsage) reset(getDefaultValues());\n  }, [storedTwoWheelerUsage]);\n\n  const usage = watch(\"usage\") === \"true\";\n\n  return { control, handleUpdate, usage, annualFootprint };\n};\n","import { ScrollView } from \"react-native\";\nimport { Divider, List } from \"react-native-paper\";\n\nimport { BoatSection } from \"./boat/BoatSection\";\nimport { CarSection } from \"./car/CarSection\";\nimport { HolidaysSection } from \"./holidays/HolidaysSection\";\nimport { OtherSection } from \"./other/OtherSection\";\nimport { PlaneSection } from \"./plane/PlaneSection\";\nimport { TrainSection } from \"./train/TrainSection\";\nimport { TwoWheelerSection } from \"./two-wheeler/TwoWheelerSection\";\n\nexport const TransportProfile = () => {\n  return (\n    <ScrollView>\n      <List.Section>\n        <CarSection />\n        <Divider />\n        <TwoWheelerSection />\n        <Divider />\n        <PlaneSection />\n        <Divider />\n        <BoatSection />\n        <Divider />\n        <TrainSection />\n        <Divider />\n        <HolidaysSection />\n        <Divider />\n        <OtherSection />\n      </List.Section>\n    </ScrollView>\n  );\n};\n","import Icons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport {\n  NativeStackNavigationProp,\n  createNativeStackNavigator,\n} from \"@react-navigation/native-stack\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { Emissions } from \"../view/screens/emissions/Emissions\";\nimport { Profile } from \"../view/screens/profile/Profile\";\nimport { TransportProfile } from \"../view/screens/profile/transport/Transport\";\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\ntype RootStackParamList = {\n  Home: undefined;\n  Profile: undefined;\n  TransportProfile: undefined;\n};\n\nexport type AppNavigationProp = NativeStackNavigationProp<RootStackParamList>;\n\nconst iconSize = 24;\n\nexport const AppNavigation = () => {\n  const { t } = useTranslation(\"common\");\n\n  return (\n    <Stack.Navigator initialRouteName=\"Home\">\n      <Stack.Screen\n        name=\"Home\"\n        component={TabNavigator}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen\n        name=\"Profile\"\n        component={Profile}\n        options={{ title: t(\"screens.Profile\") }}\n      />\n      <Stack.Screen\n        name=\"TransportProfile\"\n        component={TransportProfile}\n        options={{ title: t(\"screens.Transport\") }}\n      />\n    </Stack.Navigator>\n  );\n};\n\nconst TabNavigator = () => {\n  const { t } = useTranslation(\"common\");\n\n  return (\n    <Tab.Navigator\n      initialRouteName=\"Emissions\"\n      screenOptions={{\n        // headerShown: false,\n        tabBarLabelPosition: \"below-icon\",\n        tabBarStyle: { height: 50, paddingBottom: 5 },\n      }}\n    >\n      <Tab.Screen\n        name=\"Emissions\"\n        component={Emissions}\n        options={{\n          title: t(\"screens.Emissions\"),\n          tabBarIcon: ({ focused, color }) => {\n            return (\n              <Icons\n                name={focused ? \"home\" : \"home-outline\"}\n                size={iconSize}\n                color={color}\n              />\n            );\n          },\n        }}\n      />\n      <Tab.Screen\n        name=\"TODO\"\n        component={Emissions}\n        options={{\n          // title: t(\"screens.Emissions\"),\n          tabBarIcon: ({ color }) => {\n            return <Icons name=\"tools\" size={iconSize} color={color} />;\n          },\n        }}\n      />\n      <Tab.Screen\n        name=\"TODO2\"\n        component={Emissions}\n        options={{\n          // title: t(\"screens.Emissions\"),\n          tabBarIcon: ({ color }) => {\n            return <Icons name=\"tools\" size={iconSize} color={color} />;\n          },\n        }}\n      />\n      <Tab.Screen\n        name=\"TODO3\"\n        component={Emissions}\n        options={{\n          // title: t(\"screens.Emissions\"),\n          tabBarIcon: ({ color }) => {\n            return <Icons name=\"tools\" size={iconSize} color={color} />;\n          },\n        }}\n      />\n    </Tab.Navigator>\n  );\n};\n","/* eslint-disable no-undef */\n/* eslint-disable prettier/prettier */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  const isEnvProduction = process.env.NODE_ENV === \"production\";\n  if (isEnvProduction && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\nimport * as fr from \"./fr\";\n\nconst resources = { fr };\n\ni18n.use(initReactI18next).init({\n  resources,\n  lng: \"fr\",\n  interpolation: {\n    escapeValue: false, // react already safes from xss\n  },\n});\n\nexport default i18n;\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { registerRootComponent } from \"expo\";\nimport { useEffect, useState } from \"react\";\nimport {\n  Linking,\n  Platform,\n  SafeAreaView,\n  StyleSheet,\n  View,\n} from \"react-native\";\nimport { ActivityIndicator, PaperProvider } from \"react-native-paper\";\n\nimport { AppTheme } from \"./AppTheme\";\nimport { AppNavigation } from \"./src/common/AppNavigation\";\nimport * as serviceWorkerRegistration from \"./src/serviceWorkerRegistration\";\n\nimport \"./src/view/traductions/i18n\";\n\nconst PERSISTENCE_KEY = \"NAVIGATION_STATE_V1\";\n\nconst App = () => {\n  const [isReady, setIsReady] = useState(!__DEV__);\n  const [initialState, setInitialState] = useState();\n\n  useEffect(() => {\n    const restoreState = async () => {\n      try {\n        const initialUrl = await Linking.getInitialURL();\n        if (__DEV__ || (Platform.OS !== \"web\" && initialUrl == null)) {\n          // Only restore state if there's no deep link and we're not on web\n          const savedStateString = await AsyncStorage.getItem(PERSISTENCE_KEY);\n          const state = savedStateString\n            ? JSON.parse(savedStateString)\n            : undefined;\n          if (state !== undefined) setInitialState(state);\n        }\n      } finally {\n        setIsReady(true);\n      }\n    };\n\n    if (!isReady) restoreState();\n  }, [isReady]);\n\n  if (!isReady) return <ActivityIndicator />;\n\n  return (\n    <PaperProvider theme={AppTheme}>\n      <NavigationContainer\n        theme={AppTheme}\n        initialState={initialState}\n        onStateChange={(state) =>\n          AsyncStorage.setItem(PERSISTENCE_KEY, JSON.stringify(state))\n        }\n      >\n        <SafeAreaView style={styles.container}>\n          <View style={styles.content}>\n            <AppNavigation />\n          </View>\n        </SafeAreaView>\n      </NavigationContainer>\n    </PaperProvider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n  },\n  content: {\n    flex: 1,\n    width: \"100%\",\n    maxWidth: 550,\n  },\n});\n\nexport default registerRootComponent(App);\n\nserviceWorkerRegistration.register();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/impact/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [952], () => (__webpack_require__(1559)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["MaterialTheme","_objectSpread","MD3DarkTheme","colors","primary","onPrimary","inversePrimary","AppTheme","merge","NavigationTheme","EmissionsDataTable","_ref","footprints","t","useTranslation","useTheme","_jsxs","DataTable","children","Header","_jsx","Title","numeric","Object","values","sort","a","b","footprint","map","emissionsCategory","Row","Cell","style","alignItems","category","View","width","height","borderRadius","backgroundColor","color","flexDirection","justifyContent","Text","background","fontSize","part","EmissionsDistribution","totalFootprint","footprintByCategories","viewBox","VictoryPie","colorScale","_ref2","standalone","radius","innerRadius","labelRadius","labels","data","_ref3","x","icon","y","VictoryLabel","textAnchor","fill","onBackground","pieWidth","pieHeight","text","toFixed","EmissionsEstimationButton","navigate","useNavigation","Button","mode","textColor","contentStyle","labelStyle","onPress","EmissionsTitle","variant","paddingTop","textAlign","f","FootprintCategories","FootprintByCategory","_createClass","_this","_classCallCheck","image","computePart","Math","floor","this","TRANSPORT","materialIcon","transportImage","FOOD","foodImage","HOUSING","housingImage","GOODS","goodsImage","PUBLIC_SERVICES","publicServicesImage","PublicServices","key","get","defaultSize","defaultEngine","defaultFuelType","defaultAverageFuelConsumption","small","medium","vul","sedan","suv","defaultAverageFootPrintPerLiter","diesel","gasoline","biofuels","averageCarKmPerYear","thermalMaintenanceFootprint","g45","thermalCarManufacturingFootprint","hybridCarManufacturingFootprint","electricCarManufacturingFootprint","carSizes","carEngines","fuelTypes","Car","_ref$regularUser","regularUser","_ref$kmPerYear","kmPerYear","_ref$age","age","_ref$size","size","_ref$engine","engine","_ref$fuelType","fuelType","_ref$averageFuelConsu","averageFuelConsumption","_ref$averagePassenger","averagePassengers","lifetime","value","regularUserFootprint","nonRegularUserFootprint","carUseFootprint","amortizedManufacturingFootprint","manufacturingFootprint","rentalFactor","footprintPerKm","footprintBasePerKm","thermalCarFootprint","weightedMaintenanceFootprint","airConditionerFootprint","fluorinatedGasEmissions","amortization","defaultTwoWheelerType","twoWheelerDefaultFootprint","thermalScooter","electricScooter","motorbikeLT250","motorbikeGT250","TwoWheelerTypes","TwoWheeler","_ref$usage","usage","_ref$type","type","maintenanceFootprint","Transport","TransportCategories","car","twoWheeler","annualFootprint","EmissionsInMemoryRepository","transport","publicServices","useAppStore","create","devtools","persist","name","storage","createJSONStorage","AsyncStorage","persistedState","currentState","deepMerge","appStoreActions","getState","setState","state","EmissionsStoreRepository","storedTransport","createUseComputeTotalAnnualFootprint","emissionsRepository","computeTotalAnnualFootprint","fetchTransport","fetchPublicServices","createUseFetchPublicServices","createUseFetchTransport","createUseUpdateTransport","updateCar","newCar","initValuesForNonRegularUser","newTransport","updateTransport","updateTwoWheeler","newTwoWheeler","resetValues","usecases","repositories","useFetchTransport","useUpdateTransport","useComputeTotalAnnualFootprint","useFetchPublicServices","initUsecases","UsecasesContext","createContext","useFootprints","appStore","store","_useContext","useContext","useMemo","totalAnnualFootprint","food","goods","housing","Emissions","_useFootprints","ScrollView","contentContainerStyle","marginTop","marginBottom","ProfileCategoryCard","title","imageSource","onClick","Card","styles","card","subtitle","left","props","Avatar","right","label","borderWidth","borderColor","paddingRight","Cover","resizeMode","source","uri","StyleSheet","Profile","_useProfile","transportFootprint","housingFootprint","foodFootprint","goodsFootprint","publicServicesFootprint","useProfile","container","padding","gap","listContentContainer","paddingLeft","rowContainer","columnContainer","divider","ListContentContainer","BoatSection","List","convertStringToType","targetType","Number","Error","ColumnContainer","ListItemDivider","Divider","ListTitle","RowContainer","CarSection","_useCar","storedCar","storedRegularUser","getDefaultValues","toString","_useForm","useForm","defaultValues","control","getValues","watch","reset","useEffect","handleUpdate","field","stringValue","useCar","flex","Controller","render","_ref$field","onChange","TextInput","dense","keyboardType","Affix","onBlur","onChangeText","_ref2$field","SegmentedButtons","density","onValueChange","e","buttons","Icon","HelperText","alignSelf","_ref3$field","slice","disabled","_ref4","_ref4$field","_ref5","_ref5$field","_ref6","_ref6$field","_ref7","_ref7$field","_ref8","_ref8$field","_ref9","_ref9$field","HolidaysSection","OtherSection","PlaneSection","TrainSection","TwoWheelerSection","_useTwhoWheeler","storedTwoWheeler","storedTwoWheelerUsage","useTwhoWheeler","TransportProfile","Stack","createNativeStackNavigator","Tab","createBottomTabNavigator","AppNavigation","Navigator","initialRouteName","Screen","component","TabNavigator","options","headerShown","screenOptions","tabBarLabelPosition","tabBarStyle","paddingBottom","tabBarIcon","focused","Icons","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","resources","fr","i18n","initReactI18next","init","lng","interpolation","escapeValue","PERSISTENCE_KEY","content","maxWidth","registerRootComponent","_useState","useState","_useState2","_slicedToArray","isReady","setIsReady","_useState3","_useState4","initialState","setInitialState","restoreState","_asyncToGenerator","initialUrl","Linking","getInitialURL","Platform","OS","savedStateString","getItem","JSON","parse","undefined","apply","arguments","PaperProvider","theme","NavigationContainer","onStateChange","setItem","stringify","SafeAreaView","ActivityIndicator","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","id","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","obj","ns","def","current","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}